{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "buyCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ClaimParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "collateralRatio",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "compensate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CompensateParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "creditPositionToCompensateId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "copyLimitOrders",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CopyLimitOrdersParams",
          "components": [
            {
              "name": "copyAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "copyLoanOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            },
            {
              "name": "copyBorrowOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "data",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DataView",
          "components": [
            {
              "name": "nextDebtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nextCreditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "collateralToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "borrowAToken",
              "type": "address",
              "internalType": "contract NonTransferrableScaledTokenV1_5"
            },
            {
              "name": "debtToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "contract IPool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "debtTokenAmountToCollateralTokenAmount",
      "inputs": [
        {
          "name": "borrowATokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "feeConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBorrowOfferAPR",
      "inputs": [
        { "name": "borrower", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBuyCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCreditPosition",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct CreditPosition",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            { "name": "forSale", "type": "bool", "internalType": "bool" },
            { "name": "credit", "type": "uint256", "internalType": "uint256" },
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPosition",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DebtPosition",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "futureValue",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "dueDate", "type": "uint256", "internalType": "uint256" },
            {
              "name": "liquidityIndexAtRepayment",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPositionAssignedCollateral",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanOfferAPR",
      "inputs": [
        { "name": "lender", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanStatus",
      "inputs": [
        { "name": "positionId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "uint8", "internalType": "enum LoanStatus" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPositionsCount",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSellCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "creditAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSwapFee",
      "inputs": [
        { "name": "cash", "type": "uint256", "internalType": "uint256" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserCopyLimitOrders",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserCopyLimitOrders",
          "components": [
            {
              "name": "copyAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "copyLoanOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            },
            {
              "name": "copyBorrowOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserView",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserView",
          "components": [
            {
              "name": "user",
              "type": "tuple",
              "internalType": "struct User",
              "components": [
                {
                  "name": "loanOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "borrowOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            { "name": "account", "type": "address", "internalType": "address" },
            {
              "name": "collateralTokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "debtBalance",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        {
          "name": "f",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "r",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowAToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenCap",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "o",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        },
        {
          "name": "d",
          "type": "tuple",
          "internalType": "struct InitializeDataParams",
          "components": [
            { "name": "weth", "type": "address", "internalType": "address" },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "borrowATokenV1_5",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isCreditPositionId",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionId",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionLiquidatable",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isUserUnderwater",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "deadline", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "liquidateWithReplacement",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateWithReplacementParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "liquidatorProfitBorrowToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multicall",
      "inputs": [
        { "name": "_data", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [
        { "name": "results", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "oracle",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct RepayParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "riskConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowAToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenCap",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "selfLiquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SelfLiquidateParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfiguration",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationParams",
          "components": [
            {
              "name": "openingLimitBorrowCR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allCreditPositionsForSaleDisabled",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIdsForSale",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setVariablePoolBorrowRate",
      "inputs": [
        { "name": "borrowRate", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateConfig",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct UpdateConfigParams",
          "components": [
            { "name": "key", "type": "string", "internalType": "string" },
            { "name": "value", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct WithdrawParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VariablePoolBorrowRateUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "newBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AccessControlBadConfirmation", "inputs": [] },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "neededRole", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "EnforcedPause", "inputs": [] },
    { "type": "error", "name": "ExpectedPause", "inputs": [] },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    { "type": "error", "name": "NULL_OFFER", "inputs": [] },
    { "type": "error", "name": "NULL_TENOR", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    {
      "type": "error",
      "name": "TENOR_OUT_OF_RANGE",
      "inputs": [
        { "name": "tenor", "type": "uint256", "internalType": "uint256" },
        { "name": "minTenor", "type": "uint256", "internalType": "uint256" },
        { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "USER_IS_UNDERWATER",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "cr", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051615af5620001005f395f8181613293015281816132bc01526133fd0152615af55ff3fe608060405260043610610327575f3560e01c806361a10df2116101a3578063b36116f6116100f2578063e05001f511610092578063f45bf01c1161006d578063f45bf01c14610ad4578063f731a57a14610ae7578063f85c3cd414610b06578063fd17174a14610b25575f80fd5b8063e05001f514610a8f578063e5af06ce14610aa2578063f052e7a414610ac1575f80fd5b8063ccc96815116100cd578063ccc9681514610a2b578063ccd8d4d114610a4a578063d547741f14610a5d578063d8d933a514610a7c575f80fd5b8063b36116f6146109b4578063b5ec7487146109e0578063ca40742c14610a0c575f80fd5b80637f417c061161015d57806391d148541161013857806391d1485414610932578063a217fddf14610951578063ac9650d814610964578063ad3cb1cc14610984575f80fd5b80637f417c06146108f85780638456cb591461090b5780638e5727761461091f575f80fd5b806361a10df2146106ca57806364eb0a71146106e957806373d4a13a1461070857806376c1b82f1461082c5780637c90a6ca146108585780637dc0d1d0146108b7575f80fd5b80632ed28ba2116102795780634cbd882c1161021957806354137c7e116101f457806354137c7e1461062557806354fd4d50146106445780635c975abb1461067b5780635cbc51eb1461069e575f80fd5b80634cbd882c146105df5780634f1ef286146105fe57806352d1902d14610611575f80fd5b80633746f858116102545780633746f85814610579578063375019211461058c5780633e3c119b146105b85780633f4ba83a146105cb575f80fd5b80632ed28ba21461050f5780632f2ff15d1461053b57806336568abe1461055a575f80fd5b80631ca3b0cb116102e45780632b4c9a20116102bf5780632b4c9a20146104ab5780632c60185c146104be5780632cc884c5146104dd5780632e106f21146104fc575f80fd5b80631ca3b0cb146103ff5780631e5eb1d014610428578063248a9ca31461048c575f80fd5b806301ffc9a71461032b5780630317b9df1461035f5780630cf8542f146103805780631970e5ea1461039357806319a7359b146103c05780631c4fd41c146103d3575b5f80fd5b348015610336575f80fd5b5061034a6103453660046144a9565b610b38565b60405190151581526020015b60405180910390f35b34801561036a575f80fd5b5061037e6103793660046144e6565b610b6e565b005b61037e61038e366004614527565b610c46565b34801561039e575f80fd5b506103b26103ad366004614541565b610d1b565b604051908152602001610356565b61037e6103ce366004614558565b610d26565b3480156103de575f80fd5b506103f26103ed366004614541565b610edc565b6040516103569190614568565b34801561040a575f80fd5b50610413610f57565b60408051928352602083019190915201610356565b348015610433575f80fd5b5061043c610f8a565b6040516103569190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b348015610497575f80fd5b506103b26104a6366004614541565b61103c565b61037e6104b9366004614527565b61105c565b3480156104c9575f80fd5b506103b26104d836600461458e565b611102565b3480156104e8575f80fd5b506103b26104f73660046145c2565b611135565b61037e61050a3660046145ec565b611141565b34801561051a575f80fd5b5061052e610529366004614731565b6111e7565b6040516103569190614779565b348015610546575f80fd5b5061037e6105553660046147d8565b611268565b348015610565575f80fd5b5061037e6105743660046147d8565b61128a565b61037e6105873660046144e6565b6112c2565b348015610597575f80fd5b506105ab6105a6366004614731565b611368565b6040516103569190614806565b6104136105c6366004614862565b6113e9565b3480156105d6575f80fd5b5061037e61165a565b3480156105ea575f80fd5b5061037e6105f936600461487c565b61168f565b61037e61060c3660046148a2565b61172e565b34801561061c575f80fd5b506103b261174d565b348015610630575f80fd5b506103b261063f366004614541565b611768565b34801561064f575f80fd5b5060408051808201909152600681526576312e362e3160d01b60208201525b6040516103569190614990565b348015610686575f80fd5b505f80516020615aa08339815191525460ff1661034a565b3480156106a9575f80fd5b506106bd6106b83660046149a2565b611893565b6040516103569190614a8b565b3480156106d5575f80fd5b5061037e6106e4366004614b3d565b611ca5565b3480156106f4575f80fd5b5061034a610703366004614541565b611f2a565b348015610713575f80fd5b506107bb60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e0928301519091169181019190915261010001610356565b348015610837575f80fd5b5061084b610846366004614541565b611f36565b6040516103569190614ba7565b348015610863575f80fd5b5061086c611ffc565b60405161035691905f60c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b3480156108c2575f80fd5b506108cb6120a0565b6040805182516001600160a01b031681526020928301516001600160401b03169281019290925201610356565b61037e610906366004614bb5565b612123565b348015610916575f80fd5b5061037e6121c7565b61037e61092d366004614527565b6121f9565b34801561093d575f80fd5b5061034a61094c3660046147d8565b61247d565b34801561095c575f80fd5b506103b25f81565b610977610972366004614bcf565b6124b3565b6040516103569190614c3d565b34801561098f575f80fd5b5061066e604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156109bf575f80fd5b506109d36109ce3660046149a2565b6124c8565b6040516103569190614c9f565b3480156109eb575f80fd5b506109ff6109fa366004614541565b612580565b6040516103569190614d2c565b348015610a17575f80fd5b506103b2610a263660046149a2565b612666565b348015610a36575f80fd5b5061034a610a45366004614541565b6126e9565b61037e610a583660046144e6565b6126f4565b348015610a68575f80fd5b5061037e610a773660046147d8565b61279a565b61037e610a8a366004614731565b6127b6565b6103b2610a9d366004614527565b6128e8565b348015610aad575f80fd5b5061034a610abc366004614541565b612a3d565b61037e610acf366004614d60565b612ab9565b61037e610ae2366004614d81565b612b5f565b348015610af2575f80fd5b5061034a610b013660046149a2565b612c0a565b348015610b11575f80fd5b506103b2610b203660046145c2565b612c53565b61037e610b33366004614d81565b612c5f565b5f6001600160e01b03198216637965db0b60e01b1480610b6857506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f610b7881612d0a565b60405163e57980dd60e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063e57980dd90610bb1905f908690600401614d9b565b5f6040518083038186803b158015610bc7575f80fd5b505af4158015610bd9573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9250634752b3b39150610c16905f908690600401614d9b565b5f6040518083038186803b158015610c2c575f80fd5b505af4158015610c3e573d5f803e3d5ffd5b505050505050565b610c4e612d14565b604051638046123560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__90638046123590610c87905f908590600401614e5e565b5f6040518083038186803b158015610c9d575f80fd5b505af4158015610caf573d5f803e3d5ffd5b50506040516387e2411560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__92506387e241159150610cec905f908590600401614e5e565b5f6040518083038186803b158015610d02575f80fd5b505af4158015610d14573d5f803e3d5ffd5b5050505050565b5f610b688183612d46565b610d2e612d14565b604051631621030760e01b815273__$40338b66eef5a4814456f5e5d0057a85cb$__90631621030790610d67905f908590600401614e72565b5f6040518083038186803b158015610d7d575f80fd5b505af4158015610d8f573d5f803e3d5ffd5b505060405163b71df57f60e01b81525f925073__$40338b66eef5a4814456f5e5d0057a85cb$__915063b71df57f90610dce9084908690600401614e72565b602060405180830381865af4158015610de9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e0d9190614ee4565b90505f19826020013503610e9e5773__$54339234670bed530be64a2569bfcff861$__632d77afb65f610e4360208601866149a2565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015b5f6040518083038186803b158015610e87575f80fd5b505af4158015610e99573d5f803e3d5ffd5b505050505b60405163bfbfe8ab60e01b81525f60048201526024810182905273__$5e1dc6026664d540c986e6d76069f97e44$__9063bfbfe8ab90604401610c16565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$137de846162d19becd7adae071bc6b8643$__90637d62a7e090604401602060405180830381865af4158015610f33573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b689190614efb565b6011545f908190610f69908290614f2d565b610f7560025f19614f40565b601254610f829190614f2d565b915091509091565b610fc66040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__906386617e779060240160c060405180830381865af4158015611013573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110379190614f5f565b905090565b5f9081525f80516020615a80833981519152602052604090206001015490565b611064612d14565b60405163010cc09b60e21b815273__$d7ed34c1233366b4d2093a06a83503a127$__90630433026c9061109d905f908590600401614e5e565b5f6040518083038186803b1580156110b3575f80fd5b505af41580156110c5573d5f803e3d5ffd5b505060405163b8359e9760e01b815273__$d7ed34c1233366b4d2093a06a83503a127$__925063b8359e979150610cec905f908590600401614e5e565b5f815f03611123576040516301c85f6760e71b815260040160405180910390fd5b61112e5f8484612f46565b9392505050565b5f61112e818484612f6b565b611149612d14565b60405163603ed05b60e01b815273__$522109956a60eeb242799fac64155e2c7d$__9063603ed05b90611182905f908590600401615031565b5f6040518083038186803b158015611198575f80fd5b505af41580156111aa573d5f803e3d5ffd5b505060405163153f43e560e31b815273__$522109956a60eeb242799fac64155e2c7d$__925063a9fa1f289150610cec905f908590600401615031565b6111ef6142fd565b604051631c81982560e11b815273__$40338b66eef5a4814456f5e5d0057a85cb$__90633903304a90611228905f90869060040161508f565b61014060405180830381865af4158015611244573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b689190615162565b6112718261103c565b61127a81612d0a565b6112848383613108565b50505050565b6001600160a01b03811633146112b35760405163334bd91960e11b815260040160405180910390fd5b6112bd82826131b0565b505050565b6112ca612d14565b604051634cf319b960e11b815273__$bb87e4d06c905b2a40fd4eb630d02af12b$__906399e6337290611303905f908590600401615296565b5f6040518083038186803b158015611319575f80fd5b505af415801561132b573d5f803e3d5ffd5b505060405163339bb63160e01b815273__$bb87e4d06c905b2a40fd4eb630d02af12b$__925063339bb6319150610cec905f908590600401615296565b611370614343565b60405163301d1d1560e21b815273__$6a70d15ccab52e60961e0e6eac4956e318$__9063c0747454906113a9905f90869060040161508f565b61012060405180830381865af41580156113c5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b6891906152ae565b5f806113f3612d14565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab61141d81612d0a565b604051639f53ee0f60e01b815273__$083884a3186f9b2b23885dfeba78ff7244$__90639f53ee0f90611456905f90889060040161534f565b5f6040518083038186803b15801561146c575f80fd5b505af415801561147e573d5f803e3d5ffd5b505060405163647a4b7560e11b81525f925073__$083884a3186f9b2b23885dfeba78ff7244$__915063c8f496ea906114bd908490899060040161534f565b606060405180830381865af41580156114d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114fc9190615363565b9095509350905073__$54339234670bed530be64a2569bfcff861$__632d77afb65f61152e6040890160208a016149a2565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b158015611571575f80fd5b505af4158015611583573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$083884a3186f9b2b23885dfeba78ff7244$__9250636e6595c191506115c2905f908990899060040161538e565b5f6040518083038186803b1580156115d8575f80fd5b505af41580156115ea573d5f803e3d5ffd5b505060405163bfbfe8ab60e01b81525f60048201526024810184905273__$5e1dc6026664d540c986e6d76069f97e44$__925063bfbfe8ab91506044015f6040518083038186803b15801561163d575f80fd5b505af415801561164f573d5f803e3d5ffd5b505050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61168481612d0a565b61168c613229565b50565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240386116b981612d0a565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611736613288565b61173f8261332c565b6117498282613336565b5050565b5f6117566133f2565b505f80516020615a6083398151915290565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$137de846162d19becd7adae071bc6b8643$__90639930537e90604401602060405180830381865af41580156117c1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117e59190614ee4565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$137de846162d19becd7adae071bc6b8643$__906345ffd36d90611854905f9085906004016153b0565b602060405180830381865af415801561186f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061112e9190614ee4565b61189b61437a565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b0194919390928492849184018282801561192d57602002820191905f5260205f20905b815481526020019060010190808311611919575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561198357602002820191905f5260205f20905b81548152602001906001019080831161196f575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156119d957602002820191905f5260205f20905b8154815260200190600101908083116119c5575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015611a5f57602002820191905f5260205f20905b815481526020019060010190808311611a4b575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611ab557602002820191905f5260205f20905b815481526020019060010190808311611aa1575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611b0b57602002820191905f5260205f20905b815481526020019060010190808311611af7575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa158015611b91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bb59190614ee4565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611c05573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c299190614ee4565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611c79573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c9d9190614ee4565b905292915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f81158015611ce95750825b90505f826001600160401b03166001148015611d045750303b155b905081158015611d12575080155b15611d305760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611d5a57845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__906369777eb990611d9b905f908e908e908e908e908e90600401615501565b5f6040518083038186803b158015611db1575f80fd5b505af4158015611dc3573d5f803e3d5ffd5b50505050611dcf61343b565b611dd7613443565b611ddf61343b565b604051632ffdac7160e21b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063bff6b1c490611e1e905f908d908d908d908d9060040161558b565b5f6040518083038186803b158015611e34575f80fd5b505af4158015611e46573d5f803e3d5ffd5b50505050611e565f801b8b613108565b50611e817f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b613108565b50611eac7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b613108565b50611ed77f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b613108565b508315611f1e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6011545f908210610b68565b611f3e6143b4565b604051633978289f60e01b81525f60048201526024810183905273__$137de846162d19becd7adae071bc6b8643$__90633978289f90604401602060405180830381865af4158015611f92573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fb69190614ee4565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b61202f6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063dd378fd69060240160c060405180830381865af415801561207c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061103791906155fa565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063d72f4008906024016040805180830381865af41580156120ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110379190615652565b61212b612d14565b6040516210aa0b60e31b815273__$7dc37f9f4797eb854780a74171eb2f4993$__906285505890612162905f9085906004016156ae565b5f6040518083038186803b158015612178575f80fd5b505af415801561218a573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$7dc37f9f4797eb854780a74171eb2f4993$__92506364140a839150610cec905f9085906004016156ae565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6121f181612d0a565b61168c613453565b612201612d14565b604051634ec6ce5b60e11b81525f600482018190523360248301529073__$54339234670bed530be64a2569bfcff861$__90639d8d9cb690604401602060405180830381865af4158015612257573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061227b91906156e6565b604051634bc1120160e01b815290915073__$ef4190de80c3c7f10088bb7cf8a0baddca$__90634bc11201906122b7905f908690600401615701565b5f6040518083038186803b1580156122cd575f80fd5b505af41580156122df573d5f803e3d5ffd5b50506040516332f4053b60e01b815273__$ef4190de80c3c7f10088bb7cf8a0baddca$__92506332f4053b915061231c905f908690600401615701565b5f6040518083038186803b158015612332575f80fd5b505af4158015612344573d5f803e3d5ffd5b5050604051634ec6ce5b60e11b81525f60048201819052336024830152925073__$54339234670bed530be64a2569bfcff861$__9150639d8d9cb690604401602060405180830381865af415801561239e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123c291906156e6565b9050811580156123cf5750805b156112bd5760405163046dbd1360e11b81525f600482015233602482018190529073__$54339234670bed530be64a2569bfcff861$__906308db7a2690604401602060405180830381865af415801561242a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061244e9190614ee4565b60405163092ceea960e31b81526001600160a01b03909216600483015260248201526044015b60405180910390fd5b5f9182525f80516020615a80833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606124bd612d14565b61112e5f848461349b565b6124d06143e3565b506001600160a01b039081165f908152601b602090815260409182902082516060808201855282549095168152835160a08082018652600184015482526002840154828601526003840154828701526004840154828801526005840154608080840191909152838601929092528551908101865260068401548152600784015494810194909452600883015484860152600983015495840195909552600a90910154938201939093529082015290565b6125b060405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$137de846162d19becd7adae071bc6b8643$__90639930537e90604401602060405180830381865af4158015612604573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126289190614ee4565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$54339234670bed530be64a2569bfcff861$__906308db7a2690604401602060405180830381865af41580156126c5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b689190614ee4565b5f610b688183613802565b6126fc612d14565b6040516329de607960e01b815273__$872edea7acf8ea04327f178ae369cb7d23$__906329de607990612735905f908590600401615296565b5f6040518083038186803b15801561274b575f80fd5b505af415801561275d573d5f803e3d5ffd5b50506040516309f18b1960e11b815273__$872edea7acf8ea04327f178ae369cb7d23$__92506313e316329150610cec905f908590600401615296565b6127a38261103c565b6127ac81612d0a565b61128483836131b0565b6127be612d14565b604051630dd8fb6560e21b815273__$6a70d15ccab52e60961e0e6eac4956e318$__90633763ed94906127f7905f90859060040161508f565b5f6040518083038186803b15801561280d575f80fd5b505af415801561281f573d5f803e3d5ffd5b505060405163d73654eb60e01b81525f925073__$6a70d15ccab52e60961e0e6eac4956e318$__915063d73654eb9061285e908490869060040161508f565b602060405180830381865af4158015612879573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061289d9190614ee4565b90505f19826020015103610e9e576040516316bbd7db60e11b81525f600482015233602482015273__$54339234670bed530be64a2569bfcff861$__90632d77afb690604401610e71565b5f6128f1612d14565b6040516320b5435f60e11b815273__$bd78b82d3691bf7d290be9fb9bf4abf7be$__9063416a86be9061292a905f908690600401615701565b5f6040518083038186803b158015612940575f80fd5b505af4158015612952573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$bd78b82d3691bf7d290be9fb9bf4abf7be$__925063341a672c915061298f905f908690600401615701565b602060405180830381865af41580156129aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129ce9190614ee4565b60405163489d188160e01b815290915073__$bd78b82d3691bf7d290be9fb9bf4abf7be$__9063489d188190612a0c905f9086908690600401615729565b5f6040518083038186803b158015612a22575f80fd5b505af4158015612a34573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$54339234670bed530be64a2569bfcff861$__9063325191d2906044015b602060405180830381865af4158015612a95573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b6891906156e6565b612ac1612d14565b6040516339bd577360e11b815273__$e8bb5faa7d0581d9ffa906943161b22b68$__9063737aaee690612afa905f90859060040161575f565b5f6040518083038186803b158015612b10575f80fd5b505af4158015612b22573d5f803e3d5ffd5b5050604051632bb9d55760e01b815273__$e8bb5faa7d0581d9ffa906943161b22b68$__9250632bb9d5579150610cec905f90859060040161575f565b612b67612d14565b604051635792057f60e11b81525f60048201528135602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__9063af240afe906044015f6040518083038186803b158015612bb6575f80fd5b505af4158015612bc8573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__92506341d373f29150604401610cec565b604051634ec6ce5b60e11b81525f600482018190526001600160a01b03831660248301529073__$54339234670bed530be64a2569bfcff861$__90639d8d9cb690604401612a7a565b5f61112e818484613825565b612c67612d14565b6040516306241a0160e51b81525f60048201528135602482015273__$20b01ba837bb61c0f81e8afe21d5ca6650$__9063c4834020906044015f6040518083038186803b158015612cb6575f80fd5b505af4158015612cc8573d5f803e3d5ffd5b5050604051632981ae3960e21b81525f60048201528335602482015273__$20b01ba837bb61c0f81e8afe21d5ca6650$__925063a606b8e49150604401610cec565b61168c8133613852565b5f80516020615aa08339815191525460ff1615612d445760405163d93c066560e01b815260040160405180910390fd5b565b5f61112e83600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d9e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612dc29190614ee4565b612dcd90600a6158d2565b612dd790846158dd565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015612e21573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e4591906158f4565b612e5090600a615914565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015612e9a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ebe91906158f4565b612ec990600a615914565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa158015612f13573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f379190614ee4565b612f4191906158dd565b61388b565b5f612f6383612f558685613897565b670de0b6b3a764000061388b565b949350505050565b5f815f03612f8c576040516301c85f6760e71b815260040160405180910390fd5b5f80612f9886866138aa565b91509150612fa582613c4e565b15612fc35760405163309f293760e21b815260040160405180910390fd5b8051841080612fd55750806020015184115b1561300a578051602082015160405163a35ff9f160e01b81526004810187905260248101929092526044820152606401612474565b60208083015160408051606081018252600d8a01546001600160801b03811682526001600160401b03600160801b8204811695830195909552600160c01b900490931683820152516315c6891560e11b81525f9273__$30cdd3af314c0847e81c95388f79c2a65a$__92632b8d122a9261308992908a90600401615922565b602060405180830381865af41580156130a4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130c89190614ee4565b905081604001518110156130e4575060400151915061112e9050565b81606001518111156130fe575060600151915061112e9050565b9695505050505050565b5f5f80516020615a80833981519152613121848461247d565b6131a0575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556131563390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610b68565b5f915050610b68565b5092915050565b5f5f80516020615a808339815191526131c9848461247d565b156131a0575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610b68565b613231613c67565b5f80516020615aa0833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061330e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166133025f80516020615a60833981519152546001600160a01b031690565b6001600160a01b031614155b15612d445760405163703e46dd60e11b815260040160405180910390fd5b5f61174981612d0a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613390575060408051601f3d908101601f1916820190925261338d91810190614ee4565b60015b6133b857604051634c9c8ce360e01b81526001600160a01b0383166004820152602401612474565b5f80516020615a6083398151915281146133e857604051632a87526960e21b815260048101829052602401612474565b6112bd8383613c96565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612d445760405163703e46dd60e11b815260040160405180910390fd5b612d44613ceb565b61344b613ceb565b612d44613d34565b61345b612d14565b5f80516020615aa0833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583361326a565b60198301805460ff60a01b1916600160a01b179055601a830154604080516318160ddd60e01b815290516060925f926001600160a01b03909116916318160ddd916004808201926020929091908290030181865afa1580156134ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135239190614ee4565b90505f85600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561357b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061359f9190614ee4565b9050836001600160401b038111156135b9576135b9614622565b6040519080825280602002602001820160405280156135ec57816020015b60608152602001906001900390816135d75790505b5092505f5b8481101561367f5761365a3087878481811061360f5761360f6159ee565b90506020028101906136219190615a02565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613d5492505050565b84828151811061366c5761366c6159ee565b60209081029190910101526001016135f1565b50601a860154604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156136c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136ed9190614ee4565b90505f87600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613745573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906137699190614ee4565b60405163111a6a5d60e31b8152600481018a90526024810186905260448101859052606481018490526084810182905290915073__$5e1dc6026664d540c986e6d76069f97e44$",
    "sourceMap": "3000:7872:120:-:0;;;1171:4:70;1128:48;;3819:53:120;;;;;;;;;-1:-1:-1;3843:22:120;:20;:22::i;:::-;3000:7872;;7711:422:69;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:69;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:69;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:69;-1:-1:-1;;;;;8035:33:69;;;;;8087:29;;158:50:245;;;8087:29:69;;146:2:245;131:18;8087:29:69;;;;;;;7981:146;7760:373;7711:422::o;14:200:245:-;3000:7872:120;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/libraries/CapsLibrary.sol": {
        "CapsLibrary": [
          { "start": 4026, "length": 20 },
          { "start": 5896, "length": 20 },
          { "start": 14494, "length": 20 }
        ]
      },
      "src/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 4091, "length": 20 },
          { "start": 6281, "length": 20 },
          { "start": 6442, "length": 20 },
          { "start": 8282, "length": 20 },
          { "start": 9932, "length": 20 }
        ]
      },
      "src/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 3869, "length": 20 },
          { "start": 5637, "length": 20 },
          { "start": 8991, "length": 20 },
          { "start": 9317, "length": 20 },
          { "start": 9458, "length": 20 },
          { "start": 10125, "length": 20 },
          { "start": 10694, "length": 20 },
          { "start": 11100, "length": 20 },
          { "start": 11569, "length": 20 }
        ]
      },
      "src/libraries/YieldCurveLibrary.sol": {
        "YieldCurveLibrary": [{ "start": 12640, "length": 20 }]
      },
      "src/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 5081, "length": 20 },
          { "start": 5180, "length": 20 }
        ]
      },
      "src/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 3645, "length": 20 },
          { "start": 3747, "length": 20 },
          { "start": 4862, "length": 20 }
        ]
      },
      "src/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 11395, "length": 20 },
          { "start": 11494, "length": 20 }
        ]
      },
      "src/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 9101, "length": 20 },
          { "start": 9200, "length": 20 }
        ]
      },
      "src/libraries/actions/CopyLimitOrders.sol": {
        "CopyLimitOrders": [
          { "start": 11216, "length": 20 },
          { "start": 11315, "length": 20 }
        ]
      },
      "src/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 3421, "length": 20 },
          { "start": 3520, "length": 20 }
        ]
      },
      "src/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 7785, "length": 20 },
          { "start": 7918, "length": 20 }
        ]
      },
      "src/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 10752, "length": 20 },
          { "start": 10851, "length": 20 },
          { "start": 10976, "length": 20 }
        ]
      },
      "src/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 5420, "length": 20 },
          { "start": 5522, "length": 20 },
          { "start": 5780, "length": 20 }
        ]
      },
      "src/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 8761, "length": 20 },
          { "start": 8859, "length": 20 }
        ]
      },
      "src/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 11651, "length": 20 },
          { "start": 11750, "length": 20 }
        ]
      },
      "src/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 10251, "length": 20 },
          { "start": 10350, "length": 20 }
        ]
      },
      "src/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5247, "length": 20 },
          { "start": 10445, "length": 20 },
          { "start": 10547, "length": 20 }
        ]
      },
      "src/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 4696, "length": 20 },
          { "start": 4795, "length": 20 }
        ]
      },
      "src/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3207, "length": 20 },
          { "start": 3306, "length": 20 },
          { "start": 4315, "length": 20 },
          { "start": 8516, "length": 20 },
          { "start": 8648, "length": 20 }
        ]
      },
      "src/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 4467, "length": 20 },
          { "start": 4566, "length": 20 }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405260043610610327575f3560e01c806361a10df2116101a3578063b36116f6116100f2578063e05001f511610092578063f45bf01c1161006d578063f45bf01c14610ad4578063f731a57a14610ae7578063f85c3cd414610b06578063fd17174a14610b25575f80fd5b8063e05001f514610a8f578063e5af06ce14610aa2578063f052e7a414610ac1575f80fd5b8063ccc96815116100cd578063ccc9681514610a2b578063ccd8d4d114610a4a578063d547741f14610a5d578063d8d933a514610a7c575f80fd5b8063b36116f6146109b4578063b5ec7487146109e0578063ca40742c14610a0c575f80fd5b80637f417c061161015d57806391d148541161013857806391d1485414610932578063a217fddf14610951578063ac9650d814610964578063ad3cb1cc14610984575f80fd5b80637f417c06146108f85780638456cb591461090b5780638e5727761461091f575f80fd5b806361a10df2146106ca57806364eb0a71146106e957806373d4a13a1461070857806376c1b82f1461082c5780637c90a6ca146108585780637dc0d1d0146108b7575f80fd5b80632ed28ba2116102795780634cbd882c1161021957806354137c7e116101f457806354137c7e1461062557806354fd4d50146106445780635c975abb1461067b5780635cbc51eb1461069e575f80fd5b80634cbd882c146105df5780634f1ef286146105fe57806352d1902d14610611575f80fd5b80633746f858116102545780633746f85814610579578063375019211461058c5780633e3c119b146105b85780633f4ba83a146105cb575f80fd5b80632ed28ba21461050f5780632f2ff15d1461053b57806336568abe1461055a575f80fd5b80631ca3b0cb116102e45780632b4c9a20116102bf5780632b4c9a20146104ab5780632c60185c146104be5780632cc884c5146104dd5780632e106f21146104fc575f80fd5b80631ca3b0cb146103ff5780631e5eb1d014610428578063248a9ca31461048c575f80fd5b806301ffc9a71461032b5780630317b9df1461035f5780630cf8542f146103805780631970e5ea1461039357806319a7359b146103c05780631c4fd41c146103d3575b5f80fd5b348015610336575f80fd5b5061034a6103453660046144a9565b610b38565b60405190151581526020015b60405180910390f35b34801561036a575f80fd5b5061037e6103793660046144e6565b610b6e565b005b61037e61038e366004614527565b610c46565b34801561039e575f80fd5b506103b26103ad366004614541565b610d1b565b604051908152602001610356565b61037e6103ce366004614558565b610d26565b3480156103de575f80fd5b506103f26103ed366004614541565b610edc565b6040516103569190614568565b34801561040a575f80fd5b50610413610f57565b60408051928352602083019190915201610356565b348015610433575f80fd5b5061043c610f8a565b6040516103569190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b348015610497575f80fd5b506103b26104a6366004614541565b61103c565b61037e6104b9366004614527565b61105c565b3480156104c9575f80fd5b506103b26104d836600461458e565b611102565b3480156104e8575f80fd5b506103b26104f73660046145c2565b611135565b61037e61050a3660046145ec565b611141565b34801561051a575f80fd5b5061052e610529366004614731565b6111e7565b6040516103569190614779565b348015610546575f80fd5b5061037e6105553660046147d8565b611268565b348015610565575f80fd5b5061037e6105743660046147d8565b61128a565b61037e6105873660046144e6565b6112c2565b348015610597575f80fd5b506105ab6105a6366004614731565b611368565b6040516103569190614806565b6104136105c6366004614862565b6113e9565b3480156105d6575f80fd5b5061037e61165a565b3480156105ea575f80fd5b5061037e6105f936600461487c565b61168f565b61037e61060c3660046148a2565b61172e565b34801561061c575f80fd5b506103b261174d565b348015610630575f80fd5b506103b261063f366004614541565b611768565b34801561064f575f80fd5b5060408051808201909152600681526576312e362e3160d01b60208201525b6040516103569190614990565b348015610686575f80fd5b505f80516020615aa08339815191525460ff1661034a565b3480156106a9575f80fd5b506106bd6106b83660046149a2565b611893565b6040516103569190614a8b565b3480156106d5575f80fd5b5061037e6106e4366004614b3d565b611ca5565b3480156106f4575f80fd5b5061034a610703366004614541565b611f2a565b348015610713575f80fd5b506107bb60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e0928301519091169181019190915261010001610356565b348015610837575f80fd5b5061084b610846366004614541565b611f36565b6040516103569190614ba7565b348015610863575f80fd5b5061086c611ffc565b60405161035691905f60c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b3480156108c2575f80fd5b506108cb6120a0565b6040805182516001600160a01b031681526020928301516001600160401b03169281019290925201610356565b61037e610906366004614bb5565b612123565b348015610916575f80fd5b5061037e6121c7565b61037e61092d366004614527565b6121f9565b34801561093d575f80fd5b5061034a61094c3660046147d8565b61247d565b34801561095c575f80fd5b506103b25f81565b610977610972366004614bcf565b6124b3565b6040516103569190614c3d565b34801561098f575f80fd5b5061066e604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156109bf575f80fd5b506109d36109ce3660046149a2565b6124c8565b6040516103569190614c9f565b3480156109eb575f80fd5b506109ff6109fa366004614541565b612580565b6040516103569190614d2c565b348015610a17575f80fd5b506103b2610a263660046149a2565b612666565b348015610a36575f80fd5b5061034a610a45366004614541565b6126e9565b61037e610a583660046144e6565b6126f4565b348015610a68575f80fd5b5061037e610a773660046147d8565b61279a565b61037e610a8a366004614731565b6127b6565b6103b2610a9d366004614527565b6128e8565b348015610aad575f80fd5b5061034a610abc366004614541565b612a3d565b61037e610acf366004614d60565b612ab9565b61037e610ae2366004614d81565b612b5f565b348015610af2575f80fd5b5061034a610b013660046149a2565b612c0a565b348015610b11575f80fd5b506103b2610b203660046145c2565b612c53565b61037e610b33366004614d81565b612c5f565b5f6001600160e01b03198216637965db0b60e01b1480610b6857506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f610b7881612d0a565b60405163e57980dd60e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063e57980dd90610bb1905f908690600401614d9b565b5f6040518083038186803b158015610bc7575f80fd5b505af4158015610bd9573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9250634752b3b39150610c16905f908690600401614d9b565b5f6040518083038186803b158015610c2c575f80fd5b505af4158015610c3e573d5f803e3d5ffd5b505050505050565b610c4e612d14565b604051638046123560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__90638046123590610c87905f908590600401614e5e565b5f6040518083038186803b158015610c9d575f80fd5b505af4158015610caf573d5f803e3d5ffd5b50506040516387e2411560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__92506387e241159150610cec905f908590600401614e5e565b5f6040518083038186803b158015610d02575f80fd5b505af4158015610d14573d5f803e3d5ffd5b5050505050565b5f610b688183612d46565b610d2e612d14565b604051631621030760e01b815273__$40338b66eef5a4814456f5e5d0057a85cb$__90631621030790610d67905f908590600401614e72565b5f6040518083038186803b158015610d7d575f80fd5b505af4158015610d8f573d5f803e3d5ffd5b505060405163b71df57f60e01b81525f925073__$40338b66eef5a4814456f5e5d0057a85cb$__915063b71df57f90610dce9084908690600401614e72565b602060405180830381865af4158015610de9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e0d9190614ee4565b90505f19826020013503610e9e5773__$54339234670bed530be64a2569bfcff861$__632d77afb65f610e4360208601866149a2565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015b5f6040518083038186803b158015610e87575f80fd5b505af4158015610e99573d5f803e3d5ffd5b505050505b60405163bfbfe8ab60e01b81525f60048201526024810182905273__$5e1dc6026664d540c986e6d76069f97e44$__9063bfbfe8ab90604401610c16565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$137de846162d19becd7adae071bc6b8643$__90637d62a7e090604401602060405180830381865af4158015610f33573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b689190614efb565b6011545f908190610f69908290614f2d565b610f7560025f19614f40565b601254610f829190614f2d565b915091509091565b610fc66040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__906386617e779060240160c060405180830381865af4158015611013573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110379190614f5f565b905090565b5f9081525f80516020615a80833981519152602052604090206001015490565b611064612d14565b60405163010cc09b60e21b815273__$d7ed34c1233366b4d2093a06a83503a127$__90630433026c9061109d905f908590600401614e5e565b5f6040518083038186803b1580156110b3575f80fd5b505af41580156110c5573d5f803e3d5ffd5b505060405163b8359e9760e01b815273__$d7ed34c1233366b4d2093a06a83503a127$__925063b8359e979150610cec905f908590600401614e5e565b5f815f03611123576040516301c85f6760e71b815260040160405180910390fd5b61112e5f8484612f46565b9392505050565b5f61112e818484612f6b565b611149612d14565b60405163603ed05b60e01b815273__$522109956a60eeb242799fac64155e2c7d$__9063603ed05b90611182905f908590600401615031565b5f6040518083038186803b158015611198575f80fd5b505af41580156111aa573d5f803e3d5ffd5b505060405163153f43e560e31b815273__$522109956a60eeb242799fac64155e2c7d$__925063a9fa1f289150610cec905f908590600401615031565b6111ef6142fd565b604051631c81982560e11b815273__$40338b66eef5a4814456f5e5d0057a85cb$__90633903304a90611228905f90869060040161508f565b61014060405180830381865af4158015611244573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b689190615162565b6112718261103c565b61127a81612d0a565b6112848383613108565b50505050565b6001600160a01b03811633146112b35760405163334bd91960e11b815260040160405180910390fd5b6112bd82826131b0565b505050565b6112ca612d14565b604051634cf319b960e11b815273__$bb87e4d06c905b2a40fd4eb630d02af12b$__906399e6337290611303905f908590600401615296565b5f6040518083038186803b158015611319575f80fd5b505af415801561132b573d5f803e3d5ffd5b505060405163339bb63160e01b815273__$bb87e4d06c905b2a40fd4eb630d02af12b$__925063339bb6319150610cec905f908590600401615296565b611370614343565b60405163301d1d1560e21b815273__$6a70d15ccab52e60961e0e6eac4956e318$__9063c0747454906113a9905f90869060040161508f565b61012060405180830381865af41580156113c5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b6891906152ae565b5f806113f3612d14565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab61141d81612d0a565b604051639f53ee0f60e01b815273__$083884a3186f9b2b23885dfeba78ff7244$__90639f53ee0f90611456905f90889060040161534f565b5f6040518083038186803b15801561146c575f80fd5b505af415801561147e573d5f803e3d5ffd5b505060405163647a4b7560e11b81525f925073__$083884a3186f9b2b23885dfeba78ff7244$__915063c8f496ea906114bd908490899060040161534f565b606060405180830381865af41580156114d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114fc9190615363565b9095509350905073__$54339234670bed530be64a2569bfcff861$__632d77afb65f61152e6040890160208a016149a2565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b158015611571575f80fd5b505af4158015611583573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$083884a3186f9b2b23885dfeba78ff7244$__9250636e6595c191506115c2905f908990899060040161538e565b5f6040518083038186803b1580156115d8575f80fd5b505af41580156115ea573d5f803e3d5ffd5b505060405163bfbfe8ab60e01b81525f60048201526024810184905273__$5e1dc6026664d540c986e6d76069f97e44$__925063bfbfe8ab91506044015f6040518083038186803b15801561163d575f80fd5b505af415801561164f573d5f803e3d5ffd5b505050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61168481612d0a565b61168c613229565b50565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240386116b981612d0a565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611736613288565b61173f8261332c565b6117498282613336565b5050565b5f6117566133f2565b505f80516020615a6083398151915290565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$137de846162d19becd7adae071bc6b8643$__90639930537e90604401602060405180830381865af41580156117c1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117e59190614ee4565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$137de846162d19becd7adae071bc6b8643$__906345ffd36d90611854905f9085906004016153b0565b602060405180830381865af415801561186f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061112e9190614ee4565b61189b61437a565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b0194919390928492849184018282801561192d57602002820191905f5260205f20905b815481526020019060010190808311611919575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561198357602002820191905f5260205f20905b81548152602001906001019080831161196f575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156119d957602002820191905f5260205f20905b8154815260200190600101908083116119c5575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015611a5f57602002820191905f5260205f20905b815481526020019060010190808311611a4b575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611ab557602002820191905f5260205f20905b815481526020019060010190808311611aa1575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611b0b57602002820191905f5260205f20905b815481526020019060010190808311611af7575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa158015611b91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bb59190614ee4565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611c05573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c299190614ee4565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611c79573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c9d9190614ee4565b905292915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f81158015611ce95750825b90505f826001600160401b03166001148015611d045750303b155b905081158015611d12575080155b15611d305760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611d5a57845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__906369777eb990611d9b905f908e908e908e908e908e90600401615501565b5f6040518083038186803b158015611db1575f80fd5b505af4158015611dc3573d5f803e3d5ffd5b50505050611dcf61343b565b611dd7613443565b611ddf61343b565b604051632ffdac7160e21b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063bff6b1c490611e1e905f908d908d908d908d9060040161558b565b5f6040518083038186803b158015611e34575f80fd5b505af4158015611e46573d5f803e3d5ffd5b50505050611e565f801b8b613108565b50611e817f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b613108565b50611eac7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b613108565b50611ed77f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b613108565b508315611f1e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6011545f908210610b68565b611f3e6143b4565b604051633978289f60e01b81525f60048201526024810183905273__$137de846162d19becd7adae071bc6b8643$__90633978289f90604401602060405180830381865af4158015611f92573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fb69190614ee4565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b61202f6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063dd378fd69060240160c060405180830381865af415801561207c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061103791906155fa565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063d72f4008906024016040805180830381865af41580156120ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110379190615652565b61212b612d14565b6040516210aa0b60e31b815273__$7dc37f9f4797eb854780a74171eb2f4993$__906285505890612162905f9085906004016156ae565b5f6040518083038186803b158015612178575f80fd5b505af415801561218a573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$7dc37f9f4797eb854780a74171eb2f4993$__92506364140a839150610cec905f9085906004016156ae565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6121f181612d0a565b61168c613453565b612201612d14565b604051634ec6ce5b60e11b81525f600482018190523360248301529073__$54339234670bed530be64a2569bfcff861$__90639d8d9cb690604401602060405180830381865af4158015612257573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061227b91906156e6565b604051634bc1120160e01b815290915073__$ef4190de80c3c7f10088bb7cf8a0baddca$__90634bc11201906122b7905f908690600401615701565b5f6040518083038186803b1580156122cd575f80fd5b505af41580156122df573d5f803e3d5ffd5b50506040516332f4053b60e01b815273__$ef4190de80c3c7f10088bb7cf8a0baddca$__92506332f4053b915061231c905f908690600401615701565b5f6040518083038186803b158015612332575f80fd5b505af4158015612344573d5f803e3d5ffd5b5050604051634ec6ce5b60e11b81525f60048201819052336024830152925073__$54339234670bed530be64a2569bfcff861$__9150639d8d9cb690604401602060405180830381865af415801561239e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123c291906156e6565b9050811580156123cf5750805b156112bd5760405163046dbd1360e11b81525f600482015233602482018190529073__$54339234670bed530be64a2569bfcff861$__906308db7a2690604401602060405180830381865af415801561242a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061244e9190614ee4565b60405163092ceea960e31b81526001600160a01b03909216600483015260248201526044015b60405180910390fd5b5f9182525f80516020615a80833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606124bd612d14565b61112e5f848461349b565b6124d06143e3565b506001600160a01b039081165f908152601b602090815260409182902082516060808201855282549095168152835160a08082018652600184015482526002840154828601526003840154828701526004840154828801526005840154608080840191909152838601929092528551908101865260068401548152600784015494810194909452600883015484860152600983015495840195909552600a90910154938201939093529082015290565b6125b060405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$137de846162d19becd7adae071bc6b8643$__90639930537e90604401602060405180830381865af4158015612604573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126289190614ee4565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$54339234670bed530be64a2569bfcff861$__906308db7a2690604401602060405180830381865af41580156126c5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b689190614ee4565b5f610b688183613802565b6126fc612d14565b6040516329de607960e01b815273__$872edea7acf8ea04327f178ae369cb7d23$__906329de607990612735905f908590600401615296565b5f6040518083038186803b15801561274b575f80fd5b505af415801561275d573d5f803e3d5ffd5b50506040516309f18b1960e11b815273__$872edea7acf8ea04327f178ae369cb7d23$__92506313e316329150610cec905f908590600401615296565b6127a38261103c565b6127ac81612d0a565b61128483836131b0565b6127be612d14565b604051630dd8fb6560e21b815273__$6a70d15ccab52e60961e0e6eac4956e318$__90633763ed94906127f7905f90859060040161508f565b5f6040518083038186803b15801561280d575f80fd5b505af415801561281f573d5f803e3d5ffd5b505060405163d73654eb60e01b81525f925073__$6a70d15ccab52e60961e0e6eac4956e318$__915063d73654eb9061285e908490869060040161508f565b602060405180830381865af4158015612879573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061289d9190614ee4565b90505f19826020015103610e9e576040516316bbd7db60e11b81525f600482015233602482015273__$54339234670bed530be64a2569bfcff861$__90632d77afb690604401610e71565b5f6128f1612d14565b6040516320b5435f60e11b815273__$bd78b82d3691bf7d290be9fb9bf4abf7be$__9063416a86be9061292a905f908690600401615701565b5f6040518083038186803b158015612940575f80fd5b505af4158015612952573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$bd78b82d3691bf7d290be9fb9bf4abf7be$__925063341a672c915061298f905f908690600401615701565b602060405180830381865af41580156129aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129ce9190614ee4565b60405163489d188160e01b815290915073__$bd78b82d3691bf7d290be9fb9bf4abf7be$__9063489d188190612a0c905f9086908690600401615729565b5f6040518083038186803b158015612a22575f80fd5b505af4158015612a34573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$54339234670bed530be64a2569bfcff861$__9063325191d2906044015b602060405180830381865af4158015612a95573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b6891906156e6565b612ac1612d14565b6040516339bd577360e11b815273__$e8bb5faa7d0581d9ffa906943161b22b68$__9063737aaee690612afa905f90859060040161575f565b5f6040518083038186803b158015612b10575f80fd5b505af4158015612b22573d5f803e3d5ffd5b5050604051632bb9d55760e01b815273__$e8bb5faa7d0581d9ffa906943161b22b68$__9250632bb9d5579150610cec905f90859060040161575f565b612b67612d14565b604051635792057f60e11b81525f60048201528135602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__9063af240afe906044015f6040518083038186803b158015612bb6575f80fd5b505af4158015612bc8573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__92506341d373f29150604401610cec565b604051634ec6ce5b60e11b81525f600482018190526001600160a01b03831660248301529073__$54339234670bed530be64a2569bfcff861$__90639d8d9cb690604401612a7a565b5f61112e818484613825565b612c67612d14565b6040516306241a0160e51b81525f60048201528135602482015273__$20b01ba837bb61c0f81e8afe21d5ca6650$__9063c4834020906044015f6040518083038186803b158015612cb6575f80fd5b505af4158015612cc8573d5f803e3d5ffd5b5050604051632981ae3960e21b81525f60048201528335602482015273__$20b01ba837bb61c0f81e8afe21d5ca6650$__925063a606b8e49150604401610cec565b61168c8133613852565b5f80516020615aa08339815191525460ff1615612d445760405163d93c066560e01b815260040160405180910390fd5b565b5f61112e83600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d9e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612dc29190614ee4565b612dcd90600a6158d2565b612dd790846158dd565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015612e21573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e4591906158f4565b612e5090600a615914565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015612e9a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ebe91906158f4565b612ec990600a615914565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa158015612f13573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f379190614ee4565b612f4191906158dd565b61388b565b5f612f6383612f558685613897565b670de0b6b3a764000061388b565b949350505050565b5f815f03612f8c576040516301c85f6760e71b815260040160405180910390fd5b5f80612f9886866138aa565b91509150612fa582613c4e565b15612fc35760405163309f293760e21b815260040160405180910390fd5b8051841080612fd55750806020015184115b1561300a578051602082015160405163a35ff9f160e01b81526004810187905260248101929092526044820152606401612474565b60208083015160408051606081018252600d8a01546001600160801b03811682526001600160401b03600160801b8204811695830195909552600160c01b900490931683820152516315c6891560e11b81525f9273__$30cdd3af314c0847e81c95388f79c2a65a$__92632b8d122a9261308992908a90600401615922565b602060405180830381865af41580156130a4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130c89190614ee4565b905081604001518110156130e4575060400151915061112e9050565b81606001518111156130fe575060600151915061112e9050565b9695505050505050565b5f5f80516020615a80833981519152613121848461247d565b6131a0575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556131563390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610b68565b5f915050610b68565b5092915050565b5f5f80516020615a808339815191526131c9848461247d565b156131a0575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610b68565b613231613c67565b5f80516020615aa0833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061330e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166133025f80516020615a60833981519152546001600160a01b031690565b6001600160a01b031614155b15612d445760405163703e46dd60e11b815260040160405180910390fd5b5f61174981612d0a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613390575060408051601f3d908101601f1916820190925261338d91810190614ee4565b60015b6133b857604051634c9c8ce360e01b81526001600160a01b0383166004820152602401612474565b5f80516020615a6083398151915281146133e857604051632a87526960e21b815260048101829052602401612474565b6112bd8383613c96565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612d445760405163703e46dd60e11b815260040160405180910390fd5b612d44613ceb565b61344b613ceb565b612d44613d34565b61345b612d14565b5f80516020615aa0833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583361326a565b60198301805460ff60a01b1916600160a01b179055601a830154604080516318160ddd60e01b815290516060925f926001600160a01b03909116916318160ddd916004808201926020929091908290030181865afa1580156134ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135239190614ee4565b90505f85600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561357b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061359f9190614ee4565b9050836001600160401b038111156135b9576135b9614622565b6040519080825280602002602001820160405280156135ec57816020015b60608152602001906001900390816135d75790505b5092505f5b8481101561367f5761365a3087878481811061360f5761360f6159ee565b90506020028101906136219190615a02565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613d5492505050565b84828151811061366c5761366c6159ee565b60209081029190910101526001016135f1565b50601a860154604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156136c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136ed9190614ee4565b90505f87600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613745573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906137699190614ee4565b60405163111a6a5d60e31b8152600481018a90526024810186905260448101859052606481018490526084810182905290915073__$5e1dc6026664d540c986e6d76069f97e44$__906388d352e89060a4015f6040518083038186803b1580156137d1575f80fd5b505af41580156137e3573d5f803e3d5ffd5b5050506019909801805460ff60a01b1916905550929695505050505050565b5f61380f60025f19614f40565b821015801561112e575050601291909101541190565b5f815f03613846576040516301c85f6760e71b815260040160405180910390fd5b5f80612f988686613dc6565b61385c828261247d565b6117495760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401612474565b5f612f63848484614165565b81545f9061112e90836301e1338061388b565b6138b2614417565b6138ba61444c565b6001600160a01b038084165f908152601b8601602090815260409182902082516060808201855282549095168152835160a080820186526001840154825260028401548286015260038401548287015260048401548288015260058401546080808401919091528386019283528651918201875260068501548252600785015495820195909552600884015481870152600984015496810196909652600a9092015492850192909252918101929092525161397490614191565b15613b015784600e015f015f856001600160a01b03166001600160a01b031681526020019081526020015f205f016040518060a001604052805f81526020015f1981526020015f81526020015f1981526020015f815250816040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015613a3c57602002820191905f5260205f20905b815481526020019060010190808311613a28575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015613a9257602002820191905f5260205f20905b815481526020019060010190808311613a7e575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015613ae857602002820191905f5260205f20905b815481526020019060010190808311613ad4575b5050505050815250508152505091509250925050613c47565b80516001600160a01b03165f908152600e8601602090815260409182902081840151835180850185528254815284516001840180546080818802840181019098526060830181815295979496939588959487019484928491840182828015613a3c57602002820191905f5260205f2090815481526020019060010190808311613a28575050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015613a9257602002820191905f5260205f2090815481526020019060010190808311613a7e575050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015613ae857602002820191905f5260205f2090815481526020019060010190808311613ad4575050505050815250508152505091509250925050613c47565b505b9250929050565b80515f90158015610b685750610b6882602001516141d0565b5f80516020615aa08339815191525460ff16612d4457604051638dfc202b60e01b815260040160405180910390fd5b613c9f826141f6565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115613ce3576112bd8282613d54565b611749614259565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16612d4457604051631afcd79f60e31b815260040160405180910390fd5b613d3c613ceb565b5f80516020615aa0833981519152805460ff19169055565b60605f80846001600160a01b031684604051613d709190615a44565b5f60405180830381855af49150503d805f8114613da8576040519150601f19603f3d011682016040523d82523d5f602084013e613dad565b606091505b5091509150613dbd858383614278565b95945050505050565b613dce614417565b613dd661444c565b6001600160a01b038084165f908152601b8601602090815260409182902082516060808201855282549095168152835160a08082018652600184015482526002840154828601526003840154828701526004840154828801526005840154608080840191909152838601929092528551908101865260068401548152600784015494810194909452600883015484860152600983015495840195909552600a9091015493820193909352908201819052613e8f90614191565b156140175784600e015f015f856001600160a01b03166001600160a01b031681526020019081526020015f206004016040518060a001604052805f81526020015f1981526020015f81526020015f1981526020015f815250816040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015613a3c57602002820191905f5260205f2090815481526020019060010190808311613a28575050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015613a9257602002820191905f5260205f2090815481526020019060010190808311613a7e575050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015613ae857602002820191905f5260205f2090815481526020019060010190808311613ad4575050505050815250508152505091509250925050613c47565b80516001600160a01b03165f908152600e860160209081526040918290208284015183518085018552600483018054825285516005909401805460808188028701810190985260608601818152929794969395889594870194909384929091849190840182828015613a3c57602002820191905f5260205f2090815481526020019060010190808311613a28575050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015613a9257602002820191905f5260205f2090815481526020019060010190808311613a7e575050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015613ae857602002820191905f5260205f2090815481526020019060010190808311613ad4575050505050815250508152505091509250925050613c47565b5f825f1904841183021582026141825763ad251c275f526004601cfd5b50910281810615159190040190565b80515f901580156141a457506020820151155b80156141b257506040820151155b80156141c057506060820151155b8015610b68575050608001511590565b8051515f901580156141e55750602082015151155b8015610b6857505060400151511590565b806001600160a01b03163b5f0361422b57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401612474565b5f80516020615a6083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b3415612d445760405163b398979f60e01b815260040160405180910390fd5b60608261428d57614288826142d4565b61112e565b81511580156142a457506001600160a01b0384163b155b156142cd57604051639996b31560e01b81526001600160a01b0385166004820152602401612474565b508061112e565b8051156142e45780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060e001604052806143106143b4565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060c001604052806143566143b4565b81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060a0016040528061438d614476565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81525090565b60405180608001604052805f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b60405180606001604052805f6001600160a01b0316815260200161440561444c565b815260200161441261444c565b905290565b60405180604001604052805f815260200161441260405180606001604052806060815260200160608152602001606081525090565b6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060800160405280614489614417565b8152602001614496614417565b81525f6020820181905260409091015290565b5f602082840312156144b9575f80fd5b81356001600160e01b03198116811461112e575f80fd5b5f604082840312156144e0575f80fd5b50919050565b5f602082840312156144f6575f80fd5b81356001600160401b0381111561450b575f80fd5b612f63848285016144d0565b5f606082840312156144e0575f80fd5b5f60608284031215614537575f80fd5b61112e8383614517565b5f60208284031215614551575f80fd5b5035919050565b5f60e082840312156144e0575f80fd5b602081016003831061458857634e487b7160e01b5f52602160045260245ffd5b91905290565b5f806040838503121561459f575f80fd5b50508035926020909101359150565b6001600160a01b038116811461168c575f80fd5b5f80604083850312156145d3575f80fd5b82356145de816145ae565b946020939093013593505050565b5f602082840312156145fc575f80fd5b81356001600160401b03811115614611575f80fd5b82016080818503121561112e575f80fd5b634e487b7160e01b5f52604160045260245ffd5b60405160e081016001600160401b038111828210171561465857614658614622565b60405290565b60405160c081016001600160401b038111828210171561465857614658614622565b604051601f8201601f191681016001600160401b03811182821017156146a8576146a8614622565b604052919050565b801515811461168c575f80fd5b5f60e082840312156146cd575f80fd5b6146d5614636565b905081356146e2816145ae565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c0820135614726816146b0565b60c082015292915050565b5f60e08284031215614741575f80fd5b61112e83836146bd565b80516001600160a01b0316825260208082015115159083015260408082015190830152606090810151910152565b5f6101408201905061478c82845161474b565b60018060a01b036020840151166080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015260c083015161012083015292915050565b5f80604083850312156147e9575f80fd5b8235915060208301356147fb816145ae565b809150509250929050565b5f6101208201905061481982845161474b565b60208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015292915050565b5f60a082840312156144e0575f80fd5b5f60a08284031215614872575f80fd5b61112e8383614852565b5f6020828403121561488c575f80fd5b81356001600160801b038116811461112e575f80fd5b5f80604083850312156148b3575f80fd5b82356148be816145ae565b91506020838101356001600160401b03808211156148da575f80fd5b818601915086601f8301126148ed575f80fd5b8135818111156148ff576148ff614622565b614911601f8201601f19168501614680565b91508082528784828501011115614926575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f5b8381101561495d578181015183820152602001614945565b50505f910152565b5f815180845261497c816020860160208601614943565b601f01601f19169290920160200192915050565b602081525f61112e6020830184614965565b5f602082840312156149b2575f80fd5b813561112e816145ae565b5f815180845260208085019450602084015f5b838110156149ec578151875295820195908201906001016149d0565b509495945050505050565b805182525f602080830151604082860152805160606040870152614a1e60a08701826149bd565b83830151603f19888303810160608a0152815180845291860193505f929091908601905b80841015614a625784518252938601936001939093019290860190614a42565b5060408501519550818982030160808a0152614a7e81876149bd565b9998505050505050505050565b602081525f825160a060208401528051608060c0850152614ab06101408501826149f7565b9050602082015160bf198583030160e0860152614acd82826149f7565b91505060408201516101008501526060820151151561012085015260208501519150614b0460408501836001600160a01b03169052565b6040850151606085015260608501516080850152608085015160a0850152809250505092915050565b5f60c082840312156144e0575f80fd5b5f805f805f6102808688031215614b52575f80fd5b8535614b5d816145ae565b9450614b6c8760208801614b2d565b9350614b7b8760e08801614b2d565b9250614b8b876101a088016144d0565b9150614b9b876101e08801614852565b90509295509295909350565b60808101610b68828461474b565b5f60408284031215614bc5575f80fd5b61112e83836144d0565b5f8060208385031215614be0575f80fd5b82356001600160401b0380821115614bf6575f80fd5b818501915085601f830112614c09575f80fd5b813581811115614c17575f80fd5b8660208260051b8501011115614c2b575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b82811015614c9257603f19888603018452614c80858351614965565b94509285019290850190600101614c64565b5092979650505050505050565b81516001600160a01b03168152602080830151610160830191614cef9084018280518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b50604083810151805160c0850152602081015160e085015290810151610100840152606081015161012084015260808101516101408401526131a9565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015260808101610b68565b5f61016082840312156144e0575f80fd5b5f602082840312156144e0575f80fd5b5f60208284031215614d91575f80fd5b61112e8383614d71565b828152604060208201525f8235601e19843603018112614db9575f80fd5b83016020810190356001600160401b03811115614dd4575f80fd5b803603821315614de2575f80fd5b604080850152806080850152808260a08601375f60a082860101526020850135606085015260a0601f19601f830116850101925050509392505050565b8035614e2a816145ae565b6001600160a01b03908116835260208281013590840152604082013590614e50826145ae565b808216604085015250505050565b8281526080810161112e6020830184614e1f565b82815261010081018235614e85816145ae565b60018060a01b038116602084015250602083013560408301526040830135606083015260608301356080830152608083013560a083015260a083013560c083015260c0830135614ed4816146b0565b80151560e0840152509392505050565b5f60208284031215614ef4575f80fd5b5051919050565b5f60208284031215614f0b575f80fd5b81516003811061112e575f80fd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610b6857610b68614f19565b5f82614f5a57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60c08284031215614f6f575f80fd5b614f7761465e565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a0830151614fb1816145ae565b60a08201529392505050565b5f808335601e19843603018112614fd2575f80fd5b83016020810192503590506001600160401b03811115614ff0575f80fd5b8060051b3603821315613c47575f80fd5b8183525f6001600160fb1b03831115615018575f80fd5b8260051b80836020870137939093016020019392505050565b82815260406020820152813560408201525f6020830135615051816146b0565b151560608301526040830135615066816146b0565b1515608083015261507a6060840184614fbd565b608060a08501526130fe60c085018284615001565b828152610100810161112e602083018480516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a0818101519083015260c0908101511515910152565b5f608082840312156150fb575f80fd5b604051608081018181106001600160401b038211171561511d5761511d614622565b80604052508091508251615130816145ae565b81526020830151615140816146b0565b8060208301525060408301516040820152606083015160608201525092915050565b5f6101408284031215615173575f80fd5b61517b614636565b61518584846150eb565b81526080830151615195816145ae565b8060208301525060a0830151604082015260c0830151606082015260e0830151608082015261010083015160a082015261012083015160c08201528091505092915050565b803582525f602080830135605e198436030181126151f6575f80fd5b60408583015283016152088180614fbd565b6060604088015261521d60a088018284615001565b91505061522c83830183614fbd565b603f19888403810160608a015281845291925f929086015b82841015615262578435815293860193600193909301928601615244565b61526f6040870187614fbd565b97509550818a82030160808b0152615288818888615001565b9a9950505050505050505050565b828152604060208201525f612f6360408301846151da565b5f61012082840312156152bf575f80fd5b6152c761465e565b6152d184846150eb565b81526080830151602082015260a0830151604082015260c0830151606082015260e0830151608082015261010083015160a08201528091505092915050565b803582526020810135615322816145ae565b6001600160a01b031660208301526040818101359083015260608082013590830152608090810135910152565b82815260c0810161112e6020830184615310565b5f805f60608486031215615375575f80fd5b8351925060208401519150604084015190509250925092565b83815260e081016153a26020830185615310565b8260c0830152949350505050565b82815260a0810161112e602083018480516001600160a01b031682526020808201519083015260408082015190830152606090810151910152565b803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a0810135615425816145ae565b6001600160a01b031660a0929092019190915250565b6001600160401b038116811461168c575f80fd5b803561545a816145ae565b6001600160a01b0316825260208101356154738161543b565b6001600160401b0381166020840152505050565b8035615492816145ae565b6001600160a01b0390811683526020820135906154ae826145ae565b90811660208401526040820135906154c5826145ae565b90811660408401526060820135906154dc826145ae565b90811660608401526080820135906154f3826145ae565b808216608085015250505050565b8681526001600160a01b03861660208201526102a0810161552560408301876153eb565b8435610100830152602085013561012083015260408501356101408301526060850135610160830152608085013561018083015260a08501356101a08301526155726101c083018561544f565b615580610200830184615487565b979650505050505050565b85815261028081016155a060208301876153eb565b843560e0830152602085013561010083015260408501356101208301526060850135610140830152608085013561016083015260a08501356101808301526155ec6101a083018561544f565b6130fe6101e0830184615487565b5f60c0828403121561560a575f80fd5b61561261465e565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b5f60408284031215615662575f80fd5b604051604081018181106001600160401b038211171561568457615684614622565b6040528251615692816145ae565b815260208301516156a28161543b565b60208201529392505050565b5f6060820190508382528235602083015260208301356156cd816145ae565b6001600160a01b03166040929092019190915292915050565b5f602082840312156156f6575f80fd5b815161112e816146b0565b8281526080810161112e60208301848035825260208082013590830152604090810135910152565b83815260a0810161575160208301858035825260208082013590830152604090810135910152565b826080830152949350505050565b82815261018081018235615772816145ae565b6001600160a01b03166020838101919091526157bf906040840190850180358252602081013560208301526040810135604083015260608101356060830152608081013560808301525050565b61112e60e0830160c0850180358252602081013560208301526040810135604083015260608101356060830152608081013560808301525050565b600181815b80851115613c4557815f190482111561581a5761581a614f19565b8085161561582757918102915b93841c93908002906157ff565b5f8261584257506001610b68565b8161584e57505f610b68565b8160018114615864576002811461586e5761588a565b6001915050610b68565b60ff84111561587f5761587f614f19565b50506001821b610b68565b5060208310610133831016604e8410600b84101617156158ad575081810a610b68565b6158b783836157fa565b805f19048211156158ca576158ca614f19565b029392505050565b5f61112e8383615834565b8082028115828204841417610b6857610b68614f19565b5f60208284031215615904575f80fd5b815160ff8116811461112e575f80fd5b5f61112e60ff841683615834565b60a081525f8451606060a084015261593e6101008401826149bd565b602087810151609f19868403810160c08801528151808552918301945091925f9291908401905b808410156159855785518252948401946001939093019290840190615965565b5060408a01519450818782030160e08801526159a181866149bd565b95505050506159de8185018780516001600160801b031682526020808201516001600160401b039081169184019190915260409182015116910152565b5050826080830152949350505050565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e19843603018112615a17575f80fd5b8301803591506001600160401b03821115615a30575f80fd5b602001915036819003821315613c47575f80fd5b5f8251615a55818460208701614943565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220328fe0aa4ad09d5924ff22760da8427e438aa2fa83879f6c8961868c15a93adb64736f6c63430008170033",
    "sourceMap": "3000:7872:120:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:66;;;;;;;;;;-1:-1:-1;3443:202:66;;;;;:::i;:::-;;:::i;:::-;;;470:14:245;;463:22;445:41;;433:2;418:18;3443:202:66;;;;;;;;5107:239:120;;;;;;;;;;-1:-1:-1;5107:239:120;;;;;:::i;:::-;;:::i;:::-;;6385:177;;;;;;:::i;:::-;;:::i;2345:196:122:-;;;;;;;;;;-1:-1:-1;2345:196:122;;;;;:::i;:::-;;:::i;:::-;;;1805:25:245;;;1793:2;1778:18;2345:196:122;1659:177:245;7291:433:120;;;;;;:::i;:::-;;:::i;5065:133:122:-;;;;;;;;;;-1:-1:-1;5065:133:122;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5234:244::-;;;;;;;;;;;;;:::i;:::-;;;;2578:25:245;;;2634:2;2619:18;;2612:34;;;;2551:18;5234:244:122;2404:248:245;2577:125:122;;;;;;;;;;;;;:::i;:::-;;;;;;3019:13:245;;3001:32;;3089:4;3077:17;;;3071:24;3049:20;;;3042:54;3152:4;3140:17;;;3134:24;3112:20;;;3105:54;3215:4;3203:17;;;3197:24;3175:20;;;3168:54;3278:4;3266:17;;;3260:24;3238:20;;;3231:54;3361:3;3333:17;;;3327:24;-1:-1:-1;;;;;3323:50:245;3301:20;;;3294:80;;;;2988:3;2973:19;;2766:614;4759:191:66;;;;;;;;;;-1:-1:-1;4759:191:66;;;;;:::i;:::-;;:::i;6594:183:120:-;;;;;;:::i;:::-;;:::i;6198:208:122:-;;;;;;;;;;-1:-1:-1;6198:208:122;;;;;:::i;:::-;;:::i;5713:155::-;;;;;;;;;;-1:-1:-1;5713:155:122;;;;;:::i;:::-;;:::i;10360:267:120:-;;;;;;:::i;:::-;;:::i;6442:238:122:-;;;;;;;;;;-1:-1:-1;6442:238:122;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5246:136:66:-;;;;;;;;;;-1:-1:-1;5246:136:66;;;;;:::i;:::-;;:::i;6348:245::-;;;;;;;;;;-1:-1:-1;6348:245:66;;;;;:::i;:::-;;:::i;6809:207:120:-;;;;;;:::i;:::-;;:::i;6716:243:122:-;;;;;;;;;;-1:-1:-1;6716:243:122;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9294:742:120:-;;;;;;:::i;:::-;;:::i;6001:96::-;;;;;;;;;;;;;:::i;5383:452::-;;;;;;;;;;-1:-1:-1;5383:452:120;;;;;:::i;:::-;;:::i;4158:214:70:-;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;5904:258:122:-;;;;;;;;;;-1:-1:-1;5904:258:122;;;;;:::i;:::-;;:::i;6995:86::-;;;;;;;;;;-1:-1:-1;7067:7:122;;;;;;;;;;;;-1:-1:-1;;;7067:7:122;;;;6995:86;;;;;;;:::i;2692:145:72:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:72;;;2692:145;;3674:409:122;;;;;;;;;;-1:-1:-1;3674:409:122;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3878:627:120:-;;;;;;;;;;-1:-1:-1;3878:627:120;;;;;:::i;:::-;;:::i;4313:141:122:-;;;;;;;;;;-1:-1:-1;4313:141:122;;;;;:::i;:::-;;:::i;3054:584::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3127:504:122;;;;;;;;3170:29;;3127:504;;3235:31;;3127:504;;;;3307:36;;-1:-1:-1;;;;;3307:36:122;;;3127:504;;;;;;;3380:32;;;;3127:504;;;;3494:26;;;;3127:504;;;;3548:27;;;;3127:504;;;;3600:20;;;;3127:504;;;;3440:23;;;;;3127:504;;;;;3054:584;;;;;16530:13:245;;16512:32;;16600:4;16588:17;;;16582:24;16560:20;;;16553:54;16642:17;;;16636:24;-1:-1:-1;;;;;16736:21:245;;;16714:20;;;16707:51;;;;16818:4;16806:17;;;16800:24;16796:33;;16774:20;;;16767:63;16890:4;16878:17;;;16872:24;16868:33;;16846:20;;;16839:63;16687:3;16950:17;;;16944:24;16940:33;;16918:20;;;16911:63;17034:4;17022:17;;;17016:24;17012:33;;16990:20;;;16983:63;17106:4;17094:17;;;17088:24;17084:33;;;17062:20;;;17055:63;;;;16499:3;16484:19;3054:584:122;16311:813:245;4865:164:122;;;;;;;;;;-1:-1:-1;4865:164:122;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2738:128::-;;;;;;;;;;;;;:::i;:::-;;;;;;17586:4:245;17628:3;17617:9;17613:19;17605:27;;17665:6;17659:13;17648:9;17641:32;17729:4;17721:6;17717:17;17711:24;17704:4;17693:9;17689:20;17682:54;17792:4;17784:6;17780:17;17774:24;17767:4;17756:9;17752:20;17745:54;17855:4;17847:6;17843:17;17837:24;17830:4;17819:9;17815:20;17808:54;17918:4;17910:6;17906:17;17900:24;17893:4;17882:9;17878:20;17871:54;17981:4;17973:6;17969:17;17963:24;17956:4;17945:9;17941:20;17934:54;17404:590;;;;;2902:116:122;;;;;;;;;;;;;:::i;:::-;;;;18249:13:245;;-1:-1:-1;;;;;18245:39:245;18227:58;;18345:4;18333:17;;;18327:24;-1:-1:-1;;;;;18323:49:245;18301:20;;;18294:79;;;;18200:18;2902:116:122;17999:380:245;8218:171:120;;;;;;:::i;:::-;;:::i;5872:92::-;;;;;;;;;;;;;:::i;10068:260::-;;;;;;:::i;:::-;;:::i;3732:207:66:-;;;;;;;;;;-1:-1:-1;3732:207:66;;;;;:::i;:::-;;:::i;2317:49::-;;;;;;;;;;-1:-1:-1;2317:49:66;2362:4;2317:49;;6134:219:120;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1819:58:70:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:70;;;;;4119:158:122;;;;;;;;;;-1:-1:-1;4119:158:122;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4675:154::-;;;;;;;;;;-1:-1:-1;4675:154:122;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1833:122::-;;;;;;;;;;-1:-1:-1;1833:122:122;;;;;:::i;:::-;;:::i;4490:149::-;;;;;;;;;;-1:-1:-1;4490:149:122;;;;;:::i;:::-;;:::i;7048:211:120:-;;;;;;:::i;:::-;;:::i;5662:138:66:-;;;;;;;;;;-1:-1:-1;5662:138:66;;;;;:::i;:::-;;:::i;7756:430:120:-;;;;;;:::i;:::-;;:::i;8624:403::-;;;;;;:::i;:::-;;:::i;2148:161:122:-;;;;;;;;;;-1:-1:-1;2148:161:122;;;;;:::i;:::-;;:::i;10659:211:120:-;;;;;;:::i;:::-;;:::i;8421:171::-;;;;;;:::i;:::-;;:::i;1991:121:122:-;;;;;;;;;;-1:-1:-1;1991:121:122;;;;;:::i;:::-;;:::i;5514:163::-;;;;;;;;;;-1:-1:-1;5514:163:122;;;;;:::i;:::-;;:::i;9059:203:120:-;;;;;;:::i;:::-;;:::i;3443:202:66:-;3528:4;-1:-1:-1;;;;;;3551:47:66;;-1:-1:-1;;;3551:47:66;;:87;;-1:-1:-1;;;;;;;;;;1133:40:73;;;3602:36:66;3544:94;3443:202;-1:-1:-1;;3443:202:66:o;5107:239:120:-;2362:4:66;3191:16;2362:4;3191:10;:16::i;:::-;5262:34:120::1;::::0;-1:-1:-1;;;5262:34:120;;:26:::1;::::0;::::1;::::0;:34:::1;::::0;:5:::1;::::0;5289:6;;5262:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5306:33:120::1;::::0;-1:-1:-1;;;5306:33:120;;:25:::1;::::0;-1:-1:-1;5306:25:120::1;::::0;-1:-1:-1;5306:33:120::1;::::0;:5:::1;::::0;5332:6;;5306:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5107:239:::0;;:::o;6385:177::-;2316:19:72;:17;:19::i;:::-;6488:29:120::1;::::0;-1:-1:-1;;;6488:29:120;;:21:::1;::::0;::::1;::::0;:29:::1;::::0;:5:::1;::::0;6510:6;;6488:29:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6527:28:120::1;::::0;-1:-1:-1;;;6527:28:120;;:20:::1;::::0;-1:-1:-1;6527:20:120::1;::::0;-1:-1:-1;6527:28:120::1;::::0;:5:::1;::::0;6548:6;;6527:28:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6385:177:::0;:::o;2345:196:122:-;2444:7;2470:64;2444:7;2515:18;2470:44;:64::i;7291:433:120:-;2316:19:72;:17;:19::i;:::-;7412:37:120::1;::::0;-1:-1:-1;;;7412:37:120;;:29:::1;::::0;::::1;::::0;:37:::1;::::0;:5:::1;::::0;7442:6;;7412:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7476:36:120::1;::::0;-1:-1:-1;;;7476:36:120;;7459:14:::1;::::0;-1:-1:-1;7476:28:120::1;::::0;-1:-1:-1;7476:28:120::1;::::0;:36:::1;::::0;7459:14;;7505:6;;7476:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7459:53;;-1:-1:-1::0;;7526:6:120::1;:23;;;:38:::0;7522:134:::1;;7580:48;;:5;7629:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;7580:65;::::0;-1:-1:-1;;;;;;7580:65:120::1;::::0;;;;;;::::1;::::0;::::1;26593:25:245::0;;;;-1:-1:-1;;;;;26654:32:245;26634:18;;;26627:60;26566:18;;7580:65:120::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7522:134;7665:52;::::0;-1:-1:-1;;;7665:52:120;;:5:::1;:52;::::0;::::1;2578:25:245::0;2619:18;;;2612:34;;;7665:44:120::1;::::0;::::1;::::0;2551:18:245;;7665:52:120::1;2404:248:245::0;5065:133:122;5160:31;;-1:-1:-1;;;5160:31:122;;5131:10;5160:31;;;2578:25:245;;;2619:18;;;2612:34;;;5131:10:122;5160:19;;;;2551:18:245;;5160:31:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5234:244::-;5335:29;;5286:7;;;;5335:54;;5286:7;;5335:54;:::i;:::-;360:21:134;380:1;-1:-1:-1;;360:21:134;:::i;:::-;5403:31:122;;:58;;;;:::i;:::-;5314:157;;;;5234:244;;:::o;2577:125::-;2621:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2621:32:122;2672:23;;-1:-1:-1;;;2672:23:122;;:5;:23;;;1805:25:245;2672:21:122;;;;1778:18:245;;2672:23:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2665:30;;2577:125;:::o;4759:191:66:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:66;;;;;:24;;;;4759:191::o;6594:183:120:-;2316:19:72;:17;:19::i;:::-;6701:30:120::1;::::0;-1:-1:-1;;;6701:30:120;;:22:::1;::::0;::::1;::::0;:30:::1;::::0;:5:::1;::::0;6724:6;;6701:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6741:29:120::1;::::0;-1:-1:-1;;;6741:29:120;;:21:::1;::::0;-1:-1:-1;6741:21:120::1;::::0;-1:-1:-1;6741:29:120::1;::::0;:5:::1;::::0;6763:6;;6741:29:::1;;;:::i;6198:208:122:-:0;6268:7;6291:5;6300:1;6291:10;6287:67;;6324:19;;-1:-1:-1;;;6324:19:122;;;;;;;;;;;6287:67;6370:29;:5;6387:4;6393:5;6370:16;:29::i;:::-;6363:36;6198:208;-1:-1:-1;;;6198:208:122:o;5713:155::-;5792:7;5818:43;5792:7;5847:6;5855:5;5818:28;:43::i;10360:267:120:-;2316:19:72;:17;:19::i;:::-;10527:42:120::1;::::0;-1:-1:-1;;;10527:42:120;;:34:::1;::::0;::::1;::::0;:42:::1;::::0;:5:::1;::::0;10562:6;;10527:42:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10579:41:120::1;::::0;-1:-1:-1;;;10579:41:120;;:33:::1;::::0;-1:-1:-1;10579:33:120::1;::::0;-1:-1:-1;10579:41:120::1;::::0;:5:::1;::::0;10613:6;;10579:41:::1;;;:::i;6442:238:122:-:0;6562:46;;:::i;:::-;6631:42;;-1:-1:-1;;;6631:42:122;;:15;;:27;;:42;;6659:5;;6666:6;;6631:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5246:136:66:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:66;;966:10:71;6441:34:66;6437:102;;6498:30;;-1:-1:-1;;;6498:30:66;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;6809:207:120:-;2316:19:72;:17;:19::i;:::-;6928:36:120::1;::::0;-1:-1:-1;;;6928:36:120;;:28:::1;::::0;::::1;::::0;:36:::1;::::0;:5:::1;::::0;6957:6;;6928:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6974:35:120::1;::::0;-1:-1:-1;;;6974:35:120;;:27:::1;::::0;-1:-1:-1;6974:27:120::1;::::0;-1:-1:-1;6974:35:120::1;::::0;:5:::1;::::0;7002:6;;6974:35:::1;;;:::i;6716:243:122:-:0;6838:48;;:::i;:::-;6909:43;;-1:-1:-1;;;6909:43:122;;:16;;:28;;:43;;6938:5;;6945:6;;6909:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9294:742:120:-;9502:39;9543:35;2316:19:72;:17;:19::i;:::-;2681:24:120::1;3191:16:66;3202:4;3191:10;:16::i;:::-;9594:46:120::2;::::0;-1:-1:-1;;;9594:46:120;;:38:::2;::::0;::::2;::::0;:46:::2;::::0;:5:::2;::::0;9633:6;;9594:46:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;9759:45:120::2;::::0;-1:-1:-1;;;9759:45:120;;9650:14:::2;::::0;-1:-1:-1;9759:37:120::2;::::0;-1:-1:-1;9759:37:120::2;::::0;:45:::2;::::0;9650:14;;9797:6;;9759:45:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9674:130:::0;;-1:-1:-1;9674:130:120;-1:-1:-1;9674:130:120;-1:-1:-1;9814:48:120::2;;:5;9863:15;::::0;;;::::2;::::0;::::2;;:::i;:::-;9814:65;::::0;-1:-1:-1;;;;;;9814:65:120::2;::::0;;;;;;::::2;::::0;::::2;26593:25:245::0;;;;-1:-1:-1;;;;;26654:32:245;26634:18;;;26627:60;26566:18;;9814:65:120::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;9889:78:120::2;::::0;-1:-1:-1;;;9889:78:120;;:37:::2;::::0;-1:-1:-1;9889:37:120::2;::::0;-1:-1:-1;9889:78:120::2;::::0;:5:::2;::::0;9927:6;;9935:31;;9889:78:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;9977:52:120::2;::::0;-1:-1:-1;;;9977:52:120;;:5:::2;:52;::::0;::::2;2578:25:245::0;2619:18;;;2612:34;;;9977:44:120::2;::::0;-1:-1:-1;9977:44:120::2;::::0;-1:-1:-1;2551:18:245;;9977:52:120::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;9584:452;2345:1:72::1;9294:742:120::0;;;:::o;6001:96::-;2738:24;3191:16:66;3202:4;3191:10;:16::i;:::-;6080:10:120::1;:8;:10::i;:::-;6001:96:::0;:::o;5383:452::-;2808:37;3191:16:66;3202:4;3191:10;:16::i;:::-;5565:35:120;;;-1:-1:-1;;;;;5610:48:120;;::::1;-1:-1:-1::0;;;;;;5668:70:120;;;;-1:-1:-1;;;5722:15:120::1;-1:-1:-1::0;;;;;5668:70:120::1;;;::::0;;;5753:75:::1;::::0;;5565:35;;;::::1;38149:34:245::0;;;38214:2;38199:18;;38192:43;;;;5790:10:120::1;::::0;5753:75:::1;::::0;38069:18:245;5753:75:120::1;;;;;;;5531:304;5383:452:::0;;:::o;4158:214:70:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:70;:::o;5904:258:122:-;6048:37;;-1:-1:-1;;;6048:37:122;;5994:7;6048:37;;;2578:25:245;;;2619:18;;;2612:34;;;5994:7:122;;;6048:21;;;;2551:18:245;;6048:37:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6013:72;;;;;;;;;;-1:-1:-1;;;;;6013:72:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;6102:53;-1:-1:-1;;;6102:53:122;;6013:72;;-1:-1:-1;6102:39:122;;;;:53;;-1:-1:-1;;6013:72:122;;6102:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3674:409::-;3732:15;;:::i;:::-;3766:310;;;-1:-1:-1;;;;;3795:22:122;;-1:-1:-1;3795:22:122;;;:10;:22;;;;;;;;3766:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3795:22;;3766:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3766:310:122;;;;-1:-1:-1;;;3766:310:122;;-1:-1:-1;3766:310:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3766:310:122;;;;;;;;;3882:26;;:42;;-1:-1:-1;;;3882:42:122;;;;;38986:51:245;;;;3766:310:122;;;;;3882:26;;;;:36;;38959:18:245;;3882:42:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3766:310;;3959:27;;:43;;-1:-1:-1;;;3959:43:122;;-1:-1:-1;;;;;39004:32:245;;;3959:43:122;;;38986:51:245;3766:310:122;;;;;3959:27;;;;:37;;38959:18:245;;3959:43:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3766:310;;4029:20;;:36;;-1:-1:-1;;;4029:36:122;;-1:-1:-1;;;;;39004:32:245;;;4029:36:122;;;38986:51:245;3766:310:122;;;;;4029:20;;;;:30;;38959:18:245;;4029:36:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3766:310;;3759:317;3674:409;-1:-1:-1;;3674:409:122:o;3878:627:120:-;8870:21:69;4302:15;;-1:-1:-1;;;4302:15:69;;;;4301:16;;-1:-1:-1;;;;;4348:14:69;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;-1:-1:-1;;;;;4790:16:69;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:69;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:69;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:69;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:69;-1:-1:-1;;;5013:22:69;;;4979:67;4135:43:120::1;::::0;-1:-1:-1;;;4135:43:120;;:24:::1;::::0;::::1;::::0;:43:::1;::::0;:5:::1;::::0;4160;;4167:1;;4170;;4173;;4176;;4135:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4189:22;:20;:22::i;:::-;4221:17;:15;:17::i;:::-;4248:24;:22;:24::i;:::-;4283:35;::::0;-1:-1:-1;;;4283:35:120;;:23:::1;::::0;::::1;::::0;:35:::1;::::0;:5:::1;::::0;4307:1;;4310;;4313;;4316;;4283:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4328:37;2362:4:66;4339:18:120::0;::::1;4359:5;4328:10;:37::i;:::-;;4375:30;2738:24;4399:5;4375:10;:30::i;:::-;;4415;2681:24;4439:5;4415:10;:30::i;:::-;;4455:43;2808:37;4492:5;4455:10;:43::i;:::-;;5070:14:69::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:69;;;5142:14;;-1:-1:-1;43689:50:245;;5142:14:69;;43677:2:245;43662:18;5142:14:69;;;;;;;5066:101;4092:1081;;;;;3878:627:120;;;;;:::o;4313:141:122:-;2270:29:134;;4386:4:122;;-1:-1:-1;;4409:38:122;2104:202:134;4865:164:122;4941:21;;:::i;:::-;4981:41;;-1:-1:-1;;;4981:41:122;;:5;:41;;;2578:25:245;2619:18;;;2612:34;;;4981:23:122;;;;2551:18:245;;4981:41:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4974:48;;;;;;;;;;-1:-1:-1;;;;;4974:48:122;;;;-1:-1:-1;;;4974:48:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4865:164:122:o;2738:128::-;2783:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2783:33:122;2835:24;;-1:-1:-1;;;2835:24:122;;:5;:24;;;1805:25:245;2835:22:122;;;;1778:18:245;;2835:24:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2902:116::-;-1:-1:-1;;;;;;;;;;;;;;;;;2991:20:122;;-1:-1:-1;;;2991:20:122;;:5;:20;;;1805:25:245;2991:18:122;;;;1778::245;;2991:20:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8218:171:120:-;2316:19:72;:17;:19::i;:::-;8319:27:120::1;::::0;-1:-1:-1;;;8319:27:120;;:19:::1;::::0;::::1;::::0;:27:::1;::::0;:5:::1;::::0;8339:6;;8319:27:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8356:26:120::1;::::0;-1:-1:-1;;;8356:26:120;;:18:::1;::::0;-1:-1:-1;8356:18:120::1;::::0;-1:-1:-1;8356:26:120::1;::::0;:5:::1;::::0;8375:6;;8356:26:::1;;;:::i;5872:92::-:0;2738:24;3191:16:66;3202:4;3191:10;:16::i;:::-;5949:8:120::1;:6;:8::i;10068:260::-:0;2316:19:72;:17;:19::i;:::-;4778:34:120::1;::::0;-1:-1:-1;;;4778:34:120;;4748:27:::1;4778:34;::::0;::::1;26593:25:245::0;;;4801:10:120::1;26634:18:245::0;;;26627:60;4748:27:120;4778:22:::1;::::0;::::1;::::0;26566:18:245;;4778:34:120::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10248:32:::2;::::0;-1:-1:-1;;;10248:32:120;;4748:64;;-1:-1:-1;10248:24:120::2;::::0;::::2;::::0;:32:::2;::::0;:5:::2;::::0;10273:6;;10248:32:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;10290:31:120::2;::::0;-1:-1:-1;;;10290:31:120;;:23:::2;::::0;-1:-1:-1;10290:23:120::2;::::0;-1:-1:-1;10290:31:120::2;::::0;:5:::2;::::0;10314:6;;10290:31:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;4862:34:120::1;::::0;-1:-1:-1;;;4862:34:120;;4833:26:::1;4862:34;::::0;::::1;26593:25:245::0;;;4885:10:120::1;26634:18:245::0;;;26627:60;4833:26:120;-1:-1:-1;4862:22:120::1;::::0;-1:-1:-1;4862:22:120::1;::::0;26566:18:245;;4862:34:120::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4833:63;;4911:22;4910:23;:48;;;;;4937:21;4910:48;4906:158;;;5019:33;::::0;-1:-1:-1;;;5019:33:120;;:5:::1;:33;::::0;::::1;26593:25:245::0;5007:10:120::1;26634:18:245::0;;;26627:60;;;5007:10:120;5019:21:::1;::::0;::::1;::::0;26566:18:245;;5019:33:120::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4981:72;::::0;-1:-1:-1;;;4981:72:120;;-1:-1:-1;;;;;46843:32:245;;;4981:72:120::1;::::0;::::1;46825:51:245::0;46892:18;;;46885:34;46798:18;;4981:72:120::1;;;;;;;;3732:207:66::0;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:66;;;;;;;;-1:-1:-1;;;;;3901:31:66;;;;;;;;;;;;;;;3732:207::o;6134:219:120:-;6276:22;2316:19:72;:17;:19::i;:::-;6324:22:120::1;:5;6340::::0;;6324:15:::1;:22::i;4119:158:122:-:0;4188:26;;:::i;:::-;-1:-1:-1;;;;;;4233:37:122;;;:5;:37;;;:31;:37;;;;;;;;;4226:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4119:158::o;4675:154::-;4747:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:19:122;4785:37;;-1:-1:-1;;;4785:37:122;;:5;:37;;;2578:25:245;2619:18;;;2612:34;;;4785:21:122;;;;2551:18:245;;4785:37:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4778:44;;;;;;;;;;-1:-1:-1;;;;;4778:44:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4675:154;-1:-1:-1;;4675:154:122:o;1833:122::-;1921:27;;-1:-1:-1;;;1921:27:122;;1895:7;1921:27;;;26593:25:245;;;-1:-1:-1;;;;;26654:32:245;;26634:18;;;26627:60;1895:7:122;1921:21;;;;26566:18:245;;1921:27:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4490:149::-;4567:4;4590:42;4567:4;4615:16;4590:24;:42::i;7048:211:120:-;2316:19:72;:17;:19::i;:::-;7169:37:120::1;::::0;-1:-1:-1;;;7169:37:120;;:29:::1;::::0;::::1;::::0;:37:::1;::::0;:5:::1;::::0;7199:6;;7169:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7216:36:120::1;::::0;-1:-1:-1;;;7216:36:120;;:28:::1;::::0;-1:-1:-1;7216:28:120::1;::::0;-1:-1:-1;7216:36:120::1;::::0;:5:::1;::::0;7245:6;;7216:36:::1;;;:::i;5662:138:66:-:0;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;7756:430:120:-:0;2316:19:72;:17;:19::i;:::-;7877:38:120::1;::::0;-1:-1:-1;;;7877:38:120;;:30:::1;::::0;::::1;::::0;:38:::1;::::0;:5:::1;::::0;7908:6;;7877:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7942:37:120::1;::::0;-1:-1:-1;;;7942:37:120;;7925:14:::1;::::0;-1:-1:-1;7942:29:120::1;::::0;-1:-1:-1;7942:29:120::1;::::0;:37:::1;::::0;7925:14;;7972:6;;7942:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7925:54;;-1:-1:-1::0;;7993:6:120::1;:23;;;:38:::0;7989:129:::1;;8047:60;::::0;-1:-1:-1;;;8047:60:120;;:5:::1;:60;::::0;::::1;26593:25:245::0;8096:10:120::1;26634:18:245::0;;;26627:60;8047:48:120::1;::::0;::::1;::::0;26566:18:245;;8047:60:120::1;26386:307:245::0;8624:403:120;8772:39;2316:19:72;:17;:19::i;:::-;8827:31:120::1;::::0;-1:-1:-1;;;8827:31:120;;:23:::1;::::0;::::1;::::0;:31:::1;::::0;:5:::1;::::0;8851:6;;8827:31:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8902:30:120::1;::::0;-1:-1:-1;;;8902:30:120;;:22:::1;::::0;-1:-1:-1;8902:22:120::1;::::0;-1:-1:-1;8902:30:120::1;::::0;:5:::1;::::0;8925:6;;8902:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8942:78;::::0;-1:-1:-1;;;8942:78:120;;8868:64;;-1:-1:-1;8942:37:120::1;::::0;::::1;::::0;:78:::1;::::0;:5:::1;::::0;8980:6;;8868:64;;8942:78:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8624:403:::0;;;:::o;2148:161:122:-;2254:48;;-1:-1:-1;;;2254:48:122;;2231:4;2254:48;;;2578:25:245;;;2619:18;;;2612:34;;;2231:4:122;2254:32;;;;2551:18:245;;2254:48:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10659:211:120:-;2316:19:72;:17;:19::i;:::-;10780:37:120::1;::::0;-1:-1:-1;;;10780:37:120;;:29:::1;::::0;::::1;::::0;:37:::1;::::0;:5:::1;::::0;10810:6;;10780:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10827:36:120::1;::::0;-1:-1:-1;;;10827:36:120;;:28:::1;::::0;-1:-1:-1;10827:28:120::1;::::0;-1:-1:-1;10827:36:120::1;::::0;:5:::1;::::0;10856:6;;10827:36:::1;;;:::i;8421:171::-:0;2316:19:72;:17;:19::i;:::-;8522:27:120::1;::::0;-1:-1:-1;;;8522:27:120;;:5:::1;:27;::::0;::::1;49907:25:245::0;49968:20;;49948:18;;;49941:48;8522:19:120::1;::::0;::::1;::::0;49880:18:245;;8522:27:120::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8559:26:120::1;::::0;-1:-1:-1;;;8559:26:120;;:5:::1;:26;::::0;::::1;49907:25:245::0;49968:20;;49948:18;;;49941:48;8559:18:120::1;::::0;-1:-1:-1;8559:18:120::1;::::0;-1:-1:-1;49880:18:245;;8559:26:120::1;49638:357:245::0;1991:121:122;2077:28;;-1:-1:-1;;;2077:28:122;;2054:4;2077:28;;;26593:25:245;;;-1:-1:-1;;;;;26654:32:245;;26634:18;;;26627:60;2054:4:122;2077:22;;;;26566:18:245;;2077:28:122;26386:307:245;5514:163:122;5597:7;5623:47;5597:7;5654:8;5664:5;5623:30;:47::i;9059:203:120:-;2316:19:72;:17;:19::i;:::-;9176:35:120::1;::::0;-1:-1:-1;;;9176:35:120;;:5:::1;:35;::::0;::::1;49907:25:245::0;49968:20;;49948:18;;;49941:48;9176:27:120::1;::::0;::::1;::::0;49880:18:245;;9176:35:120::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9221:34:120::1;::::0;-1:-1:-1;;;9221:34:120;;:5:::1;:34;::::0;::::1;49907:25:245::0;49968:20;;49948:18;;;49941:48;9221:26:120::1;::::0;-1:-1:-1;9221:26:120::1;::::0;-1:-1:-1;49880:18:245;;9221:34:120::1;49638:357:245::0;4148:103:66;4214:30;4225:4;966:10:71;4214::66;:30::i;2905:128:72:-;-1:-1:-1;;;;;;;;;;;2821:9:72;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:72;;;;;;;;;;;2966:61;2905:128::o;971:477:129:-;1112:29;1181:260;1232:5;:12;;:22;;;;;;;;;;-1:-1:-1;;;;;1232:22:129;-1:-1:-1;;;;;1232:31:129;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1226:39;;:2;:39;:::i;:::-;1208:57;;:15;:57;:::i;:::-;1285:36;;;;:47;;;-1:-1:-1;;;1285:47:129;;;;-1:-1:-1;;;;;1285:36:129;;;;:45;;:47;;;;;;;;;;;;;;;:36;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1279:53;;:2;:53;:::i;:::-;1388:32;;;;:43;;;-1:-1:-1;;;1388:43:129;;;;-1:-1:-1;;;;;1388:32:129;;;;:41;;:43;;;;;;;;;;;;;;;:32;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1382:49;;:2;:49;:::i;:::-;1346:12;;;:22;:33;;;-1:-1:-1;;;1346:33:129;;;;-1:-1:-1;;;;;1346:22:129;;;;:31;;:33;;;;;;;;;;;;;;;:22;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;1181:13;:260::i;8626:187::-;8719:7;8745:61;8759:4;8765:31;8783:5;8790;8765:17;:31::i;:::-;179:4:135;8745:13:129;:61::i;:::-;8738:68;8626:187;-1:-1:-1;;;;8626:187:129:o;2353:1240:137:-;2458:7;2481:5;2490:1;2481:10;2477:42;;2500:19;;-1:-1:-1;;;2500:19:137;;;;;;;;;;;2477:42;2531:27;2560:36;2600;2624:5;2631:4;2600:23;:36::i;:::-;2530:106;;;;2651:17;2658:9;2651:6;:17::i;:::-;2647:74;;;2691:19;;-1:-1:-1;;;2691:19:137;;;;;;;;;;;2647:74;2743:23;;2735:31;;;:66;;;2778:14;:23;;;2770:5;:31;2735:66;2731:186;;;2857:23;;2882;;;;2824:82;;-1:-1:-1;;;2824:82:137;;;;;52544:25:245;;;52585:18;;;52578:34;;;;52628:18;;;52621:34;52517:18;;2824:82:137;52342:319:245;2731:186:137;2979:27;;;;;3020:327;;;;;;;;3091:35;;;;-1:-1:-1;;;;;3091:35:137;;3020:327;;-1:-1:-1;;;;;;;;3177:44:137;;;;3020:327;;;;;;;-1:-1:-1;;;3280:52:137;;;;;3020:327;;;;2941:435;-1:-1:-1;;;2941:435:137;;2927:11;;2941:17;;:24;;:435;;3020:327;3361:5;;2941:435;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2927:449;;3396:14;:21;;;3390:3;:27;3386:86;;;-1:-1:-1;3440:21:137;;;;-1:-1:-1;3433:28:137;;-1:-1:-1;3433:28:137;3386:86;3491:14;:21;;;3485:3;:27;3481:86;;;-1:-1:-1;3535:21:137;;;;-1:-1:-1;3528:28:137;;-1:-1:-1;3528:28:137;3481:86;3583:3;2353:1240;-1:-1:-1;;;;;;2353:1240:137:o;7270:387:66:-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:66;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:66;;;;;;;;;:38;;-1:-1:-1;;7475:38:66;7509:4;7475:38;;;7559:12;966:10:71;;887:96;7559:12:66;-1:-1:-1;;;;;7532:40:66;7550:7;-1:-1:-1;;;;;7532:40:66;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7432:219;7353:304;7270:387;;;;:::o;7892:388::-;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:66;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:66;;;;;;;;;;:39;;-1:-1:-1;;8097:39:66;;;8155:40;966:10:71;;8097:14:66;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;3674:178:72;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:72;;-1:-1:-1;;3791:17:72::1;::::0;;3823:22:::1;966:10:71::0;3832:12:72::1;3823:22;::::0;-1:-1:-1;;;;;39004:32:245;;;38986:51;;38974:2;38959:18;3823:22:72::1;;;;;;;3722:130;3674:178::o:0;4599:312:70:-;4679:4;-1:-1:-1;;;;;4688:6:70;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:70;:32;-1:-1:-1;;;;;;;;;;;2035:53:80;-1:-1:-1;;;;;2035:53:80;;1957:138;4749:32:70;-1:-1:-1;;;;;4749:42:70;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:70;;;;;;;;;;;4511:103:120;2362:4:66;3191:16;2362:4;3191:10;:16::i;6052:538:70:-;6169:17;-1:-1:-1;;;;;6151:50:70;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:70;;;;;;;;-1:-1:-1;;6151:52:70;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:70;;-1:-1:-1;;;;;39004:32:245;;6513:60:70;;;38986:51:245;38959:18;;6513:60:70;38840:203:245;6147:437:70;-1:-1:-1;;;;;;;;;;;6245:40:70;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:70;;;;;1805:25:245;;;1778:18;;6312:34:70;1659:177:245;6241:120:70;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:70;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:70;;;;;;;;;;;3231:65:66;6931:20:69;:18;:20::i;1836:97:72:-;6931:20:69;:18;:20::i;:::-;1899:27:72::1;:25;:27::i;3366:176::-:0;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:72;;-1:-1:-1;;3484:16:72::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:71::0;3522:12:72::1;887:96:71::0;1356:885:136;1471:22;;;:29;;-1:-1:-1;;;;1471:29:136;-1:-1:-1;;;1471:29:136;;;1546:27;;;;:41;;;-1:-1:-1;;;1546:41:136;;;;1437:22;;1471:29;;-1:-1:-1;;;;;1546:27:136;;;;:39;;:41;;;;;;;;;;;;;;;:27;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1511:76;;1597:29;1629:5;:10;;:20;;;;;;;;;;-1:-1:-1;;;;;1629:20:136;-1:-1:-1;;;;;1629:32:136;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1597:66;-1:-1:-1;1696:4:136;-1:-1:-1;;;;;1684:24:136;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:34;;1723:9;1718:132;1738:15;;;1718:132;;;1787:52;1824:4;1831;;1836:1;1831:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1787:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1787:28:136;;-1:-1:-1;;;1787:52:136:i;:::-;1774:7;1782:1;1774:10;;;;;;;;:::i;:::-;;;;;;;;;;:65;1755:3;;1718:132;;;-1:-1:-1;1894:27:136;;;;:41;;;-1:-1:-1;;;1894:41:136;;;;1860:31;;-1:-1:-1;;;;;1894:27:136;;:39;;:41;;;;;;;;;;;;;;:27;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1860:75;;1945:28;1976:5;:10;;:20;;;;;;;;;;-1:-1:-1;;;;;1976:20:136;-1:-1:-1;;;;;1976:32:136;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2021:172;;-1:-1:-1;;;2021:172:136;;;;;56007:25:245;;;56048:18;;;56041:34;;;56091:18;;;56084:34;;;56134:18;;;56127:34;;;56177:19;;;56170:35;;;1945:65:136;;-1:-1:-1;2021:54:136;;;;55979:19:245;;2021:172:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2204:22:136;;;;:30;;-1:-1:-1;;;;2204:30:136;;;-1:-1:-1;1356:885:136;;;-1:-1:-1;;;;;;1356:885:136:o;2531:208:134:-;2623:4;360:21;380:1;-1:-1:-1;;360:21:134;:::i;:::-;2646:10;:38;;:86;;;;-1:-1:-1;;2701:31:134;;;;;;-1:-1:-1;2688:44:134;2531:208::o;4232:1278:137:-;4363:7;4390:5;4399:1;4390:10;4386:42;;4409:19;;-1:-1:-1;;;4409:19:137;;;;;;;;;;;4386:42;4440:29;4471:36;4511:38;4537:5;4544:4;4511:25;:38::i;4381:197:66:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:66;;-1:-1:-1;;;;;46843:32:245;;4514:47:66;;;46825:51:245;46892:18;;;46885:34;;;46798:18;;4514:47:66;46651:274:245;614:142:135;688:7;714:35;741:1;744;747;714:26;:35::i;8000:173:129:-;8126:26;;8086:7;;8112:54;;8154:5;230:8:135;8112:13:129;:54::i;6328:795:137:-;6442:17;;:::i;:::-;6461:21;;:::i;:::-;-1:-1:-1;;;;;6547:37:137;;;6498:46;6547:37;;;:31;;;:37;;;;;;;;;6498:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6605:33;6598:41;;:6;:41::i;:::-;6594:523;;;6680:5;:10;;:16;;:22;6697:4;-1:-1:-1;;;;;6680:22:137;-1:-1:-1;;;;;6680:22:137;;;;;;;;;;;;:32;;6730:228;;;;;;;;6777:1;6730:228;;;;-1:-1:-1;;6730:228:137;;;;6857:1;6730:228;;;;-1:-1:-1;;6730:228:137;;;;6938:1;6730:228;;;6655:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6594:523;7028:31;;-1:-1:-1;;;;;7011:49:137;:16;:49;;;:10;;;:49;;;;;;;;;7072:33;;;;7003:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7011:49;;7072:33;;7003:103;;7011:49;;7003:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6594:523;6488:635;6328:795;;;;;;:::o;1370:148::-;1456:15;;1433:4;;1456:20;:55;;;;;1480:31;:4;:22;;;:29;:31::i;3105:126:72:-;-1:-1:-1;;;;;;;;;;;2821:9:72;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:72;;;;;;;;;;;2779:335:80;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:80;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:69:-;8870:21;8560:40;-1:-1:-1;;;8560:40:69;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:69;;;;;;;;;;;1939:156:72;6931:20:69;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:72;;-1:-1:-1;;2071:17:72::1;::::0;;1939:156::o;4106:253:88:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:88;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:88:o;7296:805:137:-;7412:17;;:::i;:::-;7431:21;;:::i;:::-;-1:-1:-1;;;;;7517:37:137;;;7468:46;7517:37;;;:31;;;:37;;;;;;;;;7468:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7568:43;;:6;:43::i;:::-;7564:531;;;7652:5;:10;;:16;;:22;7669:4;-1:-1:-1;;;;;7652:22:137;-1:-1:-1;;;;;7652:22:137;;;;;;;;;;;;:34;;7704:228;;;;;;;;7751:1;7704:228;;;;-1:-1:-1;;7704:228:137;;;;7831:1;7704:228;;;;-1:-1:-1;;7704:228:137;;;;7912:1;7704:228;;;7627:319;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7564:531;8002:31;;-1:-1:-1;;;;;7985:49:137;:16;:49;;;:10;;;:49;;;;;;;;;8048:35;;;;7977:107;;;;;;;7985:61;;;7977:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7985:61;;8048:35;;7977:107;;7985:61;;7977:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25271:508:104;25345:9;25568:1;25564;25560:6;25556:14;25553:1;25550:21;25547:1;25543:29;25536:37;25533:1;25529:45;25519:169;;25607:10;25601:4;25594:24;25669:4;25663;25656:18;25519:169;-1:-1:-1;25749:9:104;;25724:17;;;25717:25;25710:33;25745:17;;;25706:57;;25271:508::o;5959:200:137:-;6049:13;;6026:4;;6049:18;:40;;;;-1:-1:-1;6071:13:137;;;;:18;6049:40;:60;;;;-1:-1:-1;6093:11:137;;;;:16;6049:60;:80;;;;-1:-1:-1;6113:11:137;;;;:16;6049:80;:103;;;;-1:-1:-1;;6133:14:137;;;:19;;5959:200::o;1481:183:139:-;1567:11;;:18;1544:4;;1567:23;:48;;;;-1:-1:-1;1594:9:139;;;;:16;:21;1567:48;:90;;;;-1:-1:-1;;1619:26:139;;;:33;:38;;1481:183::o;2186:281:80:-;2263:17;-1:-1:-1;;;;;2263:29:80;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:80;;-1:-1:-1;;;;;39004:32:245;;2320:47:80;;;38986:51:245;38959:18;;2320:47:80;38840:203:245;2259:119:80;-1:-1:-1;;;;;;;;;;;2387:73:80;;-1:-1:-1;;;;;;2387:73:80;-1:-1:-1;;;;;2387:73:80;;;;;;;;;;2186:281::o;6598:122::-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:80;;;;;;;;;;;4625:582:88;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:88;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:88;;-1:-1:-1;;;;;39004:32:245;;5121:24:88;;;38986:51:245;38959:18;;5121:24:88;38840:203:245;5041:119:88;-1:-1:-1;5180:10:88;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:88;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;14:286:245:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:245;;209:43;;199:71;;266:1;263;256:12;497:166;568:5;613:2;604:6;599:3;595:16;591:25;588:45;;;629:1;626;619:12;588:45;-1:-1:-1;651:6:245;497:166;-1:-1:-1;497:166:245:o;668:379::-;766:6;819:2;807:9;798:7;794:23;790:32;787:52;;;835:1;832;825:12;787:52;875:9;862:23;-1:-1:-1;;;;;900:6:245;897:30;894:50;;;940:1;937;930:12;894:50;963:78;1033:7;1024:6;1013:9;1009:22;963:78;:::i;1052:161::-;1118:5;1163:2;1154:6;1149:3;1145:16;1141:25;1138:45;;;1179:1;1176;1169:12;1218:251;1311:6;1364:2;1352:9;1343:7;1339:23;1335:32;1332:52;;;1380:1;1377;1370:12;1332:52;1403:60;1455:7;1444:9;1403:60;:::i;1474:180::-;1533:6;1586:2;1574:9;1565:7;1561:23;1557:32;1554:52;;;1602:1;1599;1592:12;1554:52;-1:-1:-1;1625:23:245;;1474:180;-1:-1:-1;1474:180:245:o;1841:209::-;1942:6;1995:3;1983:9;1974:7;1970:23;1966:33;1963:53;;;2012:1;2009;2002:12;2055:344;2203:2;2188:18;;2236:1;2225:13;;2215:144;;2281:10;2276:3;2272:20;2269:1;2262:31;2316:4;2313:1;2306:15;2344:4;2341:1;2334:15;2215:144;2368:25;;;2055:344;:::o;4009:248::-;4077:6;4085;4138:2;4126:9;4117:7;4113:23;4109:32;4106:52;;;4154:1;4151;4144:12;4106:52;-1:-1:-1;;4177:23:245;;;4247:2;4232:18;;;4219:32;;-1:-1:-1;4009:248:245:o;4262:131::-;-1:-1:-1;;;;;4337:31:245;;4327:42;;4317:70;;4383:1;4380;4373:12;4398:315;4466:6;4474;4527:2;4515:9;4506:7;4502:23;4498:32;4495:52;;;4543:1;4540;4533:12;4495:52;4582:9;4569:23;4601:31;4626:5;4601:31;:::i;:::-;4651:5;4703:2;4688:18;;;;4675:32;;-1:-1:-1;;;4398:315:245:o;4718:407::-;4824:6;4877:2;4865:9;4856:7;4852:23;4848:32;4845:52;;;4893:1;4890;4883:12;4845:52;4933:9;4920:23;-1:-1:-1;;;;;4958:6:245;4955:30;4952:50;;;4998:1;4995;4988:12;4952:50;5021:22;;5077:3;5059:16;;;5055:26;5052:46;;;5094:1;5091;5084:12;5130:127;5191:10;5186:3;5182:20;5179:1;5172:31;5222:4;5219:1;5212:15;5246:4;5243:1;5236:15;5262:253;5334:2;5328:9;5376:4;5364:17;;-1:-1:-1;;;;;5396:34:245;;5432:22;;;5393:62;5390:88;;;5458:18;;:::i;:::-;5494:2;5487:22;5262:253;:::o;5520:252::-;5592:2;5586:9;5634:3;5622:16;;-1:-1:-1;;;;;5653:34:245;;5689:22;;;5650:62;5647:88;;;5715:18;;:::i;5777:275::-;5848:2;5842:9;5913:2;5894:13;;-1:-1:-1;;5890:27:245;5878:40;;-1:-1:-1;;;;;5933:34:245;;5969:22;;;5930:62;5927:88;;;5995:18;;:::i;:::-;6031:2;6024:22;5777:275;;-1:-1:-1;5777:275:245:o;6057:118::-;6143:5;6136:13;6129:21;6122:5;6119:32;6109:60;;6165:1;6162;6155:12;6180:770;6248:5;6296:4;6284:9;6279:3;6275:19;6271:30;6268:50;;;6314:1;6311;6304:12;6268:50;6336:22;;:::i;:::-;6327:31;;6395:9;6382:23;6414:33;6439:7;6414:33;:::i;:::-;6470:7;6463:5;6456:22;;6538:2;6527:9;6523:18;6510:32;6505:2;6498:5;6494:14;6487:56;6603:2;6592:9;6588:18;6575:32;6570:2;6563:5;6559:14;6552:56;6668:2;6657:9;6653:18;6640:32;6635:2;6628:5;6624:14;6617:56;6734:3;6723:9;6719:19;6706:33;6700:3;6693:5;6689:15;6682:58;6801:3;6790:9;6786:19;6773:33;6767:3;6760:5;6756:15;6749:58;6859:3;6848:9;6844:19;6831:33;6873:30;6895:7;6873:30;:::i;:::-;6930:3;6919:15;;6912:32;6923:5;6180:770;-1:-1:-1;;6180:770:245:o;6955:257::-;7054:6;7107:3;7095:9;7086:7;7082:23;7078:33;7075:53;;;7124:1;7121;7114:12;7075:53;7147:59;7198:7;7187:9;7147:59;:::i;7217:309::-;7301:12;;-1:-1:-1;;;;;7297:38:245;7285:51;;7399:4;7388:16;;;7382:23;7375:31;7368:39;7352:14;;;7345:63;7457:4;7446:16;;;7440:23;7424:14;;;7417:47;7513:4;7502:16;;;7496:23;7480:14;;7473:47;7217:309::o;7531:703::-;7707:4;7749:3;7738:9;7734:19;7726:27;;7762:58;7810:9;7801:6;7795:13;7762:58;:::i;:::-;7905:1;7901;7896:3;7892:11;7888:19;7880:4;7872:6;7868:17;7862:24;7858:50;7851:4;7840:9;7836:20;7829:80;7965:4;7957:6;7953:17;7947:24;7940:4;7929:9;7925:20;7918:54;8028:4;8020:6;8016:17;8010:24;8003:4;7992:9;7988:20;7981:54;8091:4;8083:6;8079:17;8073:24;8066:4;8055:9;8051:20;8044:54;8156:4;8148:6;8144:17;8138:24;8129:6;8118:9;8114:22;8107:56;8221:4;8213:6;8209:17;8203:24;8194:6;8183:9;8179:22;8172:56;7531:703;;;;:::o;8239:315::-;8307:6;8315;8368:2;8356:9;8347:7;8343:23;8339:32;8336:52;;;8384:1;8381;8374:12;8336:52;8420:9;8407:23;8397:33;;8480:2;8469:9;8465:18;8452:32;8493:31;8518:5;8493:31;:::i;:::-;8543:5;8533:15;;;8239:315;;;;;:::o;9208:614::-;9386:4;9428:3;9417:9;9413:19;9405:27;;9441:58;9489:9;9480:6;9474:13;9441:58;:::i;:::-;9555:4;9547:6;9543:17;9537:24;9530:4;9519:9;9515:20;9508:54;9618:4;9610:6;9606:17;9600:24;9593:4;9582:9;9578:20;9571:54;9681:4;9673:6;9669:17;9663:24;9656:4;9645:9;9641:20;9634:54;9744:4;9736:6;9732:17;9726:24;9719:4;9708:9;9704:20;9697:54;9809:4;9801:6;9797:17;9791:24;9782:6;9771:9;9767:22;9760:56;9208:614;;;;:::o;9827:179::-;9910:5;9955:3;9946:6;9941:3;9937:16;9933:26;9930:46;;;9972:1;9969;9962:12;10011:286;10121:6;10174:3;10162:9;10153:7;10149:23;10145:33;10142:53;;;10191:1;10188;10181:12;10142:53;10214:77;10283:7;10272:9;10214:77;:::i;10302:301::-;10361:6;10414:2;10402:9;10393:7;10389:23;10385:32;10382:52;;;10430:1;10427;10420:12;10382:52;10469:9;10456:23;-1:-1:-1;;;;;10512:5:245;10508:46;10501:5;10498:57;10488:85;;10569:1;10566;10559:12;10608:898;10685:6;10693;10746:2;10734:9;10725:7;10721:23;10717:32;10714:52;;;10762:1;10759;10752:12;10714:52;10801:9;10788:23;10820:31;10845:5;10820:31;:::i;:::-;10870:5;-1:-1:-1;10894:2:245;10932:18;;;10919:32;-1:-1:-1;;;;;11000:14:245;;;10997:34;;;11027:1;11024;11017:12;10997:34;11065:6;11054:9;11050:22;11040:32;;11110:7;11103:4;11099:2;11095:13;11091:27;11081:55;;11132:1;11129;11122:12;11081:55;11168:2;11155:16;11190:2;11186;11183:10;11180:36;;;11196:18;;:::i;:::-;11238:53;11281:2;11262:13;;-1:-1:-1;;11258:27:245;11254:36;;11238:53;:::i;:::-;11225:66;;11314:2;11307:5;11300:17;11354:7;11349:2;11344;11340;11336:11;11332:20;11329:33;11326:53;;;11375:1;11372;11365:12;11326:53;11430:2;11425;11421;11417:11;11412:2;11405:5;11401:14;11388:45;11474:1;11469:2;11464;11457:5;11453:14;11449:23;11442:34;;11495:5;11485:15;;;;;10608:898;;;;;:::o;11511:250::-;11596:1;11606:113;11620:6;11617:1;11614:13;11606:113;;;11696:11;;;11690:18;11677:11;;;11670:39;11642:2;11635:10;11606:113;;;-1:-1:-1;;11753:1:245;11735:16;;11728:27;11511:250::o;11766:271::-;11808:3;11846:5;11840:12;11873:6;11868:3;11861:19;11889:76;11958:6;11951:4;11946:3;11942:14;11935:4;11928:5;11924:16;11889:76;:::i;:::-;12019:2;11998:15;-1:-1:-1;;11994:29:245;11985:39;;;;12026:4;11981:50;;11766:271;-1:-1:-1;;11766:271:245:o;12042:220::-;12191:2;12180:9;12173:21;12154:4;12211:45;12252:2;12241:9;12237:18;12229:6;12211:45;:::i;12267:247::-;12326:6;12379:2;12367:9;12358:7;12354:23;12350:32;12347:52;;;12395:1;12392;12385:12;12347:52;12434:9;12421:23;12453:31;12478:5;12453:31;:::i;12519:450::-;12583:3;12621:5;12615:12;12648:6;12643:3;12636:19;12674:4;12703;12698:3;12694:14;12687:21;;12742:4;12735:5;12731:16;12765:1;12775:169;12789:6;12786:1;12783:13;12775:169;;;12850:13;;12838:26;;12884:12;;;;12919:15;;;;12811:1;12804:9;12775:169;;;-1:-1:-1;12960:3:245;;12519:450;-1:-1:-1;;;;;12519:450:245:o;12974:1103::-;13063:5;13057:12;13052:3;13045:25;13027:3;13089:4;13139:2;13132:5;13128:14;13122:21;13173:4;13168:2;13163:3;13159:12;13152:26;13215:12;13209:19;13260:4;13253;13248:3;13244:14;13237:28;13286:70;13351:3;13346;13342:13;13326:14;13286:70;:::i;:::-;13393:21;;;13387:28;-1:-1:-1;;13477:14:245;;;13473:23;;13466:4;13457:14;;13450:47;13546:21;;13576:20;;;13650:23;;;;-1:-1:-1;13691:1:245;;13434:7;;13614:13;;;;13701:175;13715:6;13712:1;13709:13;13701:175;;;13778:13;;13764:28;;13851:15;;;;13737:1;13730:9;;;;;13814:14;;;;13701:175;;;13705:3;13931:4;13917:12;13913:23;13907:30;13885:52;;13989:2;13983:3;13976:5;13972:15;13968:24;13962:3;13957;13953:13;13946:47;14009:62;14065:5;14049:14;14009:62;:::i;:::-;14002:69;12974:1103;-1:-1:-1;;;;;;;;;12974:1103:245:o;14082:1146::-;14265:2;14254:9;14247:21;14228:4;14303:6;14297:13;14346:4;14341:2;14330:9;14326:18;14319:32;14388:12;14382:19;14438:4;14432:3;14421:9;14417:19;14410:33;14466:65;14526:3;14515:9;14511:19;14495:14;14466:65;:::i;:::-;14452:79;;14586:2;14572:12;14568:21;14562:28;14659:3;14655:8;14643:9;14635:6;14631:22;14627:37;14621:3;14610:9;14606:19;14599:66;14688:52;14733:6;14717:14;14688:52;:::i;:::-;14674:66;;;14801:4;14787:12;14783:23;14777:30;14771:3;14760:9;14756:19;14749:59;14883:4;14869:12;14865:23;14859:30;14852:38;14845:46;14839:3;14828:9;14824:19;14817:75;14941:2;14933:6;14929:15;14923:22;14901:44;;14954:56;15004:4;14993:9;14989:20;14973:14;-1:-1:-1;;;;;2723:31:245;2711:44;;2657:104;14954:56;15066:4;15058:6;15054:17;15048:24;15041:4;15030:9;15026:20;15019:54;15129:4;15121:6;15117:17;15111:24;15104:4;15093:9;15089:20;15082:54;15192:4;15184:6;15180:17;15174:24;15167:4;15156:9;15152:20;15145:54;15216:6;15208:14;;;;14082:1146;;;;:::o;15233:174::-;15311:5;15356:3;15347:6;15342:3;15338:16;15334:26;15331:46;;;15373:1;15370;15363:12;15412:894;15684:6;15692;15700;15708;15716;15769:3;15757:9;15748:7;15744:23;15740:33;15737:53;;;15786:1;15783;15776:12;15737:53;15825:9;15812:23;15844:31;15869:5;15844:31;:::i;:::-;15894:5;-1:-1:-1;15918:81:245;15991:7;15986:2;15971:18;;15918:81;:::i;:::-;15908:91;;16018:82;16092:7;16086:3;16075:9;16071:19;16018:82;:::i;:::-;16008:92;;16119:75;16186:7;16180:3;16169:9;16165:19;16119:75;:::i;:::-;16109:85;;16213:87;16292:7;16286:3;16275:9;16271:19;16213:87;:::i;:::-;16203:97;;15412:894;;;;;;;;:::o;17129:270::-;17329:3;17314:19;;17342:51;17318:9;17375:6;17342:51;:::i;18384:254::-;18475:6;18528:2;18516:9;18507:7;18503:23;18499:32;18496:52;;;18544:1;18541;18534:12;18496:52;18567:65;18624:7;18613:9;18567:65;:::i;18902:626::-;18999:6;19007;19060:2;19048:9;19039:7;19035:23;19031:32;19028:52;;;19076:1;19073;19066:12;19028:52;19116:9;19103:23;-1:-1:-1;;;;;19186:2:245;19178:6;19175:14;19172:34;;;19202:1;19199;19192:12;19172:34;19240:6;19229:9;19225:22;19215:32;;19285:7;19278:4;19274:2;19270:13;19266:27;19256:55;;19307:1;19304;19297:12;19256:55;19347:2;19334:16;19373:2;19365:6;19362:14;19359:34;;;19389:1;19386;19379:12;19359:34;19442:7;19437:2;19427:6;19424:1;19420:14;19416:2;19412:23;19408:32;19405:45;19402:65;;;19463:1;19460;19453:12;19402:65;19494:2;19486:11;;;;;19516:6;;-1:-1:-1;18902:626:245;;-1:-1:-1;;;;18902:626:245:o;19533:801::-;19693:4;19722:2;19762;19751:9;19747:18;19792:2;19781:9;19774:21;19815:6;19850;19844:13;19881:6;19873;19866:22;19919:2;19908:9;19904:18;19897:25;;19981:2;19971:6;19968:1;19964:14;19953:9;19949:30;19945:39;19931:53;;20019:2;20011:6;20007:15;20040:1;20050:255;20064:6;20061:1;20058:13;20050:255;;;20157:2;20153:7;20141:9;20133:6;20129:22;20125:36;20120:3;20113:49;20185:40;20218:6;20209;20203:13;20185:40;:::i;:::-;20175:50;-1:-1:-1;20283:12:245;;;;20248:15;;;;20086:1;20079:9;20050:255;;;-1:-1:-1;20322:6:245;;19533:801;-1:-1:-1;;;;;;;19533:801:245:o;20667:551::-;20912:13;;-1:-1:-1;;;;;20908:39:245;20890:58;;20995:4;20983:17;;;20977:24;20877:3;20862:19;;;21010:68;;21057:20;;20977:24;20425:5;20419:12;20414:3;20407:25;20481:4;20474:5;20470:16;20464:23;20457:4;20452:3;20448:14;20441:47;20537:4;20530:5;20526:16;20520:23;20513:4;20508:3;20504:14;20497:47;20593:4;20586:5;20582:16;20576:23;20569:4;20564:3;20560:14;20553:47;20649:4;20642:5;20638:16;20632:23;20625:4;20620:3;20616:14;20609:47;;;20339:323;21010:68;-1:-1:-1;21127:4:245;21115:17;;;21109:24;20419:12;;21206:4;21191:20;;20407:25;20481:4;20470:16;;20464:23;20448:14;;;20441:47;20526:16;;;20520:23;20504:14;;;20497:47;20593:4;20582:16;;20576:23;20560:14;;;20553:47;20649:4;20638:16;;20632:23;20616:14;;;20609:47;21142:70;20339:323;21519:264;21305:12;;-1:-1:-1;;;;;21301:38:245;21289:51;;21389:4;21378:16;;;21372:23;21356:14;;;21349:47;21445:4;21434:16;;;21428:23;21412:14;;;21405:47;21501:4;21490:16;;;21484:23;21468:14;;;21461:47;21715:3;21700:19;;21728:49;21223:291;22433:209;22534:6;22587:3;22575:9;22566:7;22562:23;22558:33;22555:53;;;22604:1;22601;22594:12;22647:159;22711:5;22756:2;22747:6;22742:3;22738:16;22734:25;22731:45;;;22772:1;22769;22762:12;22811:247;22902:6;22955:2;22943:9;22934:7;22930:23;22926:32;22923:52;;;22971:1;22968;22961:12;22923:52;22994:58;23044:7;23033:9;22994:58;:::i;23323:1070::-;23589:6;23578:9;23571:25;23632:2;23627;23616:9;23612:18;23605:30;23552:4;23683:6;23670:20;23770:2;23766:7;23757:6;23741:14;23737:27;23733:41;23713:18;23709:66;23699:94;;23789:1;23786;23779:12;23699:94;23815:31;;23923:2;23912:14;;;23869:19;-1:-1:-1;;;;;23938:30:245;;23935:50;;;23981:1;23978;23971:12;23935:50;24030:6;24014:14;24010:27;24001:7;23997:41;23994:61;;;24051:1;24048;24041:12;23994:61;24091:2;24086;24075:9;24071:18;24064:30;24131:6;24125:3;24114:9;24110:19;24103:35;24190:6;24181:7;24175:3;24164:9;24160:19;24147:50;24247:1;24241:3;24232:6;24221:9;24217:22;24213:32;24206:43;24310:2;24302:6;24298:15;24285:29;24280:2;24269:9;24265:18;24258:57;24383:3;24376:2;24372:7;24367:2;24359:6;24355:15;24351:29;24340:9;24336:45;24332:55;24324:63;;;;23323:1070;;;;;:::o;24398:442::-;24502:5;24489:19;24517:33;24542:7;24517:33;:::i;:::-;-1:-1:-1;;;;;24609:16:245;;;24597:29;;24682:4;24671:16;;;24658:30;24642:14;;;24635:54;24737:4;24726:16;;24713:30;;24752:33;24713:30;24752:33;:::i;:::-;24830:2;24821:7;24817:16;24810:4;24805:3;24801:14;24794:40;;;24398:442;;:::o;24845:382::-;25119:25;;;25106:3;25091:19;;25153:68;25217:2;25202:18;;25194:6;25153:68;:::i;25232:960::-;25522:25;;;25509:3;25494:19;;25569:20;;25598:31;25569:20;25598:31;:::i;:::-;25693:1;25689;25684:3;25680:11;25676:19;25669:5;25665:31;25660:2;25649:9;25645:18;25638:59;;25758:2;25750:6;25746:15;25733:29;25728:2;25717:9;25713:18;25706:57;25824:2;25816:6;25812:15;25799:29;25794:2;25783:9;25779:18;25772:57;25891:2;25883:6;25879:15;25866:29;25860:3;25849:9;25845:19;25838:58;25958:3;25950:6;25946:16;25933:30;25927:3;25916:9;25912:19;25905:59;26026:3;26018:6;26014:16;26001:30;25995:3;25984:9;25980:19;25973:59;26081:3;26073:6;26069:16;26056:30;26095;26117:7;26095:30;:::i;:::-;26176:7;26169:15;26162:23;26156:3;26145:9;26141:19;26134:52;;25232:960;;;;;:::o;26197:184::-;26267:6;26320:2;26308:9;26299:7;26295:23;26291:32;26288:52;;;26336:1;26333;26326:12;26288:52;-1:-1:-1;26359:16:245;;26197:184;-1:-1:-1;26197:184:245:o;26984:276::-;27070:6;27123:2;27111:9;27102:7;27098:23;27094:32;27091:52;;;27139:1;27136;27129:12;27091:52;27171:9;27165:16;27210:1;27203:5;27200:12;27190:40;;27226:1;27223;27216:12;27265:127;27326:10;27321:3;27317:20;27314:1;27307:31;27357:4;27354:1;27347:15;27381:4;27378:1;27371:15;27397:128;27464:9;;;27485:11;;;27482:37;;;27499:18;;:::i;27530:217::-;27570:1;27596;27586:132;;27640:10;27635:3;27631:20;27628:1;27621:31;27675:4;27672:1;27665:15;27703:4;27700:1;27693:15;27586:132;-1:-1:-1;27732:9:245;;27530:217::o;27967:669::-;28081:6;28134:3;28122:9;28113:7;28109:23;28105:33;28102:53;;;28151:1;28148;28141:12;28102:53;28177:22;;:::i;:::-;28228:9;28222:16;28215:5;28208:31;28292:2;28281:9;28277:18;28271:25;28266:2;28259:5;28255:14;28248:49;28350:2;28339:9;28335:18;28329:25;28324:2;28317:5;28313:14;28306:49;28408:2;28397:9;28393:18;28387:25;28382:2;28375:5;28371:14;28364:49;28467:3;28456:9;28452:19;28446:26;28440:3;28433:5;28429:15;28422:51;28518:3;28507:9;28503:19;28497:26;28532:33;28557:7;28532:33;:::i;:::-;28592:3;28581:15;;28574:32;28585:5;27967:669;-1:-1:-1;;;27967:669:245:o;29030:520::-;29100:5;29107:6;29167:3;29154:17;29253:2;29249:7;29238:8;29222:14;29218:29;29214:43;29194:18;29190:68;29180:96;;29272:1;29269;29262:12;29180:96;29300:33;;29404:4;29391:18;;;-1:-1:-1;29352:21:245;;-1:-1:-1;;;;;;29421:30:245;;29418:50;;;29464:1;29461;29454:12;29418:50;29518:6;29515:1;29511:14;29495;29491:35;29484:5;29480:47;29477:67;;;29540:1;29537;29530:12;29555:311;29643:19;;;29625:3;-1:-1:-1;;;;;29674:31:245;;29671:51;;;29718:1;29715;29708:12;29671:51;29754:6;29751:1;29747:14;29806:8;29799:5;29792:4;29787:3;29783:14;29770:45;29835:18;;;;29855:4;29831:29;;29555:311;-1:-1:-1;;;29555:311:245:o;29871:946::-;30153:6;30142:9;30135:25;30196:2;30191;30180:9;30176:18;30169:30;30248:6;30235:20;30230:2;30219:9;30215:18;30208:48;30116:4;30303:2;30295:6;30291:15;30278:29;30316:28;30338:5;30316:28;:::i;:::-;30387:13;30380:21;30375:2;30360:18;;30353:49;30451:2;30439:15;;30426:29;30464:30;30426:29;30464:30;:::i;:::-;30539:15;30532:23;30525:4;30510:20;;30503:53;30599:67;30662:2;30650:15;;30654:6;30599:67;:::i;:::-;30703:4;30697:3;30686:9;30682:19;30675:33;30725:86;30806:3;30795:9;30791:19;30777:12;30763;30725:86;:::i;31311:391::-;31595:25;;;31582:3;31567:19;;31629:67;31692:2;31677:18;;31669:6;30913:12;;-1:-1:-1;;;;;30909:38:245;30897:51;;30997:4;30986:16;;;30980:23;30964:14;;;30957:47;31053:4;31042:16;;;31036:23;31020:14;;;31013:47;31109:4;31098:16;;;31092:23;31076:14;;;31069:47;31165:4;31154:16;;;31148:23;31132:14;;;31125:47;30935:3;31210:16;;;31204:23;31188:14;;;31181:47;31291:4;31280:16;;;31274:23;31267:31;31260:39;31244:14;;31237:63;30822:484;31707:737;31779:5;31827:4;31815:9;31810:3;31806:19;31802:30;31799:50;;;31845:1;31842;31835:12;31799:50;31878:2;31872:9;31920:4;31912:6;31908:17;31991:6;31979:10;31976:22;-1:-1:-1;;;;;31943:10:245;31940:34;31937:62;31934:88;;;32002:18;;:::i;:::-;32042:10;32038:2;32031:22;;32071:6;32062:15;;32107:9;32101:16;32126:33;32151:7;32126:33;:::i;:::-;32168:23;;32236:2;32221:18;;32215:25;32249:30;32215:25;32249:30;:::i;:::-;32312:7;32307:2;32299:6;32295:15;32288:32;;32374:2;32363:9;32359:18;32353:25;32348:2;32340:6;32336:15;32329:50;32433:2;32422:9;32418:18;32412:25;32407:2;32399:6;32395:15;32388:50;;31707:737;;;;:::o;32449:784::-;32561:6;32614:3;32602:9;32593:7;32589:23;32585:33;32582:53;;;32631:1;32628;32621:12;32582:53;32657:22;;:::i;:::-;32702:63;32757:7;32746:9;32702:63;:::i;:::-;32695:5;32688:78;32811:3;32800:9;32796:19;32790:26;32825:33;32850:7;32825:33;:::i;:::-;32892:7;32885:4;32878:5;32874:16;32867:33;;32955:3;32944:9;32940:19;32934:26;32927:4;32920:5;32916:16;32909:52;33016:3;33005:9;33001:19;32995:26;32988:4;32981:5;32977:16;32970:52;33076:4;33065:9;33061:20;33055:27;33049:3;33042:5;33038:15;33031:52;33137:3;33126:9;33122:19;33116:26;33110:3;33103:5;33099:15;33092:51;33197:3;33186:9;33182:19;33176:26;33170:3;33163:5;33159:15;33152:51;33222:5;33212:15;;;32449:784;;;;:::o;33238:1459::-;33353:5;33340:19;33335:3;33328:32;33310:3;33379:4;33442:2;33435:5;33431:14;33418:28;33525:2;33521:7;33513:5;33497:14;33493:26;33489:40;33469:18;33465:65;33455:93;;33544:1;33541;33534:12;33455:93;33632:4;33618:12;;;33611:26;33572:30;;33680:60;33572:30;;33680:60;:::i;:::-;33772:4;33765;33760:3;33756:14;33749:28;33798:80;33873:3;33868;33864:13;33850:12;33836;33798:80;:::i;:::-;33786:92;;;33925:69;33990:2;33981:7;33977:16;33968:7;33925:69;:::i;:::-;-1:-1:-1;;34056:14:245;;;34052:23;;34045:4;34036:14;;34029:47;34111:28;;;34193:14;;34225:1;;34013:7;34157:13;;34235:190;34249:14;34246:1;34243:21;34235:190;;;34320:20;;34306:35;;34400:15;;;;34279:1;34272:9;;;;;34363:14;;34235:190;;;34472:71;34537:4;34528:7;34524:18;34515:7;34472:71;:::i;:::-;34434:109;;;;34595:2;34589:3;34582:5;34578:15;34574:24;34568:3;34563;34559:13;34552:47;34615:76;34685:5;34669:14;34653;34615:76;:::i;:::-;34608:83;33238:1459;-1:-1:-1;;;;;;;;;;33238:1459:245:o;34702:414::-;34972:6;34961:9;34954:25;35015:2;35010;34999:9;34995:18;34988:30;34935:4;35035:75;35106:2;35095:9;35091:18;35083:6;35035:75;:::i;35519:652::-;35632:6;35685:3;35673:9;35664:7;35660:23;35656:33;35653:53;;;35702:1;35699;35692:12;35653:53;35728:22;;:::i;:::-;35773:63;35828:7;35817:9;35773:63;:::i;:::-;35766:5;35759:78;35892:3;35881:9;35877:19;35871:26;35864:4;35857:5;35853:16;35846:52;35953:3;35942:9;35938:19;35932:26;35925:4;35918:5;35914:16;35907:52;36014:4;36003:9;35999:20;35993:27;35986:4;35979:5;35975:16;35968:53;36075:3;36064:9;36060:19;36054:26;36048:3;36041:5;36037:15;36030:51;36135:3;36124:9;36120:19;36114:26;36108:3;36101:5;36097:15;36090:51;36160:5;36150:15;;;35519:652;;;;:::o;36176:482::-;36294:5;36281:19;36276:3;36269:32;36349:4;36342:5;36338:16;36325:30;36364:33;36389:7;36364:33;:::i;:::-;-1:-1:-1;;;;;36429:33:245;36422:4;36413:14;;36406:57;36519:4;36508:16;;;36495:30;36479:14;;;36472:54;36582:4;36571:16;;;36558:30;36542:14;;;36535:54;36645:4;36634:16;;;36621:30;36605:14;;36598:54;36176:482::o;36663:433::-;36971:25;;;36958:3;36943:19;;37005:85;37086:2;37071:18;;37063:6;37005:85;:::i;37101:306::-;37189:6;37197;37205;37258:2;37246:9;37237:7;37233:23;37229:32;37226:52;;;37274:1;37271;37264:12;37226:52;37303:9;37297:16;37287:26;;37353:2;37342:9;37338:18;37332:25;37322:35;;37397:2;37386:9;37382:18;37376:25;37366:35;;37101:306;;;;;:::o;37412:505::-;37748:25;;;37735:3;37720:19;;37782:85;37863:2;37848:18;;37840:6;37782:85;:::i;:::-;37904:6;37898:3;37887:9;37883:19;37876:35;37412:505;;;;;;:::o;38467:368::-;38737:25;;;38724:3;38709:19;;38771:58;38825:2;38810:18;;38802:6;21305:12;;-1:-1:-1;;;;;21301:38:245;21289:51;;21389:4;21378:16;;;21372:23;21356:14;;;21349:47;21445:4;21434:16;;;21428:23;21412:14;;;21405:47;21501:4;21490:16;;;21484:23;21468:14;;21461:47;21223:291;39048:540;39161:5;39148:19;39143:3;39136:32;39224:4;39217:5;39213:16;39200:30;39193:4;39188:3;39184:14;39177:54;39287:4;39280:5;39276:16;39263:30;39256:4;39251:3;39247:14;39240:54;39350:4;39343:5;39339:16;39326:30;39319:4;39314:3;39310:14;39303:54;39413:4;39406:5;39402:16;39389:30;39382:4;39377:3;39373:14;39366:54;39468:4;39461:5;39457:16;39444:30;39483:33;39508:7;39483:33;:::i;:::-;-1:-1:-1;;;;;39548:33:245;39569:3;39532:14;;;;39525:57;;;;-1:-1:-1;39048:540:245:o;40040:129::-;-1:-1:-1;;;;;40118:5:245;40114:30;40107:5;40104:41;40094:69;;40159:1;40156;40149:12;40174:382;40287:5;40274:19;40302:33;40327:7;40302:33;:::i;:::-;-1:-1:-1;;;;;40356:33:245;40344:46;;40438:4;40427:16;;40414:30;40453:32;40414:30;40453:32;:::i;:::-;-1:-1:-1;;;;;40521:7:245;40517:32;40510:4;40505:3;40501:14;40494:56;;40174:382;;:::o;40561:821::-;40672:5;40659:19;40687:33;40712:7;40687:33;:::i;:::-;-1:-1:-1;;;;;40779:16:245;;;40767:29;;40844:4;40833:16;;40820:30;;40859:33;40820:30;40859:33;:::i;:::-;40924:16;;;40917:4;40908:14;;40901:40;40989:4;40978:16;;40965:30;;41004:33;40965:30;41004:33;:::i;:::-;41069:16;;;41062:4;41053:14;;41046:40;41134:4;41123:16;;41110:30;;41149:33;41110:30;41149:33;:::i;:::-;41214:16;;;41207:4;41198:14;;41191:40;41279:4;41268:16;;41255:30;;41294:33;41255:30;41294:33;:::i;:::-;41372:2;41363:7;41359:16;41352:4;41347:3;41343:14;41336:40;;;40561:821;;:::o;41387:1118::-;42053:25;;;-1:-1:-1;;;;;42114:32:245;;42109:2;42094:18;;42087:60;42040:3;42025:19;;42156:80;42232:2;42217:18;;42209:6;42156:80;:::i;:::-;39694:19;;42322:3;42307:19;;39682:32;39770:4;39759:16;;39746:30;39730:14;;;39723:54;39833:4;39822:16;;39809:30;39793:14;;;39786:54;39896:4;39885:16;;39872:30;39856:14;;;39849:54;39959:4;39948:16;;39935:30;39919:14;;;39912:54;40022:4;40011:16;;39998:30;39982:14;;;39975:54;42336:78;42409:3;42398:9;42394:19;42386:6;42336:78;:::i;:::-;42423:76;42494:3;42483:9;42479:19;42471:6;42423:76;:::i;:::-;41387:1118;;;;;;;;;:::o;42510:1021::-;43148:25;;;43135:3;43120:19;;43182:80;43258:2;43243:18;;43235:6;43182:80;:::i;:::-;39694:19;;43348:3;43333:19;;39682:32;39770:4;39759:16;;39746:30;39730:14;;;39723:54;39833:4;39822:16;;39809:30;39793:14;;;39786:54;39896:4;39885:16;;39872:30;39856:14;;;39849:54;39959:4;39948:16;;39935:30;39919:14;;;39912:54;40022:4;40011:16;;39998:30;39982:14;;;39975:54;43362:78;43435:3;43424:9;43420:19;43412:6;43362:78;:::i;:::-;43449:76;43520:3;43509:9;43505:19;43497:6;43449:76;:::i;43973:597::-;44088:6;44141:3;44129:9;44120:7;44116:23;44112:33;44109:53;;;44158:1;44155;44148:12;44109:53;44184:22;;:::i;:::-;44235:9;44229:16;44222:5;44215:31;44299:2;44288:9;44284:18;44278:25;44273:2;44266:5;44262:14;44255:49;44357:2;44346:9;44342:18;44336:25;44331:2;44324:5;44320:14;44313:49;44415:2;44404:9;44400:18;44394:25;44389:2;44382:5;44378:14;44371:49;44474:3;44463:9;44459:19;44453:26;44447:3;44440:5;44436:15;44429:51;44534:3;44523:9;44519:19;44513:26;44507:3;44500:5;44496:15;44489:51;44559:5;44549:15;;;43973:597;;;;:::o;44575:656::-;44686:6;44739:2;44727:9;44718:7;44714:23;44710:32;44707:52;;;44755:1;44752;44745:12;44707:52;44788:2;44782:9;44830:2;44822:6;44818:15;44899:6;44887:10;44884:22;-1:-1:-1;;;;;44851:10:245;44848:34;44845:62;44842:88;;;44910:18;;:::i;:::-;44946:2;44939:22;44983:16;;45008:31;44983:16;45008:31;:::i;:::-;45048:21;;45114:2;45099:18;;45093:25;45127:32;45093:25;45127:32;:::i;:::-;45187:2;45175:15;;45168:32;45179:6;44575:656;-1:-1:-1;;;44575:656:245:o;45236:516::-;45451:4;45493:2;45482:9;45478:18;45470:26;;45523:6;45512:9;45505:25;45579:6;45566:20;45561:2;45550:9;45546:18;45539:48;45634:2;45626:6;45622:15;45609:29;45647:31;45672:5;45647:31;:::i;:::-;-1:-1:-1;;;;;45714:31:245;45709:2;45694:18;;;;45687:59;;;;45236:516;;-1:-1:-1;;45236:516:245:o;45757:245::-;45824:6;45877:2;45865:9;45856:7;45852:23;45848:32;45845:52;;;45893:1;45890;45883:12;45845:52;45925:9;45919:16;45944:28;45966:5;45944:28;:::i;46255:391::-;46535:25;;;46522:3;46507:19;;46569:71;46636:2;46621:18;;46613:6;46098:19;;46086:32;;46174:4;46163:16;;;46150:30;46134:14;;;46127:54;46237:4;46226:16;;;46213:30;46197:14;;46190:54;46007:243;48147:461;48453:25;;;48440:3;48425:19;;48487:71;48554:2;48539:18;;48531:6;46098:19;;46086:32;;46174:4;46163:16;;;46150:30;46134:14;;;46127:54;46237:4;46226:16;;;46213:30;46197:14;;46190:54;46007:243;48487:71;48595:6;48589:3;48578:9;48574:19;48567:35;48147:461;;;;;;:::o;48985:648::-;49275:25;;;49262:3;49247:19;;49322:20;;49351:31;49322:20;49351:31;:::i;:::-;-1:-1:-1;;;;;49418:31:245;49413:2;49398:18;;;49391:59;;;;49459:78;;49533:2;49518:18;;;49501:15;;48715:5;48702:19;48697:3;48690:32;48778:4;48771:5;48767:16;48754:30;48747:4;48742:3;48738:14;48731:54;48841:4;48834:5;48830:16;48817:30;48810:4;48805:3;48801:14;48794:54;48904:4;48897:5;48893:16;48880:30;48873:4;48868:3;48864:14;48857:54;48967:4;48960:5;48956:16;48943:30;48936:4;48931:3;48927:14;48920:54;;;48613:367;49459:78;49546:81;49622:3;49611:9;49607:19;49600:4;49592:6;49588:17;48715:5;48702:19;48697:3;48690:32;48778:4;48771:5;48767:16;48754:30;48747:4;48742:3;48738:14;48731:54;48841:4;48834:5;48830:16;48817:30;48810:4;48805:3;48801:14;48794:54;48904:4;48897:5;48893:16;48880:30;48873:4;48868:3;48864:14;48857:54;48967:4;48960:5;48956:16;48943:30;48936:4;48931:3;48927:14;48920:54;;;48613:367;50378:416;50467:1;50504:5;50467:1;50518:270;50539:7;50529:8;50526:21;50518:270;;;50598:4;50594:1;50590:6;50586:17;50580:4;50577:27;50574:53;;;50607:18;;:::i;:::-;50657:7;50647:8;50643:22;50640:55;;;50677:16;;;;50640:55;50756:22;;;;50716:15;;;;50518:270;;50799:806;50848:5;50878:8;50868:80;;-1:-1:-1;50919:1:245;50933:5;;50868:80;50967:4;50957:76;;-1:-1:-1;51004:1:245;51018:5;;50957:76;51049:4;51067:1;51062:59;;;;51135:1;51130:130;;;;51042:218;;51062:59;51092:1;51083:10;;51106:5;;;51130:130;51167:3;51157:8;51154:17;51151:43;;;51174:18;;:::i;:::-;-1:-1:-1;;51230:1:245;51216:16;;51245:5;;51042:218;;51344:2;51334:8;51331:16;51325:3;51319:4;51316:13;51312:36;51306:2;51296:8;51293:16;51288:2;51282:4;51279:12;51275:35;51272:77;51269:159;;;-1:-1:-1;51381:19:245;;;51413:5;;51269:159;51460:34;51485:8;51479:4;51460:34;:::i;:::-;51530:6;51526:1;51522:6;51518:19;51509:7;51506:32;51503:58;;;51541:18;;:::i;:::-;51579:20;;50799:806;-1:-1:-1;;;50799:806:245:o;51610:131::-;51670:5;51699:36;51726:8;51720:4;51699:36;:::i;51746:168::-;51819:9;;;51850;;51867:15;;;51861:22;;51847:37;51837:71;;51888:18;;:::i;51919:273::-;51987:6;52040:2;52028:9;52019:7;52015:23;52011:32;52008:52;;;52056:1;52053;52046:12;52008:52;52088:9;52082:16;52138:4;52131:5;52127:16;52120:5;52117:27;52107:55;;52158:1;52155;52148:12;52197:140;52255:5;52284:47;52325:4;52315:8;52311:19;52305:4;52284:47;:::i;53477:1386::-;53822:3;53811:9;53804:22;53785:4;53861:6;53855:13;53905:4;53899:3;53888:9;53884:19;53877:33;53933:63;53991:3;53980:9;53976:19;53962:12;53933:63;:::i;:::-;54015:4;54056:15;;;54050:22;-1:-1:-1;;54140:22:245;;;54136:31;;54130:3;54115:19;;54108:60;54217:21;;54247:22;;;54323:23;;;;-1:-1:-1;54015:4:245;;54364:1;;54091:8;54285:15;;;;54374:169;54388:6;54385:1;54382:13;54374:169;;;54449:13;;54437:26;;54518:15;;;;54410:1;54403:9;;;;;54483:12;;;;54374:169;;;54378:3;54592:4;54584:6;54580:17;54574:24;54552:46;;54660:2;54648:9;54643:3;54639:19;54635:28;54629:3;54618:9;54614:19;54607:57;54681:49;54726:3;54710:14;54681:49;:::i;:::-;54673:57;;;;;54739:74;54809:2;54798:9;54794:18;54786:6;53208:12;;-1:-1:-1;;;;;53204:53:245;53192:66;;53304:4;53293:16;;;53287:23;-1:-1:-1;;;;;53379:21:245;;;53363:14;;;53356:45;;;;53454:4;53443:16;;;53437:23;53433:32;53417:14;;53410:56;53110:362;54739:74;;;54850:6;54844:3;54833:9;54829:19;54822:35;53477:1386;;;;;;:::o;55057:127::-;55118:10;55113:3;55109:20;55106:1;55099:31;55149:4;55146:1;55139:15;55173:4;55170:1;55163:15;55189:521;55266:4;55272:6;55332:11;55319:25;55426:2;55422:7;55411:8;55395:14;55391:29;55387:43;55367:18;55363:68;55353:96;;55445:1;55442;55435:12;55353:96;55472:33;;55524:20;;;-1:-1:-1;;;;;;55556:30:245;;55553:50;;;55599:1;55596;55589:12;55553:50;55632:4;55620:17;;-1:-1:-1;55663:14:245;55659:27;;;55649:38;;55646:58;;;55700:1;55697;55690:12;56495:287;56624:3;56662:6;56656:13;56678:66;56737:6;56732:3;56725:4;56717:6;56713:17;56678:66;:::i;:::-;56760:16;;;;;56495:287;-1:-1:-1;;56495:287:245:o",
    "linkReferences": {
      "src/libraries/CapsLibrary.sol": {
        "CapsLibrary": [
          { "start": 3770, "length": 20 },
          { "start": 5640, "length": 20 },
          { "start": 14238, "length": 20 }
        ]
      },
      "src/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 3835, "length": 20 },
          { "start": 6025, "length": 20 },
          { "start": 6186, "length": 20 },
          { "start": 8026, "length": 20 },
          { "start": 9676, "length": 20 }
        ]
      },
      "src/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 3613, "length": 20 },
          { "start": 5381, "length": 20 },
          { "start": 8735, "length": 20 },
          { "start": 9061, "length": 20 },
          { "start": 9202, "length": 20 },
          { "start": 9869, "length": 20 },
          { "start": 10438, "length": 20 },
          { "start": 10844, "length": 20 },
          { "start": 11313, "length": 20 }
        ]
      },
      "src/libraries/YieldCurveLibrary.sol": {
        "YieldCurveLibrary": [{ "start": 12384, "length": 20 }]
      },
      "src/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 4825, "length": 20 },
          { "start": 4924, "length": 20 }
        ]
      },
      "src/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 3389, "length": 20 },
          { "start": 3491, "length": 20 },
          { "start": 4606, "length": 20 }
        ]
      },
      "src/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 11139, "length": 20 },
          { "start": 11238, "length": 20 }
        ]
      },
      "src/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 8845, "length": 20 },
          { "start": 8944, "length": 20 }
        ]
      },
      "src/libraries/actions/CopyLimitOrders.sol": {
        "CopyLimitOrders": [
          { "start": 10960, "length": 20 },
          { "start": 11059, "length": 20 }
        ]
      },
      "src/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 3165, "length": 20 },
          { "start": 3264, "length": 20 }
        ]
      },
      "src/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 7529, "length": 20 },
          { "start": 7662, "length": 20 }
        ]
      },
      "src/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 10496, "length": 20 },
          { "start": 10595, "length": 20 },
          { "start": 10720, "length": 20 }
        ]
      },
      "src/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 5164, "length": 20 },
          { "start": 5266, "length": 20 },
          { "start": 5524, "length": 20 }
        ]
      },
      "src/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 8505, "length": 20 },
          { "start": 8603, "length": 20 }
        ]
      },
      "src/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 11395, "length": 20 },
          { "start": 11494, "length": 20 }
        ]
      },
      "src/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 9995, "length": 20 },
          { "start": 10094, "length": 20 }
        ]
      },
      "src/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 4991, "length": 20 },
          { "start": 10189, "length": 20 },
          { "start": 10291, "length": 20 }
        ]
      },
      "src/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 4440, "length": 20 },
          { "start": 4539, "length": 20 }
        ]
      },
      "src/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 2951, "length": 20 },
          { "start": 3050, "length": 20 },
          { "start": 4059, "length": 20 },
          { "start": 8260, "length": 20 },
          { "start": 8392, "length": 20 }
        ]
      },
      "src/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 4211, "length": 20 },
          { "start": 4310, "length": 20 }
        ]
      }
    },
    "immutableReferences": {
      "48878": [
        { "start": 12947, "length": 32 },
        { "start": 12988, "length": 32 },
        { "start": 13309, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": "3746f858",
    "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "19a7359b",
    "claim((uint256))": "f45bf01c",
    "collateralRatio(address)": "ca40742c",
    "compensate((uint256,uint256,uint256))": "8e572776",
    "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": "f052e7a4",
    "data()": "73d4a13a",
    "debtTokenAmountToCollateralTokenAmount(uint256)": "1970e5ea",
    "deposit((address,uint256,address))": "0cf8542f",
    "feeConfig()": "1e5eb1d0",
    "getBorrowOfferAPR(address,uint256)": "f85c3cd4",
    "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "2ed28ba2",
    "getCreditPosition(uint256)": "76c1b82f",
    "getDebtPosition(uint256)": "b5ec7487",
    "getDebtPositionAssignedCollateral(uint256)": "54137c7e",
    "getLoanOfferAPR(address,uint256)": "2cc884c5",
    "getLoanStatus(uint256)": "1c4fd41c",
    "getPositionsCount()": "1ca3b0cb",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "37501921",
    "getSwapFee(uint256,uint256)": "2c60185c",
    "getUserCopyLimitOrders(address)": "b36116f6",
    "getUserView(address)": "5cbc51eb",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,(uint256,uint256,uint256,uint256,uint256,address),(uint256,uint256,uint256,uint256,uint256,uint256),(address,uint64),(address,address,address,address,address))": "61a10df2",
    "isCreditPositionId(uint256)": "ccc96815",
    "isDebtPositionId(uint256)": "64eb0a71",
    "isDebtPositionLiquidatable(uint256)": "e5af06ce",
    "isUserUnderwater(address)": "f731a57a",
    "liquidate((uint256,uint256,uint256))": "e05001f5",
    "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": "3e3c119b",
    "multicall(bytes[])": "ac9650d8",
    "oracle()": "7dc0d1d0",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proxiableUUID()": "52d1902d",
    "renounceRole(bytes32,address)": "36568abe",
    "repay((uint256,address))": "7f417c06",
    "revokeRole(bytes32,address)": "d547741f",
    "riskConfig()": "7c90a6ca",
    "selfLiquidate((uint256))": "fd17174a",
    "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": "ccd8d4d1",
    "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "d8d933a5",
    "setUserConfiguration((uint256,bool,bool,uint256[]))": "2e106f21",
    "setVariablePoolBorrowRate(uint128)": "4cbd882c",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpause()": "3f4ba83a",
    "updateConfig((string,uint256))": "0317b9df",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "version()": "54fd4d50",
    "withdraw((address,uint256,address))": "2b4c9a20"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_OFFER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_TENOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"name\":\"TENOR_OUT_OF_RANGE\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cr\",\"type\":\"uint256\"}],\"name\":\"USER_IS_UNDERWATER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldBorrowRate\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newBorrowRate\",\"type\":\"uint128\"}],\"name\":\"VariablePoolBorrowRateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"compensate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct CopyLimitOrdersParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"copyLimitOrders\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nextDebtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextCreditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableScaledTokenV1_5\",\"name\":\"borrowAToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"debtToken\",\"type\":\"address\"},{\"internalType\":\"contract IPool\",\"name\":\"variablePool\",\"type\":\"address\"}],\"internalType\":\"struct DataView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowATokenAmount\",\"type\":\"uint256\"}],\"name\":\"debtTokenAmountToCollateralTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getBorrowOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getBuyCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCreditMarket.SwapDataBuyCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"getCreditPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"futureValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndexAtRepayment\",\"type\":\"uint256\"}],\"internalType\":\"struct DebtPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPositionAssignedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getLoanOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"getLoanStatus\",\"outputs\":[{\"internalType\":\"enum LoanStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPositionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getSellCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct SellCreditMarket.SwapDataSellCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getSwapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCopyLimitOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct UserCopyLimitOrders\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserView\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"loanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"borrowOffer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"}],\"internalType\":\"struct User\",\"name\":\"user\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct UserView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"f\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowAToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"r\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variablePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowATokenV1_5\",\"type\":\"address\"}],\"internalType\":\"struct InitializeDataParams\",\"name\":\"d\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"isCreditPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionLiquidatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserUnderwater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateWithReplacementParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidateWithReplacement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitBorrowToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct RepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowAToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"selfLiquidate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setUserConfiguration\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"}],\"name\":\"setVariablePoolBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct UpdateConfigParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Size (https://size.credit/)\",\"custom:security-contact\":\"security@size.credit\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - uint256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - int256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)\"}},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"}},\"claim((uint256))\":{\"details\":\"Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before\",\"params\":{\"params\":\"ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim\"}},\"collateralRatio(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The collateral ratio of the user\"}},\"compensate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"details\":\"Does not erase the user's loan offer and borrow offer\",\"params\":{\"params\":\"CopyLimitOrdersParams struct containing the following fields:     - address copyAddress: The address of the user to copy from     - CopyLimitOrder copyLoanOffer: The loan offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)     - CopyLimitOrder copyBorrowOffer: The borrow offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied offer (currently unused)\"}},\"data()\":{\"returns\":{\"_0\":\"The data view\"}},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"params\":{\"borrowATokenAmount\":\"The amount of borrow A tokens\"},\"returns\":{\"_0\":\"The equivalent amount of collateral tokens\"}},\"deposit((address,uint256,address))\":{\"details\":\"The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens\",\"params\":{\"params\":\"DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit\"}},\"feeConfig()\":{\"returns\":{\"_0\":\"The fee configuration parameters\"}},\"getBorrowOfferAPR(address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the borrow offer\"}},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for buying credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for buying credit as a market order\"}},\"getCreditPosition(uint256)\":{\"params\":{\"creditPositionId\":\"The ID of the credit position\"},\"returns\":{\"_0\":\"The CreditPosition struct containing the details of the credit position\"}},\"getDebtPosition(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The DebtPosition struct containing the details of the debt position\"}},\"getDebtPositionAssignedCollateral(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The assigned collateral amount\"}},\"getLoanOfferAPR(address,uint256)\":{\"params\":{\"lender\":\"The address of the lender\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the loan offer\"}},\"getLoanStatus(uint256)\":{\"params\":{\"positionId\":\"The ID of the position\"},\"returns\":{\"_0\":\"The loan status\"}},\"getPositionsCount()\":{\"returns\":{\"_0\":\"The count of debt positions and credit positions\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for selling credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for selling credit as a market order\"}},\"getSwapFee(uint256,uint256)\":{\"params\":{\"cash\":\"The cash amount\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The swap fee\"}},\"getUserCopyLimitOrders(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user copy limit orders\"}},\"getUserView(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user view\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isCreditPositionId(uint256)\":{\"params\":{\"creditPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a credit position ID, false otherwise\"}},\"isDebtPositionId(uint256)\":{\"params\":{\"debtPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a debt position ID, false otherwise\"}},\"isDebtPositionLiquidatable(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"True if the debt position is liquidatable, false otherwise\"}},\"isUserUnderwater(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"True if the user is underwater, false otherwise\"}},\"liquidate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)\"},\"returns\":{\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens the the fee recipient received from the liquidation\"}},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"details\":\"This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned\",\"params\":{\"params\":\"LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"},\"returns\":{\"liquidatorProfitBorrowToken\":\"The amount of borrow tokens liquidator received from the liquidation\",\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens liquidator received from the liquidation\"}},\"multicall(bytes[])\":{\"details\":\"This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.\",\"params\":{\"data\":\"An array of bytes encoded function calls to be executed in sequence.\"},\"returns\":{\"results\":\"An array of bytes representing the return data from each function call executed.\"}},\"oracle()\":{\"returns\":{\"_0\":\"The oracle parameters\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"repay((uint256,address))\":{\"details\":\"The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim\",\"params\":{\"params\":\"RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"riskConfig()\":{\"returns\":{\"_0\":\"The risk configuration parameters\"}},\"selfLiquidate((uint256))\":{\"details\":\"The user is prevented to self liquidate if a regular liquidation would be profitable\",\"params\":{\"params\":\"SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate\"}},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - uint256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - int256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)\"}},\"sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)\"}},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"details\":\"By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.\",\"params\":{\"params\":\"SetUserConfigurationParams struct containing the following fields:     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions\"}},\"setVariablePoolBorrowRate(uint128)\":{\"details\":\"The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero\",\"params\":{\"borrowRate\":\"The new borrow rate\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateConfig((string,uint256))\":{\"details\":\"For `address` parameters, the `value` is converted to `uint160` and then to `address`\",\"params\":{\"params\":\"UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"version()\":{\"returns\":{\"_0\":\"The version of the Size protocol\"}},\"withdraw((address,uint256,address))\":{\"details\":\"This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens\",\"params\":{\"params\":\"WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal\"}}},\"title\":\"Size\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new loan offer in the orderbook\"},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Obtains credit via lending or buying existing credit\"},\"claim((uint256))\":{\"notice\":\"Claim the repayment of a loan with accrued interest from the Variable Pool\"},\"collateralRatio(address)\":{\"notice\":\"Get the collateral ratio of a user\"},\"copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"notice\":\"Copy limit orders from a user\"},\"data()\":{\"notice\":\"Get the data view\"},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"notice\":\"Convert debt token amount to collateral token amount\"},\"deposit((address,uint256,address))\":{\"notice\":\"Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Variable Pool,         Collateral tokens are deposited into the Size contract through the DepositTokenLibrary\"},\"feeConfig()\":{\"notice\":\"Get the fee configuration parameters\"},\"getBorrowOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a borrow offer\"},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Gets the swap data for buying credit as a market order\"},\"getCreditPosition(uint256)\":{\"notice\":\"Get the details of a credit position\"},\"getDebtPosition(uint256)\":{\"notice\":\"Get the details of a debt position\"},\"getDebtPositionAssignedCollateral(uint256)\":{\"notice\":\"Get the assigned collateral for a debt position\"},\"getLoanOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a loan offer\"},\"getLoanStatus(uint256)\":{\"notice\":\"Get the loan status for a given position ID\"},\"getPositionsCount()\":{\"notice\":\"Get the count of debt and credit positions\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Returns the swap data for selling credit as a market order\"},\"getSwapFee(uint256,uint256)\":{\"notice\":\"Get the swap fee for a given cash and tenor\"},\"getUserCopyLimitOrders(address)\":{\"notice\":\"Get the user copy limit orders for a given user\"},\"getUserView(address)\":{\"notice\":\"Get the user view for a given user\"},\"isCreditPositionId(uint256)\":{\"notice\":\"Check if a given ID is a credit position ID\"},\"isDebtPositionId(uint256)\":{\"notice\":\"Check if a given ID is a debt position ID\"},\"isDebtPositionLiquidatable(uint256)\":{\"notice\":\"Check if a debt position is liquidatable\"},\"isUserUnderwater(address)\":{\"notice\":\"Check if a user is underwater\"},\"liquidate((uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower\"},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position with a replacement borrower\"},\"multicall(bytes[])\":{\"notice\":\"Executes multiple calls in a single transaction\"},\"oracle()\":{\"notice\":\"Get the oracle parameters\"},\"pause()\":{\"notice\":\"Pauses the protocol         Only callabe by the DEFAULT_ADMIN_ROLE\"},\"repay((uint256,address))\":{\"notice\":\"Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported\"},\"riskConfig()\":{\"notice\":\"Get the risk configuration parameters\"},\"selfLiquidate((uint256))\":{\"notice\":\"Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees\"},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new borrow offer in the orderbook\"},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"notice\":\"Set the credit positions for sale\"},\"setVariablePoolBorrowRate(uint128)\":{\"notice\":\"Sets the variable borrow rate         Only callabe by the BORROW_RATE_UPDATER_ROLE\"},\"unpause()\":{\"notice\":\"Unpauses the protocol         Only callabe by the DEFAULT_ADMIN_ROLE\"},\"updateConfig((string,uint256))\":{\"notice\":\"Updates the configuration of the protocol         Only callabe by the DEFAULT_ADMIN_ROLE\"},\"version()\":{\"notice\":\"Get the version of the Size protocol\"},\"withdraw((address,uint256,address))\":{\"notice\":\"Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Variable Pool         Collateral tokens are withdrawn from the Size contract through the DepositTokenLibrary\"}},\"notice\":\"See the documentation in {ISize}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Size.sol\":\"Size\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/aave-v3-core/contracts/\",\":@chainlink/=lib/chainlink/\",\":@chimera/=lib/chimera/src/\",\":@crytic/properties/=lib/properties/\",\":@deprecated/=deprecated/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@script/=script/\",\":@solady/=lib/solady/src/\",\":@src/=src/\",\":@test/=test/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ERC4626/=lib/properties/lib/ERC4626/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":chainlink/=lib/chainlink/contracts/\",\":chimera/=lib/chimera/src/\",\":ds-test/=lib/solady/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":properties/=lib/properties/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/properties/lib/solmate/src/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"deprecated/token/NonTransferrableScaledTokenV1_2.sol\":{\"keccak256\":\"0xc791dccf6ea101ba629088b97fd57a48c54fcaeb9949096add972abe44e063d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5e4db6706df0c604a63b257bc897cfdd8a001b62037d8f5e1b05d2d49966373\",\"dweb:/ipfs/QmYzRXDF3zpgVkDbQDvBWaHKeviSHs5FcEJQZGrLSzLZFS\"]},\"lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"lib/aave-v3-core/contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa\",\"dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf\"]},\"lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol\":{\"keccak256\":\"0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0\",\"dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7\"]},\"lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol\":{\"keccak256\":\"0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87\",\"dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3\"]},\"lib/aave-v3-core/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d\",\"dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM\"]},\"lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06\",\"dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx\"]},\"lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da\",\"dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260\",\"dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df\",\"dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E\"]},\"src/Size.sol\":{\"keccak256\":\"0x857f522198eb91bfb236e5a9b9a5bf9a9ea40879e0dc57e1d0ce5d3798aa6a56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://437bddac08abf4751f712dcc509c02bc2ee88d77822bc5dae5818d60af563542\",\"dweb:/ipfs/QmVAP3edCnaqzra2nJoHna2aMuGfYPUstL4tD9sq9z72Uc\"]},\"src/SizeStorage.sol\":{\"keccak256\":\"0xa17e5e72879c006e047249670ff1d26921308be558ac31ed440a0377331f0d64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2e0c44694c9fd07dba944531e21c763998fc59a9f04f4f849fd1d794a93488f\",\"dweb:/ipfs/QmNi8avpR2dripawHFT7Bfs8T6r7ZTJsD4fRaGHMBK5WeK\"]},\"src/SizeView.sol\":{\"keccak256\":\"0xf5fbbe499d5d7fa26b4ef414079d6768767262fdebea0190c44b6a9614482790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b172c0a29c04150532e5c732851d9668c97e3a3965b33fafe4703b485737b0c\",\"dweb:/ipfs/QmVhrXFs3bxyzW4wuQHpHrGZvaMxZGBU8mY5PvURB7CVXw\"]},\"src/SizeViewData.sol\":{\"keccak256\":\"0x7e28749b5028c2815426edcdc33bd6f6fb7c58895d3307b027c7e43f0b966bd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63909e9222758008ffa1dae6476620bb45c1501dc0d52703cb2316bb21dd128f\",\"dweb:/ipfs/QmaNdQhtRkvTzYWFLLdzVkHNAKjJLH2r28cyFjLWocNjtr\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989\",\"dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R\"]},\"src/interfaces/ISize.sol\":{\"keccak256\":\"0xcde11372b2d0ee70e2ed86f2e347e891c34e5ac20692c909cf9fa5de489f7041\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6077507b053745361167cabe32327407b5322eea62c60fb7362cda01804fa64e\",\"dweb:/ipfs/QmTpNZYKLbTeAcXnyFxyc4QX68Ug6zVJw2rJPNHhudmSKV\"]},\"src/interfaces/ISizeAdmin.sol\":{\"keccak256\":\"0xb79c3b936f0079dc0746fc0b9a927306b9593f4ae49dfba831835c8235d0bb68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01057da51130ef1be6a42e98901586a803ed4b9905fb2aafb7c8c7ffa3d867da\",\"dweb:/ipfs/QmWCadbQvyQTgzSHetZhkiirvr4Cb61QAw52rJtzAHJsKW\"]},\"src/interfaces/ISizeView.sol\":{\"keccak256\":\"0xdf4b0a7d4244056ebf5672ab3d3a661c4b0b0cda5e2234ff99ff9dbdd856ac7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab3393f44b9a3ba6a901eba35e0c571b9cb45569ef1edd4d2c1d409a843c3c2\",\"dweb:/ipfs/QmQ2F2fZa1H2wYi9LckMJPe6Awu2EW9acxXAjJiVVNcAdN\"]},\"src/interfaces/IWETH.sol\":{\"keccak256\":\"0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e\",\"dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t\"]},\"src/libraries/AccountingLibrary.sol\":{\"keccak256\":\"0x66384014dcb822fda7b621bd6f31f997f3eb6246706b8274dc069cc9d4a1255d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7dce6d359e85a15029579ea61ca53fd4f39302c2e70d17717cc7263618d9d2e\",\"dweb:/ipfs/QmNnrUM9CHToHhWDfmCrXh9B1AkUv195dtcFDbnircp2p7\"]},\"src/libraries/CapsLibrary.sol\":{\"keccak256\":\"0xa2a1c1a8d5d2c4797156b571202fcc031e50e60cf89041d81b571adba775f8af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0c0c335d7a5be6f317af50feca479fb4f0ec1931a5f1d53f86eaa800c6608a\",\"dweb:/ipfs/QmVWdfds1DczpSF6V6H6mD1QGUtvX7dVsfFKAcdCNWyYsk\"]},\"src/libraries/DepositTokenLibrary.sol\":{\"keccak256\":\"0x3827cb93fb6904f3bf8680220991962b2d7963c4c34da5cd3a90dc663a535abf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ea06308e762ab6fbcb9b36cd4e159d0c9c9a6f004ec82cf62a2b641cb8c33a5\",\"dweb:/ipfs/QmTyVDFRVjqcansmUA2TNtKxUWFATx9dw5bJkiKTECpSaG\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x9a25152472af88ceed4b27daa2b2a18d6a185276511c03b58e45e2a078d661cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38e99c32dbc05ddcfa8249a988e79ae939e6f31df94b37c608be4d5ecfd77316\",\"dweb:/ipfs/QmacU895DeCcA89FswQL6xkN2dXVDGJvzd7PmNRFjMtsAi\"]},\"src/libraries/Events.sol\":{\"keccak256\":\"0x0101016d4bb423e5a91eed3c81c3a79b8957e2f268126e13c860c8d4175638da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5516ed4aa20e268568d739e51144238139984b54fb10ebad857f87e0c74d979\",\"dweb:/ipfs/Qmd7tEif62JPyNxxakBkGbmLvAGhycLgSbAAhcfLbiZFkp\"]},\"src/libraries/LoanLibrary.sol\":{\"keccak256\":\"0x90beab702b0e409188b2ac6c7b13d3f5787b99ecfac63c58943ace7b8f48af18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ade5e1da3393808b03d49ef60285be7852f839c50098ea90fce31892b2af4a\",\"dweb:/ipfs/QmW2BrNXkdxX12Vizbkj8WKQVukzNKnNrj3CS5N28dCSTr\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0x445f0f8e7e74e16ce74d8563a083fa8c5a54142eb871f7e076f0569a5a940949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c34a2714a25dff091b872aa35056354c8a481112ff475204a31bc8db894eac3\",\"dweb:/ipfs/QmY5oew2GzqxaVA9f39hCr68V8tuhW5k4iB23kpXnPgx38\"]},\"src/libraries/Multicall.sol\":{\"keccak256\":\"0x131bebb184254dd1582caa922935e03a70cc9379794ecf0e7d3849c33b8e7509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6afec7cff97421a7682a3ab37725cc9d4161607caff250a34be76b318200f668\",\"dweb:/ipfs/QmQ8ZgKX3fnLPsYSpqVZpGuXu9qF4AxdkNSatUK5MDMP4z\"]},\"src/libraries/OfferLibrary.sol\":{\"keccak256\":\"0x5e72be5e82da4a9a401b7c87a25d5367e57228c2c6c90806b201e13bfdd01b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e75827644498b891dccb508f0ccbcc7fd7e784bbf27ba1ba1bab348d4680b03a\",\"dweb:/ipfs/QmSTLtt2mNw2WKTWpGUra35AoWvaw4Vtjo2kFuJoR3mBVb\"]},\"src/libraries/RiskLibrary.sol\":{\"keccak256\":\"0xd569b83082aa4b4d7de62cbd931211cded09aa1ae3431240311a47238c884a42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf3a18fd4a688f12d24a266c5a435dc6cf059457d2d76cb6ba7f10aeb610eec0\",\"dweb:/ipfs/QmRvYx7LLBgfCX6SsGrUzWM5PFS9JpAAr7wak5JN4pXVos\"]},\"src/libraries/YieldCurveLibrary.sol\":{\"keccak256\":\"0x7aad6c048e0d02ea1b0173e6ffeb626548a887a27019c785c98b98bd6835f7b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c615e561ff58811ff67c0c8acbd899208e52c4273afe848a932b58bcf5a6efd\",\"dweb:/ipfs/QmY4DnraC4wJqmzRxMd4aaCTBzzL4aGJXQkTr9JVyZwW7a\"]},\"src/libraries/actions/BuyCreditLimit.sol\":{\"keccak256\":\"0x0959ff2c4e63f0f99632ff444844ddd3ed9b8871f14070122d4233112b4a1e5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32cbcd20939318462262a77b8bb2309e2dbc348561d3def4dc4ade16027ff782\",\"dweb:/ipfs/QmdZQKrGgwebr7BiJ5PkmKV3ccLVji5wvr3ytV2kyNT1BK\"]},\"src/libraries/actions/BuyCreditMarket.sol\":{\"keccak256\":\"0x6a57c17c28167f1871626e8a748facf6f4fb3486a3cb488df71b71c61ac9370c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2ef51dc34398f2087e9146fc9281ecc619c508302f0a25ee3134986d134f781\",\"dweb:/ipfs/QmWuksE7CbxZ18cH1jGGgMKvbXYNk6wR8NQXQEKQtc9psG\"]},\"src/libraries/actions/Claim.sol\":{\"keccak256\":\"0xcada138ab05e33023e17c2b03f1b3f5bb1f00b78e8f0968dd6ddb704ff9761dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8497094fc7e7cfc1ee3c49775ae89dced5e85a9a8f3d37af2f628e2d3141f90a\",\"dweb:/ipfs/QmSLiPfgvQyRUmBXhVcpy33K8knCJyGRzssnUHzPqP1inC\"]},\"src/libraries/actions/Compensate.sol\":{\"keccak256\":\"0x3d15283e62c33868c83ab01e72f949535dfd1a01c43ced3653ad9dc39bd5eb04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f1682c301bb50b7eaf84f69df79c5304a2491c7292740fe202128c2b653fc9\",\"dweb:/ipfs/Qme73q2xvwTpNM3hXKfqDtJUReYxJaEoygx8qm7xLPfm7Z\"]},\"src/libraries/actions/CopyLimitOrders.sol\":{\"keccak256\":\"0x074df5bc44560b536cf5c06adce6105257a52a4c405fc531cc1e780b3edcdbf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f0d25bf070d3e2470fb32d2ad6753970098df59f56e131ec7200124e03c5bf\",\"dweb:/ipfs/QmZx7ULkkGE5YbRwGP2rbiYNX6KrvdxuuVuZpNPhp6GBh1\"]},\"src/libraries/actions/Deposit.sol\":{\"keccak256\":\"0xab2e2d6467d24f2cdc386ab58185c06c714903ea26b664bbd7253c4f066c3209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dc4f64cc85418ba5605b6bbb0b2b62486162e44d10c97c1678adf989beb3022\",\"dweb:/ipfs/QmXUAiRrvF7PcLhQrtAGtWAhu5DTw63kGe4fWBy3wJ6cmm\"]},\"src/libraries/actions/Initialize.sol\":{\"keccak256\":\"0x0c4091da683d92981d9396efc0f3d88599f8ac7ccb6e287f7010157eedffca6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df1fbd0c9e42a639a5c9bd53116fcf9ff4f82e962465214b1d79bc0239cfd504\",\"dweb:/ipfs/QmUDnDyzkccDYS3RjqVg232mremdanwUkH3UKV6izhC6hq\"]},\"src/libraries/actions/Liquidate.sol\":{\"keccak256\":\"0xea8015e96bec8bec5506334d956ed77491dc767333b04390ea960ba8f6fcfb12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fef65f4fb081eb136fda47fb8c789faf0bfc759495862360abf79d881b419f6\",\"dweb:/ipfs/QmTrEymdfHYvGxUHzGwxua9T6K3Q4GujfZq64QxMer4Jjz\"]},\"src/libraries/actions/LiquidateWithReplacement.sol\":{\"keccak256\":\"0x837eb1f42a63cc96cb6ab02da4fbee0fc3a4255b629b059ae0d891077f53baa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0ce025a37c323e4281dc4e28c6f51c9cfa753593153e597ed09a179c667a177\",\"dweb:/ipfs/QmQAprs2Z8ZVGoFpheZEca3JaaZBK7RWq54wUGxgtgiVgN\"]},\"src/libraries/actions/Repay.sol\":{\"keccak256\":\"0x52aa744b525982d8d892d2f394be3c7f82ae536fa8aaf9b9ae89f538bd9c78bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b05a321df177c0212d73c77502790e085907f261a2575ce64db5b9e256c24ab\",\"dweb:/ipfs/QmXguVUCLZ7u7YgUNEhmRDJe2cbNL77vwFQsnF6KGe2HMB\"]},\"src/libraries/actions/SelfLiquidate.sol\":{\"keccak256\":\"0x1eee7ee0b08fbc9c5de58d30c23477886f03ad3503f608879aa2e53db57a352c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f7aef27da5d0b04e29ab6a19d8a1399c5af2646ab3fa317b4aa2dee6e4b18d9\",\"dweb:/ipfs/QmNxMjX2ZABujDAgc17SLC4gmLx8QGfjEhVKXNr9tsiXb4\"]},\"src/libraries/actions/SellCreditLimit.sol\":{\"keccak256\":\"0x466fac886eac9c4fd872e457a4ae38fcd33ffe66a7e320d97bdb2bf07fcbce29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1105d100a848a1982786885683885c2e8475f3700e1de9dc9b5df70ed6e5defb\",\"dweb:/ipfs/QmbDBJFfbcuSFQ3CPmwacYr1LcQS3yndUsk1kLnNdnQhNS\"]},\"src/libraries/actions/SellCreditMarket.sol\":{\"keccak256\":\"0x6b48fd515f935f56a3774720414a80dc5292f6040eb620ce35abc4342015b7e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e76632165d1a6a167d5fd16ee1eabd310547a44075e0609c19161b174da05dca\",\"dweb:/ipfs/QmQ6vW1hCe8LAYafkgtfioCUVotgj3S2KXyXvgVc6jRCKk\"]},\"src/libraries/actions/SetUserConfiguration.sol\":{\"keccak256\":\"0x2dcd959ef9338d1e27c5905e07600b95ea0351d77603f5fe9b8292223138e671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de99454feaa5122030e16ccec433a2c59b06e4852c9c31109a273d6df9f8a31e\",\"dweb:/ipfs/QmfRxQs7fC3vy41swiH48FGU9jPTm47BeqQTxEmRyazTbc\"]},\"src/libraries/actions/UpdateConfig.sol\":{\"keccak256\":\"0xabec71215f2b58059caad21f322e6098b5b1613db35369cd74712d2763514f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1119b2e55537ff8c80f9337c6f97338b129f6da7939c60fc12bf11b8d6a5d0e4\",\"dweb:/ipfs/Qmdi7xy1hJQaQriRwbcTx3VxYCeYuLkuPdm7B9sNLMEpzu\"]},\"src/libraries/actions/Withdraw.sol\":{\"keccak256\":\"0xa199c5d3b21372df8cf74ad3a0244e66eeef9e8b4a12a796b2b5bfadccf10fa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8f69fc1cb77e87a61cf29573ef3a89a21b8af986ae3fe708293b0e6b2f18555\",\"dweb:/ipfs/QmevL6r4ytMoUTng6ogigwxMogARDbaE2ciqd3bh3oWNco\"]},\"src/oracle/IPriceFeed.sol\":{\"keccak256\":\"0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48\",\"dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ\"]},\"src/oracle/v1.5.1/PriceFeed.sol\":{\"keccak256\":\"0xc0bd99de76ee008df1be079de7efc852eb2ecd43a8f2c1d1d804165ff732ad9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b03ea6b0ea9a61a296cd29fb0d18de4911038a07b6ff3fea6d1ed46f4973fffa\",\"dweb:/ipfs/QmP6cY5rMkxePzRgEaVxyfJV9wx4QvLuB2LRHkReCoPYUu\"]},\"src/oracle/v1.5.1/adapters/ChainlinkPriceFeed.sol\":{\"keccak256\":\"0x075bc067a1ba2d2b007aaec9bf47ed1e81dd7156efd630ba13590a1cf3ed2101\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b93332b1eee585ec3c8c4b5ee6f4d8201d312f239c2b48791e93b42bc0f778\",\"dweb:/ipfs/QmSBYuwE2KbvHpy2CMMtLvJ4bGV2MYADePWWDT2txjgCKt\"]},\"src/oracle/v1.5.1/adapters/ChainlinkSequencerUptimeFeed.sol\":{\"keccak256\":\"0xc50f8de2486c61eca9d2b924fdddb98a3dc03189020c76447f3f2d7e5803096a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bc9ced597abb5e69eb988c7a5134517c6edbdc2905911811a1bdfb8b0b256b5\",\"dweb:/ipfs/QmNi3Vjppn4jxxyD3nebT9yoYtC1mMZ5mVMJ3r6E2KBWXa\"]},\"src/oracle/v1.5.1/adapters/UniswapV3PriceFeed.sol\":{\"keccak256\":\"0x2678af124c634a4db813611c76ad5f5a939166353ad0eea2f995914e4c7cba35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a56e82648fd1522c6589d7cca591b7286c02ca729824fcce8164f2936c9e8c0\",\"dweb:/ipfs/QmUaCpemZD53MBiNE6fzPAcKKu6CSCs5AHDuMigXnFsfvq\"]},\"src/token/NonTransferrableToken.sol\":{\"keccak256\":\"0x9d35c1c2e04ad372f006692153d544cc35d2d43e88b0fb17120ba7bf52cf53a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a0f7e7425172cffa7f36bd188ed8b196f369ab73f5894543abc1a7913e4591\",\"dweb:/ipfs/QmYpLrLTgAEiiPbVHDrKR9YE7Ti9LdXVYCHM199ezocTZe\"]},\"src/v1.5/interfaces/ISizeFactory.sol\":{\"keccak256\":\"0x5f418a8d57b696ede91cf037e912f6a870a4ef7dc31b4b8ee6a943ae9ce647ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a1586f8db7f358440b5b7c56ce6c3057da7cd1d5db978fbffba10840ae6a21\",\"dweb:/ipfs/QmRmWVXhuFDs6avK33V4brFAzgNRnjkUxf92kk8keQDgce\"]},\"src/v1.5/token/NonTransferrableScaledTokenV1_5.sol\":{\"keccak256\":\"0x8e59d24aa4b9a09c0d5de01d830d04a54a7f8b64730a59314f6e6c2e0298c446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b1703dd3ac473c0977b359b794b363cf2145e5269f7b82003dd5b6858a3be19\",\"dweb:/ipfs/QmeyDYUGU7bYFy6GSdzPFZRbABb8rXAEvPSM1x29bbWEF3\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "EnforcedPause" },
        { "inputs": [], "type": "error", "name": "ExpectedPause" },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        { "inputs": [], "type": "error", "name": "NULL_OFFER" },
        { "inputs": [], "type": "error", "name": "NULL_TENOR" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tenor", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "minTenor",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "maxTenor", "type": "uint256" }
          ],
          "type": "error",
          "name": "TENOR_OUT_OF_RANGE"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "uint256", "name": "cr", "type": "uint256" }
          ],
          "type": "error",
          "name": "USER_IS_UNDERWATER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "oldBorrowRate",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "newBorrowRate",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VariablePoolBorrowRateUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct ClaimParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralRatio",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionToCompensateId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensate"
        },
        {
          "inputs": [
            {
              "internalType": "struct CopyLimitOrdersParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "copyAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "copyLimitOrders"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "data",
          "outputs": [
            {
              "internalType": "struct DataView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nextDebtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextCreditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableScaledTokenV1_5",
                  "name": "borrowAToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "debtToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IPool",
                  "name": "variablePool",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowATokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "debtTokenAmountToCollateralTokenAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeConfig",
          "outputs": [
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBuyCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCreditPosition",
          "outputs": [
            {
              "internalType": "struct CreditPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                { "internalType": "bool", "name": "forSale", "type": "bool" },
                {
                  "internalType": "uint256",
                  "name": "credit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPosition",
          "outputs": [
            {
              "internalType": "struct DebtPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "futureValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidityIndexAtRepayment",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPositionAssignedCollateral",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "lender", "type": "address" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanStatus",
          "outputs": [
            { "internalType": "enum LoanStatus", "name": "", "type": "uint8" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionsCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSellCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "cash", "type": "uint256" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSwapFee",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserCopyLimitOrders",
          "outputs": [
            {
              "internalType": "struct UserCopyLimitOrders",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "copyAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserView",
          "outputs": [
            {
              "internalType": "struct UserView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct User",
                  "name": "user",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct LimitOrder",
                      "name": "loanOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct LimitOrder",
                      "name": "borrowOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralTokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtBalance",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "f",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "r",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowAToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct InitializeOracleParams",
              "name": "o",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            },
            {
              "internalType": "struct InitializeDataParams",
              "name": "d",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "weth",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "variablePool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "borrowATokenV1_5",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCreditPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionLiquidatable",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isUserUnderwater",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateWithReplacementParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidateWithReplacement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidatorProfitBorrowToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes[]", "name": "_data", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            { "internalType": "bytes[]", "name": "results", "type": "bytes[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "struct InitializeOracleParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct RepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "riskConfig",
          "outputs": [
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowAToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidate"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "openingLimitBorrowCR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "creditPositionIdsForSale",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "creditPositionIds",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfiguration"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVariablePoolBorrowRate"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "struct UpdateConfigParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "string", "name": "key", "type": "string" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - uint256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - int256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)"
            }
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            }
          },
          "claim((uint256))": {
            "details": "Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before",
            "params": {
              "params": "ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim"
            }
          },
          "collateralRatio(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The collateral ratio of the user" }
          },
          "compensate((uint256,uint256,uint256))": {
            "params": {
              "params": "CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)"
            }
          },
          "constructor": { "custom:oz-upgrades-unsafe-allow": "constructor" },
          "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "details": "Does not erase the user's loan offer and borrow offer",
            "params": {
              "params": "CopyLimitOrdersParams struct containing the following fields:     - address copyAddress: The address of the user to copy from     - CopyLimitOrder copyLoanOffer: The loan offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)     - CopyLimitOrder copyBorrowOffer: The borrow offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied offer (currently unused)"
            }
          },
          "data()": { "returns": { "_0": "The data view" } },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "params": { "borrowATokenAmount": "The amount of borrow A tokens" },
            "returns": { "_0": "The equivalent amount of collateral tokens" }
          },
          "deposit((address,uint256,address))": {
            "details": "The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens",
            "params": {
              "params": "DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit"
            }
          },
          "feeConfig()": {
            "returns": { "_0": "The fee configuration parameters" }
          },
          "getBorrowOfferAPR(address,uint256)": {
            "params": {
              "borrower": "The address of the borrower",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the borrow offer" }
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for buying credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for buying credit as a market order"
            }
          },
          "getCreditPosition(uint256)": {
            "params": { "creditPositionId": "The ID of the credit position" },
            "returns": {
              "_0": "The CreditPosition struct containing the details of the credit position"
            }
          },
          "getDebtPosition(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "The DebtPosition struct containing the details of the debt position"
            }
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": { "_0": "The assigned collateral amount" }
          },
          "getLoanOfferAPR(address,uint256)": {
            "params": {
              "lender": "The address of the lender",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the loan offer" }
          },
          "getLoanStatus(uint256)": {
            "params": { "positionId": "The ID of the position" },
            "returns": { "_0": "The loan status" }
          },
          "getPositionsCount()": {
            "returns": {
              "_0": "The count of debt positions and credit positions"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for selling credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for selling credit as a market order"
            }
          },
          "getSwapFee(uint256,uint256)": {
            "params": {
              "cash": "The cash amount",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The swap fee" }
          },
          "getUserCopyLimitOrders(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user copy limit orders" }
          },
          "getUserView(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user view" }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isCreditPositionId(uint256)": {
            "params": { "creditPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a credit position ID, false otherwise"
            }
          },
          "isDebtPositionId(uint256)": {
            "params": { "debtPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a debt position ID, false otherwise"
            }
          },
          "isDebtPositionLiquidatable(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "True if the debt position is liquidatable, false otherwise"
            }
          },
          "isUserUnderwater(address)": {
            "params": { "user": "The address of the user" },
            "returns": {
              "_0": "True if the user is underwater, false otherwise"
            }
          },
          "liquidate((uint256,uint256,uint256))": {
            "params": {
              "params": "LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)"
            },
            "returns": {
              "liquidatorProfitCollateralToken": "The amount of collateral tokens the the fee recipient received from the liquidation"
            }
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "details": "This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned",
            "params": {
              "params": "LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            },
            "returns": {
              "liquidatorProfitBorrowToken": "The amount of borrow tokens liquidator received from the liquidation",
              "liquidatorProfitCollateralToken": "The amount of collateral tokens liquidator received from the liquidation"
            }
          },
          "multicall(bytes[])": {
            "details": "This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.",
            "params": {
              "data": "An array of bytes encoded function calls to be executed in sequence."
            },
            "returns": {
              "results": "An array of bytes representing the return data from each function call executed."
            }
          },
          "oracle()": { "returns": { "_0": "The oracle parameters" } },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "repay((uint256,address))": {
            "details": "The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim",
            "params": {
              "params": "RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "riskConfig()": {
            "returns": { "_0": "The risk configuration parameters" }
          },
          "selfLiquidate((uint256))": {
            "details": "The user is prevented to self liquidate if a regular liquidation would be profitable",
            "params": {
              "params": "SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate"
            }
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - uint256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - int256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)"
            }
          },
          "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)"
            }
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "details": "By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.",
            "params": {
              "params": "SetUserConfigurationParams struct containing the following fields:     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions"
            }
          },
          "setVariablePoolBorrowRate(uint128)": {
            "details": "The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero",
            "params": { "borrowRate": "The new borrow rate" }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "updateConfig((string,uint256))": {
            "details": "For `address` parameters, the `value` is converted to `uint160` and then to `address`",
            "params": {
              "params": "UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update"
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "version()": {
            "returns": { "_0": "The version of the Size protocol" }
          },
          "withdraw((address,uint256,address))": {
            "details": "This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens",
            "params": {
              "params": "WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new loan offer in the orderbook"
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Obtains credit via lending or buying existing credit"
          },
          "claim((uint256))": {
            "notice": "Claim the repayment of a loan with accrued interest from the Variable Pool"
          },
          "collateralRatio(address)": {
            "notice": "Get the collateral ratio of a user"
          },
          "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "notice": "Copy limit orders from a user"
          },
          "data()": { "notice": "Get the data view" },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "notice": "Convert debt token amount to collateral token amount"
          },
          "deposit((address,uint256,address))": {
            "notice": "Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Variable Pool,         Collateral tokens are deposited into the Size contract through the DepositTokenLibrary"
          },
          "feeConfig()": { "notice": "Get the fee configuration parameters" },
          "getBorrowOfferAPR(address,uint256)": {
            "notice": "Get the APR for a borrow offer"
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Gets the swap data for buying credit as a market order"
          },
          "getCreditPosition(uint256)": {
            "notice": "Get the details of a credit position"
          },
          "getDebtPosition(uint256)": {
            "notice": "Get the details of a debt position"
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "notice": "Get the assigned collateral for a debt position"
          },
          "getLoanOfferAPR(address,uint256)": {
            "notice": "Get the APR for a loan offer"
          },
          "getLoanStatus(uint256)": {
            "notice": "Get the loan status for a given position ID"
          },
          "getPositionsCount()": {
            "notice": "Get the count of debt and credit positions"
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Returns the swap data for selling credit as a market order"
          },
          "getSwapFee(uint256,uint256)": {
            "notice": "Get the swap fee for a given cash and tenor"
          },
          "getUserCopyLimitOrders(address)": {
            "notice": "Get the user copy limit orders for a given user"
          },
          "getUserView(address)": {
            "notice": "Get the user view for a given user"
          },
          "isCreditPositionId(uint256)": {
            "notice": "Check if a given ID is a credit position ID"
          },
          "isDebtPositionId(uint256)": {
            "notice": "Check if a given ID is a debt position ID"
          },
          "isDebtPositionLiquidatable(uint256)": {
            "notice": "Check if a debt position is liquidatable"
          },
          "isUserUnderwater(address)": {
            "notice": "Check if a user is underwater"
          },
          "liquidate((uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower"
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position with a replacement borrower"
          },
          "multicall(bytes[])": {
            "notice": "Executes multiple calls in a single transaction"
          },
          "oracle()": { "notice": "Get the oracle parameters" },
          "pause()": {
            "notice": "Pauses the protocol         Only callabe by the DEFAULT_ADMIN_ROLE"
          },
          "repay((uint256,address))": {
            "notice": "Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported"
          },
          "riskConfig()": { "notice": "Get the risk configuration parameters" },
          "selfLiquidate((uint256))": {
            "notice": "Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees"
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new borrow offer in the orderbook"
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "notice": "Set the credit positions for sale"
          },
          "setVariablePoolBorrowRate(uint128)": {
            "notice": "Sets the variable borrow rate         Only callabe by the BORROW_RATE_UPDATER_ROLE"
          },
          "unpause()": {
            "notice": "Unpauses the protocol         Only callabe by the DEFAULT_ADMIN_ROLE"
          },
          "updateConfig((string,uint256))": {
            "notice": "Updates the configuration of the protocol         Only callabe by the DEFAULT_ADMIN_ROLE"
          },
          "version()": { "notice": "Get the version of the Size protocol" },
          "withdraw((address,uint256,address))": {
            "notice": "Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Variable Pool         Collateral tokens are withdrawn from the Size contract through the DepositTokenLibrary"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=lib/aave-v3-core/contracts/",
        "@chainlink/=lib/chainlink/",
        "@chimera/=lib/chimera/src/",
        "@crytic/properties/=lib/properties/",
        "@deprecated/=deprecated/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@script/=script/",
        "@solady/=lib/solady/src/",
        "@src/=src/",
        "@test/=test/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "ERC4626/=lib/properties/lib/ERC4626/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "chainlink/=lib/chainlink/contracts/",
        "chimera/=lib/chimera/src/",
        "ds-test/=lib/solady/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "properties/=lib/properties/contracts/",
        "solady/=lib/solady/",
        "solmate/=lib/properties/lib/solmate/src/",
        "v3-core/=lib/v3-core/contracts/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Size.sol": "Size" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "deprecated/token/NonTransferrableScaledTokenV1_2.sol": {
        "keccak256": "0xc791dccf6ea101ba629088b97fd57a48c54fcaeb9949096add972abe44e063d4",
        "urls": [
          "bzz-raw://d5e4db6706df0c604a63b257bc897cfdd8a001b62037d8f5e1b05d2d49966373",
          "dweb:/ipfs/QmYzRXDF3zpgVkDbQDvBWaHKeviSHs5FcEJQZGrLSzLZFS"
        ],
        "license": "MIT"
      },
      "lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
        "keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
        "urls": [
          "bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
          "dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAToken.sol": {
        "keccak256": "0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417",
        "urls": [
          "bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa",
          "dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol": {
        "keccak256": "0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd",
        "urls": [
          "bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0",
          "dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol": {
        "keccak256": "0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee",
        "urls": [
          "bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87",
          "dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPool.sol": {
        "keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
        "urls": [
          "bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
          "dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol": {
        "keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
        "urls": [
          "bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
          "dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol": {
        "keccak256": "0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4",
        "urls": [
          "bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d",
          "dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol": {
        "keccak256": "0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07",
        "urls": [
          "bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06",
          "dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol": {
        "keccak256": "0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88",
        "urls": [
          "bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828",
          "dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f",
        "urls": [
          "bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7",
          "dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53",
        "urls": [
          "bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930",
          "dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
        "keccak256": "0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97",
        "urls": [
          "bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007",
          "dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8",
        "urls": [
          "bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45",
          "dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3",
        "urls": [
          "bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da",
          "dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c",
        "urls": [
          "bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9",
          "dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65",
        "urls": [
          "bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a",
          "dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
        "urls": [
          "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
          "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160",
        "urls": [
          "bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260",
          "dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f",
        "urls": [
          "bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df",
          "dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Size.sol": {
        "keccak256": "0x857f522198eb91bfb236e5a9b9a5bf9a9ea40879e0dc57e1d0ce5d3798aa6a56",
        "urls": [
          "bzz-raw://437bddac08abf4751f712dcc509c02bc2ee88d77822bc5dae5818d60af563542",
          "dweb:/ipfs/QmVAP3edCnaqzra2nJoHna2aMuGfYPUstL4tD9sq9z72Uc"
        ],
        "license": "MIT"
      },
      "src/SizeStorage.sol": {
        "keccak256": "0xa17e5e72879c006e047249670ff1d26921308be558ac31ed440a0377331f0d64",
        "urls": [
          "bzz-raw://e2e0c44694c9fd07dba944531e21c763998fc59a9f04f4f849fd1d794a93488f",
          "dweb:/ipfs/QmNi8avpR2dripawHFT7Bfs8T6r7ZTJsD4fRaGHMBK5WeK"
        ],
        "license": "MIT"
      },
      "src/SizeView.sol": {
        "keccak256": "0xf5fbbe499d5d7fa26b4ef414079d6768767262fdebea0190c44b6a9614482790",
        "urls": [
          "bzz-raw://0b172c0a29c04150532e5c732851d9668c97e3a3965b33fafe4703b485737b0c",
          "dweb:/ipfs/QmVhrXFs3bxyzW4wuQHpHrGZvaMxZGBU8mY5PvURB7CVXw"
        ],
        "license": "MIT"
      },
      "src/SizeViewData.sol": {
        "keccak256": "0x7e28749b5028c2815426edcdc33bd6f6fb7c58895d3307b027c7e43f0b966bd6",
        "urls": [
          "bzz-raw://63909e9222758008ffa1dae6476620bb45c1501dc0d52703cb2316bb21dd128f",
          "dweb:/ipfs/QmaNdQhtRkvTzYWFLLdzVkHNAKjJLH2r28cyFjLWocNjtr"
        ],
        "license": "MIT"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41",
        "urls": [
          "bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989",
          "dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISize.sol": {
        "keccak256": "0xcde11372b2d0ee70e2ed86f2e347e891c34e5ac20692c909cf9fa5de489f7041",
        "urls": [
          "bzz-raw://6077507b053745361167cabe32327407b5322eea62c60fb7362cda01804fa64e",
          "dweb:/ipfs/QmTpNZYKLbTeAcXnyFxyc4QX68Ug6zVJw2rJPNHhudmSKV"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISizeAdmin.sol": {
        "keccak256": "0xb79c3b936f0079dc0746fc0b9a927306b9593f4ae49dfba831835c8235d0bb68",
        "urls": [
          "bzz-raw://01057da51130ef1be6a42e98901586a803ed4b9905fb2aafb7c8c7ffa3d867da",
          "dweb:/ipfs/QmWCadbQvyQTgzSHetZhkiirvr4Cb61QAw52rJtzAHJsKW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISizeView.sol": {
        "keccak256": "0xdf4b0a7d4244056ebf5672ab3d3a661c4b0b0cda5e2234ff99ff9dbdd856ac7b",
        "urls": [
          "bzz-raw://5ab3393f44b9a3ba6a901eba35e0c571b9cb45569ef1edd4d2c1d409a843c3c2",
          "dweb:/ipfs/QmQ2F2fZa1H2wYi9LckMJPe6Awu2EW9acxXAjJiVVNcAdN"
        ],
        "license": "MIT"
      },
      "src/interfaces/IWETH.sol": {
        "keccak256": "0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c",
        "urls": [
          "bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e",
          "dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t"
        ],
        "license": "MIT"
      },
      "src/libraries/AccountingLibrary.sol": {
        "keccak256": "0x66384014dcb822fda7b621bd6f31f997f3eb6246706b8274dc069cc9d4a1255d",
        "urls": [
          "bzz-raw://c7dce6d359e85a15029579ea61ca53fd4f39302c2e70d17717cc7263618d9d2e",
          "dweb:/ipfs/QmNnrUM9CHToHhWDfmCrXh9B1AkUv195dtcFDbnircp2p7"
        ],
        "license": "MIT"
      },
      "src/libraries/CapsLibrary.sol": {
        "keccak256": "0xa2a1c1a8d5d2c4797156b571202fcc031e50e60cf89041d81b571adba775f8af",
        "urls": [
          "bzz-raw://4e0c0c335d7a5be6f317af50feca479fb4f0ec1931a5f1d53f86eaa800c6608a",
          "dweb:/ipfs/QmVWdfds1DczpSF6V6H6mD1QGUtvX7dVsfFKAcdCNWyYsk"
        ],
        "license": "MIT"
      },
      "src/libraries/DepositTokenLibrary.sol": {
        "keccak256": "0x3827cb93fb6904f3bf8680220991962b2d7963c4c34da5cd3a90dc663a535abf",
        "urls": [
          "bzz-raw://2ea06308e762ab6fbcb9b36cd4e159d0c9c9a6f004ec82cf62a2b641cb8c33a5",
          "dweb:/ipfs/QmTyVDFRVjqcansmUA2TNtKxUWFATx9dw5bJkiKTECpSaG"
        ],
        "license": "MIT"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x9a25152472af88ceed4b27daa2b2a18d6a185276511c03b58e45e2a078d661cc",
        "urls": [
          "bzz-raw://38e99c32dbc05ddcfa8249a988e79ae939e6f31df94b37c608be4d5ecfd77316",
          "dweb:/ipfs/QmacU895DeCcA89FswQL6xkN2dXVDGJvzd7PmNRFjMtsAi"
        ],
        "license": "MIT"
      },
      "src/libraries/Events.sol": {
        "keccak256": "0x0101016d4bb423e5a91eed3c81c3a79b8957e2f268126e13c860c8d4175638da",
        "urls": [
          "bzz-raw://e5516ed4aa20e268568d739e51144238139984b54fb10ebad857f87e0c74d979",
          "dweb:/ipfs/Qmd7tEif62JPyNxxakBkGbmLvAGhycLgSbAAhcfLbiZFkp"
        ],
        "license": "MIT"
      },
      "src/libraries/LoanLibrary.sol": {
        "keccak256": "0x90beab702b0e409188b2ac6c7b13d3f5787b99ecfac63c58943ace7b8f48af18",
        "urls": [
          "bzz-raw://93ade5e1da3393808b03d49ef60285be7852f839c50098ea90fce31892b2af4a",
          "dweb:/ipfs/QmW2BrNXkdxX12Vizbkj8WKQVukzNKnNrj3CS5N28dCSTr"
        ],
        "license": "MIT"
      },
      "src/libraries/Math.sol": {
        "keccak256": "0x445f0f8e7e74e16ce74d8563a083fa8c5a54142eb871f7e076f0569a5a940949",
        "urls": [
          "bzz-raw://9c34a2714a25dff091b872aa35056354c8a481112ff475204a31bc8db894eac3",
          "dweb:/ipfs/QmY5oew2GzqxaVA9f39hCr68V8tuhW5k4iB23kpXnPgx38"
        ],
        "license": "MIT"
      },
      "src/libraries/Multicall.sol": {
        "keccak256": "0x131bebb184254dd1582caa922935e03a70cc9379794ecf0e7d3849c33b8e7509",
        "urls": [
          "bzz-raw://6afec7cff97421a7682a3ab37725cc9d4161607caff250a34be76b318200f668",
          "dweb:/ipfs/QmQ8ZgKX3fnLPsYSpqVZpGuXu9qF4AxdkNSatUK5MDMP4z"
        ],
        "license": "MIT"
      },
      "src/libraries/OfferLibrary.sol": {
        "keccak256": "0x5e72be5e82da4a9a401b7c87a25d5367e57228c2c6c90806b201e13bfdd01b9c",
        "urls": [
          "bzz-raw://e75827644498b891dccb508f0ccbcc7fd7e784bbf27ba1ba1bab348d4680b03a",
          "dweb:/ipfs/QmSTLtt2mNw2WKTWpGUra35AoWvaw4Vtjo2kFuJoR3mBVb"
        ],
        "license": "MIT"
      },
      "src/libraries/RiskLibrary.sol": {
        "keccak256": "0xd569b83082aa4b4d7de62cbd931211cded09aa1ae3431240311a47238c884a42",
        "urls": [
          "bzz-raw://cf3a18fd4a688f12d24a266c5a435dc6cf059457d2d76cb6ba7f10aeb610eec0",
          "dweb:/ipfs/QmRvYx7LLBgfCX6SsGrUzWM5PFS9JpAAr7wak5JN4pXVos"
        ],
        "license": "MIT"
      },
      "src/libraries/YieldCurveLibrary.sol": {
        "keccak256": "0x7aad6c048e0d02ea1b0173e6ffeb626548a887a27019c785c98b98bd6835f7b6",
        "urls": [
          "bzz-raw://6c615e561ff58811ff67c0c8acbd899208e52c4273afe848a932b58bcf5a6efd",
          "dweb:/ipfs/QmY4DnraC4wJqmzRxMd4aaCTBzzL4aGJXQkTr9JVyZwW7a"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/BuyCreditLimit.sol": {
        "keccak256": "0x0959ff2c4e63f0f99632ff444844ddd3ed9b8871f14070122d4233112b4a1e5e",
        "urls": [
          "bzz-raw://32cbcd20939318462262a77b8bb2309e2dbc348561d3def4dc4ade16027ff782",
          "dweb:/ipfs/QmdZQKrGgwebr7BiJ5PkmKV3ccLVji5wvr3ytV2kyNT1BK"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/BuyCreditMarket.sol": {
        "keccak256": "0x6a57c17c28167f1871626e8a748facf6f4fb3486a3cb488df71b71c61ac9370c",
        "urls": [
          "bzz-raw://e2ef51dc34398f2087e9146fc9281ecc619c508302f0a25ee3134986d134f781",
          "dweb:/ipfs/QmWuksE7CbxZ18cH1jGGgMKvbXYNk6wR8NQXQEKQtc9psG"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Claim.sol": {
        "keccak256": "0xcada138ab05e33023e17c2b03f1b3f5bb1f00b78e8f0968dd6ddb704ff9761dc",
        "urls": [
          "bzz-raw://8497094fc7e7cfc1ee3c49775ae89dced5e85a9a8f3d37af2f628e2d3141f90a",
          "dweb:/ipfs/QmSLiPfgvQyRUmBXhVcpy33K8knCJyGRzssnUHzPqP1inC"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Compensate.sol": {
        "keccak256": "0x3d15283e62c33868c83ab01e72f949535dfd1a01c43ced3653ad9dc39bd5eb04",
        "urls": [
          "bzz-raw://b6f1682c301bb50b7eaf84f69df79c5304a2491c7292740fe202128c2b653fc9",
          "dweb:/ipfs/Qme73q2xvwTpNM3hXKfqDtJUReYxJaEoygx8qm7xLPfm7Z"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/CopyLimitOrders.sol": {
        "keccak256": "0x074df5bc44560b536cf5c06adce6105257a52a4c405fc531cc1e780b3edcdbf2",
        "urls": [
          "bzz-raw://b6f0d25bf070d3e2470fb32d2ad6753970098df59f56e131ec7200124e03c5bf",
          "dweb:/ipfs/QmZx7ULkkGE5YbRwGP2rbiYNX6KrvdxuuVuZpNPhp6GBh1"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Deposit.sol": {
        "keccak256": "0xab2e2d6467d24f2cdc386ab58185c06c714903ea26b664bbd7253c4f066c3209",
        "urls": [
          "bzz-raw://9dc4f64cc85418ba5605b6bbb0b2b62486162e44d10c97c1678adf989beb3022",
          "dweb:/ipfs/QmXUAiRrvF7PcLhQrtAGtWAhu5DTw63kGe4fWBy3wJ6cmm"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Initialize.sol": {
        "keccak256": "0x0c4091da683d92981d9396efc0f3d88599f8ac7ccb6e287f7010157eedffca6b",
        "urls": [
          "bzz-raw://df1fbd0c9e42a639a5c9bd53116fcf9ff4f82e962465214b1d79bc0239cfd504",
          "dweb:/ipfs/QmUDnDyzkccDYS3RjqVg232mremdanwUkH3UKV6izhC6hq"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Liquidate.sol": {
        "keccak256": "0xea8015e96bec8bec5506334d956ed77491dc767333b04390ea960ba8f6fcfb12",
        "urls": [
          "bzz-raw://6fef65f4fb081eb136fda47fb8c789faf0bfc759495862360abf79d881b419f6",
          "dweb:/ipfs/QmTrEymdfHYvGxUHzGwxua9T6K3Q4GujfZq64QxMer4Jjz"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/LiquidateWithReplacement.sol": {
        "keccak256": "0x837eb1f42a63cc96cb6ab02da4fbee0fc3a4255b629b059ae0d891077f53baa7",
        "urls": [
          "bzz-raw://a0ce025a37c323e4281dc4e28c6f51c9cfa753593153e597ed09a179c667a177",
          "dweb:/ipfs/QmQAprs2Z8ZVGoFpheZEca3JaaZBK7RWq54wUGxgtgiVgN"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Repay.sol": {
        "keccak256": "0x52aa744b525982d8d892d2f394be3c7f82ae536fa8aaf9b9ae89f538bd9c78bc",
        "urls": [
          "bzz-raw://3b05a321df177c0212d73c77502790e085907f261a2575ce64db5b9e256c24ab",
          "dweb:/ipfs/QmXguVUCLZ7u7YgUNEhmRDJe2cbNL77vwFQsnF6KGe2HMB"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/SelfLiquidate.sol": {
        "keccak256": "0x1eee7ee0b08fbc9c5de58d30c23477886f03ad3503f608879aa2e53db57a352c",
        "urls": [
          "bzz-raw://1f7aef27da5d0b04e29ab6a19d8a1399c5af2646ab3fa317b4aa2dee6e4b18d9",
          "dweb:/ipfs/QmNxMjX2ZABujDAgc17SLC4gmLx8QGfjEhVKXNr9tsiXb4"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/SellCreditLimit.sol": {
        "keccak256": "0x466fac886eac9c4fd872e457a4ae38fcd33ffe66a7e320d97bdb2bf07fcbce29",
        "urls": [
          "bzz-raw://1105d100a848a1982786885683885c2e8475f3700e1de9dc9b5df70ed6e5defb",
          "dweb:/ipfs/QmbDBJFfbcuSFQ3CPmwacYr1LcQS3yndUsk1kLnNdnQhNS"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/SellCreditMarket.sol": {
        "keccak256": "0x6b48fd515f935f56a3774720414a80dc5292f6040eb620ce35abc4342015b7e0",
        "urls": [
          "bzz-raw://e76632165d1a6a167d5fd16ee1eabd310547a44075e0609c19161b174da05dca",
          "dweb:/ipfs/QmQ6vW1hCe8LAYafkgtfioCUVotgj3S2KXyXvgVc6jRCKk"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/SetUserConfiguration.sol": {
        "keccak256": "0x2dcd959ef9338d1e27c5905e07600b95ea0351d77603f5fe9b8292223138e671",
        "urls": [
          "bzz-raw://de99454feaa5122030e16ccec433a2c59b06e4852c9c31109a273d6df9f8a31e",
          "dweb:/ipfs/QmfRxQs7fC3vy41swiH48FGU9jPTm47BeqQTxEmRyazTbc"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/UpdateConfig.sol": {
        "keccak256": "0xabec71215f2b58059caad21f322e6098b5b1613db35369cd74712d2763514f36",
        "urls": [
          "bzz-raw://1119b2e55537ff8c80f9337c6f97338b129f6da7939c60fc12bf11b8d6a5d0e4",
          "dweb:/ipfs/Qmdi7xy1hJQaQriRwbcTx3VxYCeYuLkuPdm7B9sNLMEpzu"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Withdraw.sol": {
        "keccak256": "0xa199c5d3b21372df8cf74ad3a0244e66eeef9e8b4a12a796b2b5bfadccf10fa9",
        "urls": [
          "bzz-raw://a8f69fc1cb77e87a61cf29573ef3a89a21b8af986ae3fe708293b0e6b2f18555",
          "dweb:/ipfs/QmevL6r4ytMoUTng6ogigwxMogARDbaE2ciqd3bh3oWNco"
        ],
        "license": "MIT"
      },
      "src/oracle/IPriceFeed.sol": {
        "keccak256": "0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90",
        "urls": [
          "bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48",
          "dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/PriceFeed.sol": {
        "keccak256": "0xc0bd99de76ee008df1be079de7efc852eb2ecd43a8f2c1d1d804165ff732ad9a",
        "urls": [
          "bzz-raw://b03ea6b0ea9a61a296cd29fb0d18de4911038a07b6ff3fea6d1ed46f4973fffa",
          "dweb:/ipfs/QmP6cY5rMkxePzRgEaVxyfJV9wx4QvLuB2LRHkReCoPYUu"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/adapters/ChainlinkPriceFeed.sol": {
        "keccak256": "0x075bc067a1ba2d2b007aaec9bf47ed1e81dd7156efd630ba13590a1cf3ed2101",
        "urls": [
          "bzz-raw://72b93332b1eee585ec3c8c4b5ee6f4d8201d312f239c2b48791e93b42bc0f778",
          "dweb:/ipfs/QmSBYuwE2KbvHpy2CMMtLvJ4bGV2MYADePWWDT2txjgCKt"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/adapters/ChainlinkSequencerUptimeFeed.sol": {
        "keccak256": "0xc50f8de2486c61eca9d2b924fdddb98a3dc03189020c76447f3f2d7e5803096a",
        "urls": [
          "bzz-raw://4bc9ced597abb5e69eb988c7a5134517c6edbdc2905911811a1bdfb8b0b256b5",
          "dweb:/ipfs/QmNi3Vjppn4jxxyD3nebT9yoYtC1mMZ5mVMJ3r6E2KBWXa"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/adapters/UniswapV3PriceFeed.sol": {
        "keccak256": "0x2678af124c634a4db813611c76ad5f5a939166353ad0eea2f995914e4c7cba35",
        "urls": [
          "bzz-raw://7a56e82648fd1522c6589d7cca591b7286c02ca729824fcce8164f2936c9e8c0",
          "dweb:/ipfs/QmUaCpemZD53MBiNE6fzPAcKKu6CSCs5AHDuMigXnFsfvq"
        ],
        "license": "MIT"
      },
      "src/token/NonTransferrableToken.sol": {
        "keccak256": "0x9d35c1c2e04ad372f006692153d544cc35d2d43e88b0fb17120ba7bf52cf53a4",
        "urls": [
          "bzz-raw://b9a0f7e7425172cffa7f36bd188ed8b196f369ab73f5894543abc1a7913e4591",
          "dweb:/ipfs/QmYpLrLTgAEiiPbVHDrKR9YE7Ti9LdXVYCHM199ezocTZe"
        ],
        "license": "MIT"
      },
      "src/v1.5/interfaces/ISizeFactory.sol": {
        "keccak256": "0x5f418a8d57b696ede91cf037e912f6a870a4ef7dc31b4b8ee6a943ae9ce647ed",
        "urls": [
          "bzz-raw://36a1586f8db7f358440b5b7c56ce6c3057da7cd1d5db978fbffba10840ae6a21",
          "dweb:/ipfs/QmRmWVXhuFDs6avK33V4brFAzgNRnjkUxf92kk8keQDgce"
        ],
        "license": "MIT"
      },
      "src/v1.5/token/NonTransferrableScaledTokenV1_5.sol": {
        "keccak256": "0x8e59d24aa4b9a09c0d5de01d830d04a54a7f8b64730a59314f6e6c2e0298c446",
        "urls": [
          "bzz-raw://2b1703dd3ac473c0977b359b794b363cf2145e5269f7b82003dd5b6858a3be19",
          "dweb:/ipfs/QmeyDYUGU7bYFy6GSdzPFZRbABb8rXAEvPSM1x29bbWEF3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 120
}
