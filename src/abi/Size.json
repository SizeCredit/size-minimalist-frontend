{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "buyCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditLimitOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct BuyCreditLimitParams",
              "components": [
                {
                  "name": "maxDueDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "internalType": "struct YieldCurve",
                  "components": [
                    {
                      "name": "tenors",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    },
                    {
                      "name": "aprs",
                      "type": "int256[]",
                      "internalType": "int256[]"
                    },
                    {
                      "name": "marketRateMultipliers",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarketOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct BuyCreditMarketParams",
              "components": [
                {
                  "name": "borrower",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "exactAmountIn",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ClaimParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "collateralRatio",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "compensate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CompensateParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "creditPositionToCompensateId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "compensateOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct CompensateOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct CompensateParams",
              "components": [
                {
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "creditPositionToCompensateId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "copyLimitOrders",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CopyLimitOrdersParams",
          "components": [
            {
              "name": "copyAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "copyLoanOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            },
            {
              "name": "copyBorrowOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "copyLimitOrdersOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct CopyLimitOrdersOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct CopyLimitOrdersParams",
              "components": [
                {
                  "name": "copyAddress",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "internalType": "struct CopyLimitOrder",
                  "components": [
                    {
                      "name": "minTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "minAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "offsetAPR",
                      "type": "int256",
                      "internalType": "int256"
                    }
                  ]
                },
                {
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "internalType": "struct CopyLimitOrder",
                  "components": [
                    {
                      "name": "minTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "minAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "offsetAPR",
                      "type": "int256",
                      "internalType": "int256"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "data",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DataView",
          "components": [
            {
              "name": "nextDebtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nextCreditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "collateralToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "borrowAToken",
              "type": "address",
              "internalType": "contract NonTransferrableScaledTokenV1_5"
            },
            {
              "name": "debtToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "contract IPool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "debtTokenAmountToCollateralTokenAmount",
      "inputs": [
        {
          "name": "borrowATokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositOnBehalfOf",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct DepositParams",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "to", "type": "address", "internalType": "address" }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "feeConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBorrowOfferAPR",
      "inputs": [
        { "name": "borrower", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBuyCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCreditPosition",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct CreditPosition",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            { "name": "forSale", "type": "bool", "internalType": "bool" },
            { "name": "credit", "type": "uint256", "internalType": "uint256" },
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPosition",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DebtPosition",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "futureValue",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "dueDate", "type": "uint256", "internalType": "uint256" },
            {
              "name": "liquidityIndexAtRepayment",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPositionAssignedCollateral",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanOfferAPR",
      "inputs": [
        { "name": "lender", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanStatus",
      "inputs": [
        { "name": "positionId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "uint8", "internalType": "enum LoanStatus" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPositionsCount",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSellCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "creditAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSwapFee",
      "inputs": [
        { "name": "cash", "type": "uint256", "internalType": "uint256" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserCopyLimitOrders",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserCopyLimitOrders",
          "components": [
            {
              "name": "copyAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "copyLoanOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            },
            {
              "name": "copyBorrowOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserView",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserView",
          "components": [
            {
              "name": "user",
              "type": "tuple",
              "internalType": "struct User",
              "components": [
                {
                  "name": "loanOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "borrowOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            { "name": "account", "type": "address", "internalType": "address" },
            {
              "name": "collateralTokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "debtBalance",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        {
          "name": "f",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "r",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowAToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenCap",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "o",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        },
        {
          "name": "d",
          "type": "tuple",
          "internalType": "struct InitializeDataParams",
          "components": [
            { "name": "weth", "type": "address", "internalType": "address" },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "borrowATokenV1_5",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "sizeFactory",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isCreditPositionId",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionId",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionLiquidatable",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "deadline", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "liquidateWithReplacement",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateWithReplacementParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "liquidatorProfitBorrowToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multicall",
      "inputs": [
        { "name": "_data", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [
        { "name": "results", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "oracle",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "partialRepay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct PartialRepayParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "reinitialize",
      "inputs": [
        {
          "name": "_sizeFactory",
          "type": "address",
          "internalType": "contract ISizeFactory"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct RepayParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "riskConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowAToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenCap",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "selfLiquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SelfLiquidateParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "selfLiquidateOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SelfLiquidateOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SelfLiquidateParams",
              "components": [
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimitOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SellCreditLimitOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SellCreditLimitParams",
              "components": [
                {
                  "name": "maxDueDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "internalType": "struct YieldCurve",
                  "components": [
                    {
                      "name": "tenors",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    },
                    {
                      "name": "aprs",
                      "type": "int256[]",
                      "internalType": "int256[]"
                    },
                    {
                      "name": "marketRateMultipliers",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarketOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SellCreditMarketOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SellCreditMarketParams",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "exactAmountIn",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfiguration",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationParams",
          "components": [
            {
              "name": "openingLimitBorrowCR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allCreditPositionsForSaleDisabled",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIdsForSale",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfigurationOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SetUserConfigurationParams",
              "components": [
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "creditPositionIdsForSale",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "creditPositionIds",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setVariablePoolBorrowRate",
      "inputs": [
        { "name": "borrowRate", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sizeFactory",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ISizeFactory"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateConfig",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct UpdateConfigParams",
          "components": [
            { "name": "key", "type": "string", "internalType": "string" },
            { "name": "value", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct WithdrawParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct WithdrawOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct WithdrawParams",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "to", "type": "address", "internalType": "address" }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VariablePoolBorrowRateUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "newBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AccessControlBadConfirmation", "inputs": [] },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "neededRole", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "EnforcedPause", "inputs": [] },
    { "type": "error", "name": "ExpectedPause", "inputs": [] },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    {
      "type": "error",
      "name": "INVALID_MARKET",
      "inputs": [
        { "name": "market", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "MUST_IMPROVE_COLLATERAL_RATIO",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "crBefore", "type": "uint256", "internalType": "uint256" },
        { "name": "crAfter", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "NOT_SUPPORTED", "inputs": [] },
    { "type": "error", "name": "NULL_ADDRESS", "inputs": [] },
    { "type": "error", "name": "NULL_TENOR", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051615e96620001005f395f818161387a015281816138a30152613a0b0152615e965ff3fe6080604052600436106103c9575f3560e01c80635cbc51eb116101f4578063b5ec748711610113578063e5af06ce116100a8578063f7e7d1fd11610078578063f7e7d1fd14610c45578063f85c3cd414610c64578063fa7a5b1014610c83578063fa823af514610caa578063fd17174a14610cbd575f80fd5b8063e5af06ce14610bed578063f052e7a414610c0c578063f45bf01c14610c1f578063f54ae18b14610c32575f80fd5b8063ccd8d4d1116100e3578063ccd8d4d114610b95578063d547741f14610ba8578063d8d933a514610bc7578063e05001f514610bda575f80fd5b8063b5ec748714610b18578063c73d983314610b44578063ca40742c14610b57578063ccc9681514610b76575f80fd5b80638628babd11610189578063a475207611610159578063a475207614610a7d578063ac9650d814610a9c578063ad3cb1cc14610abc578063b36116f614610aec575f80fd5b80638628babd14610a255780638e57277614610a3857806391d1485414610a4b578063a217fddf14610a6a575f80fd5b80637c90a6ca116101c45780637c90a6ca1461095e5780637dc0d1d0146109bd5780637f417c06146109fe5780638456cb5914610a11575f80fd5b80635cbc51eb146107c357806364eb0a71146107ef57806373d4a13a1461080e57806376c1b82f14610932575f80fd5b80632ed28ba2116102eb5780634cbd882c11610280578063536b9c7911610250578063536b9c791461072657806353e043d41461073957806354137c7e1461074c57806354fd4d501461076b5780635c975abb146107a0575f80fd5b80634cbd882c146106cd5780634f1ef286146106ec5780634fd9a8a5146106ff57806352d1902d14610712575f80fd5b806337501921116102bb57806337501921146106675780633ae6d7c3146106935780633e3c119b146106a65780633f4ba83a146106b9575f80fd5b80632ed28ba2146105ea5780632f2ff15d1461061657806336568abe146106355780633746f85814610654575f80fd5b80631ca3b0cb116103615780632b4c9a20116103315780632b4c9a20146105865780632c60185c146105995780632cc884c5146105b85780632e106f21146105d7575f80fd5b80631ca3b0cb146104c75780631e5eb1d0146104f05780631fcd4a3414610554578063248a9ca314610567575f80fd5b8063134f3f961161039c578063134f3f96146104485780631970e5ea1461045b57806319a7359b146104885780631c4fd41c1461049b575f80fd5b806301ffc9a7146103cd57806302f2855a146104015780630317b9df146104165780630cf8542f14610435575b5f80fd5b3480156103d8575f80fd5b506103ec6103e73660046142e9565b610cd0565b60405190151581526020015b60405180910390f35b61041461040f366004614326565b610d06565b005b348015610421575f80fd5b50610414610430366004614350565b610ddb565b610414610443366004614326565b610edf565b610414610456366004614598565b610f0f565b348015610466575f80fd5b5061047a610475366004614616565b610fb5565b6040519081526020016103f8565b61041461049636600461462d565b610fc0565b3480156104a6575f80fd5b506104ba6104b5366004614616565b610ff4565b6040516103f8919061463d565b3480156104d2575f80fd5b506104db61106f565b604080519283526020830191909152016103f8565b3480156104fb575f80fd5b506105046110a2565b6040516103f89190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b61041461056236600461472b565b611154565b348015610572575f80fd5b5061047a610581366004614616565b6112fc565b610414610594366004614326565b61131c565b3480156105a4575f80fd5b5061047a6105b3366004614746565b611349565b3480156105c3575f80fd5b5061047a6105d2366004614766565b61137c565b6104146105e5366004614790565b611407565b3480156105f5575f80fd5b506106096106043660046147c6565b61142d565b6040516103f8919061480e565b348015610621575f80fd5b5061041461063036600461486d565b6114ae565b348015610640575f80fd5b5061041461064f36600461486d565b6114d0565b610414610662366004614350565b611508565b348015610672575f80fd5b506106866106813660046147c6565b61152e565b6040516103f8919061489b565b6104146106a136600461491f565b6115af565b6104db6106b436600461495d565b6117ca565b3480156106c4575f80fd5b50610414611a62565b3480156106d8575f80fd5b506104146106e736600461496d565b611abb565b6104146106fa366004614993565b611b81565b61041461070d366004614b9e565b611ba0565b34801561071d575f80fd5b5061047a611c46565b610414610734366004614c0e565b611c61565b610414610747366004614b9e565b611d52565b348015610757575f80fd5b5061047a610766366004614616565b611df8565b348015610776575f80fd5b5060408051808201909152600481526376312e3760e01b60208201525b6040516103f89190614cac565b3480156107ab575f80fd5b505f80516020615e418339815191525460ff166103ec565b3480156107ce575f80fd5b506107e26107dd366004614cbe565b611ee4565b6040516103f89190614da7565b3480156107fa575f80fd5b506103ec610809366004614616565b6122f6565b348015610819575f80fd5b506108c160408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e09283015190911691810191909152610100016103f8565b34801561093d575f80fd5b5061095161094c366004614616565b612302565b6040516103f89190614e49565b348015610969575f80fd5b506109726123c8565b6040516103f891905f60c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b3480156109c8575f80fd5b506109d161246c565b6040805182516001600160a01b031681526020928301516001600160401b031692810192909252016103f8565b610414610a0c366004614e57565b6124ef565b348015610a1c575f80fd5b50610414612593565b610414610a33366004614f25565b6125ec565b610414610a46366004614326565b612692565b348015610a56575f80fd5b506103ec610a6536600461486d565b6126bf565b348015610a75575f80fd5b5061047a5f81565b348015610a88575f80fd5b50610414610a97366004614f69565b6126f5565b610aaf610aaa366004614fd3565b61297a565b6040516103f89190615041565b348015610ac7575f80fd5b50610793604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610af7575f80fd5b50610b0b610b06366004614cbe565b61298f565b6040516103f891906150d3565b348015610b23575f80fd5b50610b37610b32366004614616565b612a47565b6040516103f8919061510b565b610414610b5236600461472b565b612b2d565b348015610b62575f80fd5b5061047a610b71366004614cbe565b612c70565b348015610b81575f80fd5b506103ec610b90366004614616565b612cf3565b610414610ba3366004614350565b612cfe565b348015610bb3575f80fd5b50610414610bc236600461486d565b612d24565b610414610bd53660046147c6565b612d40565b61047a610be8366004614326565b612d75565b348015610bf8575f80fd5b506103ec610c07366004614616565b612eca565b610414610c1a36600461513f565b612f45565b610414610c2d366004615160565b612f72565b610414610c403660046151ed565b61301d565b348015610c50575f80fd5b50610414610c5f366004614cbe565b6130c3565b348015610c6f575f80fd5b5061047a610c7e366004614766565b6132bb565b348015610c8e575f80fd5b50601c546040516001600160a01b0390911681526020016103f8565b610414610cb83660046151ed565b61330b565b610414610ccb366004615160565b6133b1565b5f6001600160e01b03198216637965db0b60e01b1480610d0057506301ffc9a760e01b6001600160e01b03198316145b92915050565b610d0e6133e5565b604051635fed4de960e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__90635fed4de990610d47905f908590600401615207565b5f6040518083038186803b158015610d5d575f80fd5b505af4158015610d6f573d5f803e3d5ffd5b505060405163d96aec4360e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__925063d96aec439150610dac905f908590600401615207565b5f6040518083038186803b158015610dc2575f80fd5b505af4158015610dd4573d5f803e3d5ffd5b5050505050565b5f610de68133613417565b610e115760405163e2517d3f60e01b8152336004820152602481018290526044015b60405180910390fd5b60405163e57980dd60e01b815273__$72c16261390208f563094e6a4fc9f74031$__9063e57980dd90610e4a905f908690600401615249565b5f6040518083038186803b158015610e60575f80fd5b505af4158015610e72573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$72c16261390208f563094e6a4fc9f74031$__9250634752b3b39150610eaf905f908690600401615249565b5f6040518083038186803b158015610ec5575f80fd5b505af4158015610ed7573d5f803e3d5ffd5b505050505050565b610f0c604051806040016040528083803603810190610efe91906152cd565b81523360209091015261330b565b50565b610f176133e5565b6040516333d4ade560e01b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__906333d4ade590610f50905f9085906004016152e7565b5f6040518083038186803b158015610f66575f80fd5b505af4158015610f78573d5f803e3d5ffd5b505060405163178bcac760e11b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__9250632f17958e9150610dac905f9085906004016152e7565b5f610d0081836134c0565b610f0c604051806060016040528083803603810190610fdf91906147c6565b81523360208201819052604090910152611154565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$674c94602fbdb88ca53d9ba4295c8813fa$__90637d62a7e090604401602060405180830381865af415801561104b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615357565b6011545f908190611081908290615389565b61108d60025f1961539c565b60125461109a9190615389565b915091509091565b6110de6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__906386617e779060240160c060405180830381865af415801561112b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f91906153bb565b905090565b61115c6133e5565b604051631e55c20b60e31b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9063f2ae105890611195905f908590600401615495565b5f6040518083038186803b1580156111ab575f80fd5b505af41580156111bd573d5f803e3d5ffd5b5050604051630f6470bd60e01b81525f925073__$909b104b05b98ab9b02bd00c4a2f54926d$__9150630f6470bd906111fc9084908690600401615495565b602060405180830381865af4158015611217573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123b91906154aa565b8251602001519091506001016112be578151516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb6906044015b5f6040518083038186803b1580156112a7575f80fd5b505af41580156112b9573d5f803e3d5ffd5b505050505b60405163bfbfe8ab60e01b81525f60048201526024810182905273__$bfec599912fc5b0c81449b9d06b4dcb311$__9063bfbfe8ab90604401610eaf565b5f9081525f80516020615e21833981519152602052604090206001015490565b610f0c60405180604001604052808380360381019061133b91906152cd565b81523360209091015261301d565b5f815f0361136a576040516301c85f6760e71b815260040160405180910390fd5b6113755f84846136c0565b9392505050565b60405163327ad2cd60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__9063327ad2cd906064015b602060405180830381865af41580156113e3573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137591906154aa565b610f0c60405180604001604052808361141f906154c1565b815233602090910152610f0f565b61143561411d565b604051631c81982560e11b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__90633903304a9061146e905f9086906004016154cc565b61014060405180830381865af415801561148a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615537565b6114b7826112fc565b6114c0816136e5565b6114ca83836136ef565b50505050565b6001600160a01b03811633146114f95760405163334bd91960e11b815260040160405180910390fd5b6115038282613797565b505050565b610f0c604051806040016040528083611520906155af565b815233602090910152611d52565b611536614163565b60405163301d1d1560e21b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063c07474549061156f905f9086906004016154cc565b61012060405180830381865af415801561158b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0091906155ba565b6115b76133e5565b602081015160405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af415801561161b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061163f91906154aa565b60405163f9c417bd60e01b815290915073__$7fa168b5d238863382c2bf886894022425$__9063f9c417bd9061167b905f90879060040161561c565b5f6040518083038186803b158015611691575f80fd5b505af41580156116a3573d5f803e3d5ffd5b5050604051634971bf9960e01b815273__$7fa168b5d238863382c2bf886894022425$__9250634971bf9991506116e0905f90879060040161561c565b5f6040518083038186803b1580156116f6575f80fd5b505af4158015611708573d5f803e3d5ffd5b505060405163046dbd1360e11b81525f600482018190526001600160a01b0386166024830152925073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__91506308db7a2690604401602060405180830381865af415801561176b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061178f91906154aa565b90508181116114ca5760405163625a84dd60e01b81526001600160a01b03841660048201526024810183905260448101829052606401610e08565b5f806117d46133e5565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab6117ff8133613417565b6118255760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b604051639f53ee0f60e01b815273__$d00168f5747027b5a56099c751031d7e40$__90639f53ee0f9061185e905f908890600401615697565b5f6040518083038186803b158015611874575f80fd5b505af4158015611886573d5f803e3d5ffd5b505060405163647a4b7560e11b81525f925073__$d00168f5747027b5a56099c751031d7e40$__915063c8f496ea906118c59084908990600401615697565b606060405180830381865af41580156118e0573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061190491906156ab565b9095509350905073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__632d77afb65f6119366040890160208a01614cbe565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b158015611979575f80fd5b505af415801561198b573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$d00168f5747027b5a56099c751031d7e40$__9250636e6595c191506119ca905f90899089906004016156d6565b5f6040518083038186803b1580156119e0575f80fd5b505af41580156119f2573d5f803e3d5ffd5b505060405163bfbfe8ab60e01b81525f60048201526024810184905273__$bfec599912fc5b0c81449b9d06b4dcb311$__925063bfbfe8ab91506044015f6040518083038186803b158015611a45575f80fd5b505af4158015611a57573d5f803e3d5ffd5b505050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611a8d8133613417565b611ab35760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b610f0c613810565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd24038611ae68133613417565b611b0c5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611b8961386f565b611b9282613913565b611b9c8282613944565b5050565b611ba86133e5565b604051637125eda960e11b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__9063e24bdb5290611be1905f9085906004016157ab565b5f6040518083038186803b158015611bf7575f80fd5b505af4158015611c09573d5f803e3d5ffd5b505060405163184d91f360e31b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__925063c26c8f989150610dac905f9085906004016157ab565b5f611c4f613a00565b505f80516020615e0183398151915290565b611c696133e5565b604080516325f2df6f60e01b81525f6004820152825151602482015260208301516001600160a01b03908116604483015291830151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__906325f2df6f906084015f6040518083038186803b158015611cdb575f80fd5b505af4158015611ced573d5f803e3d5ffd5b5050604080516330e78a9160e11b81525f6004820152845151602482015260208501516001600160a01b03908116604483015291850151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__92506361cf15229150608401610dac565b611d5a6133e5565b604051632d0c1e8b60e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__90632d0c1e8b90611d93905f9085906004016157ab565b5f6040518083038186803b158015611da9575f80fd5b505af4158015611dbb573d5f803e3d5ffd5b505060405163c0c66ed960e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__925063c0c66ed99150610dac905f9085906004016157ab565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015611e51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e7591906154aa565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$674c94602fbdb88ca53d9ba4295c8813fa$__906345ffd36d906113c8905f9085906004016157c3565b611eec61419a565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611f7e57602002820191905f5260205f20905b815481526020019060010190808311611f6a575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611fd457602002820191905f5260205f20905b815481526020019060010190808311611fc0575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561202a57602002820191905f5260205f20905b815481526020019060010190808311612016575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f82018054806020026020016040519081016040528092919081815260200182805480156120b057602002820191905f5260205f20905b81548152602001906001019080831161209c575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561210657602002820191905f5260205f20905b8154815260200190600101908083116120f2575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561215c57602002820191905f5260205f20905b815481526020019060010190808311612148575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa1580156121e2573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061220691906154aa565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015612256573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061227a91906154aa565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa1580156122ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122ee91906154aa565b905292915050565b6011545f908210610d00565b61230a6141d4565b604051633978289f60e01b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90633978289f90604401602060405180830381865af415801561235e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061238291906154aa565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b6123fb6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063dd378fd69060240160c060405180830381865af4158015612448573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f91906157fe565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063d72f4008906024016040805180830381865af41580156124cb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f919061586a565b6124f76133e5565b6040516210aa0b60e31b815273__$45d7492db284be01938913cb41b9cac2a6$__90628550589061252e905f90859060040161589d565b5f6040518083038186803b158015612544575f80fd5b505af4158015612556573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$45d7492db284be01938913cb41b9cac2a6$__92506364140a839150610dac905f90859060040161589d565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6125be8133613417565b6125e45760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b610f0c613a49565b6125f46133e5565b6040516315868ea760e21b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__9063561a3a9c9061262d905f9085906004016158d5565b5f6040518083038186803b158015612643575f80fd5b505af4158015612655573d5f803e3d5ffd5b50506040516389e70deb60e01b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__92506389e70deb9150610dac905f9085906004016158d5565b610f0c6040518060400160405280838036038101906126b1919061592f565b8152336020909101526115af565b5f9182525f80516020615e21833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f811580156127395750825b90505f826001600160401b031660011480156127545750303b155b905081158015612762575080155b156127805760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156127aa57845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__906369777eb9906127eb905f908e908e908e908e908e90600401615a62565b5f6040518083038186803b158015612801575f80fd5b505af4158015612813573d5f803e3d5ffd5b5050505061281f613a91565b612827613a99565b61282f613a91565b604051632ffdac7160e21b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__9063bff6b1c49061286e905f908d908d908d908d90600401615aec565b5f6040518083038186803b158015612884575f80fd5b505af4158015612896573d5f803e3d5ffd5b505050506128a65f801b8b6136ef565b506128d17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b6136ef565b506128fc7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b6136ef565b506129277f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b6136ef565b50831561296e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b60606129846133e5565b6113755f8484613aa9565b612997614203565b506001600160a01b039081165f908152601b602090815260409182902082516060808201855282549095168152835160a08082018652600184015482526002840154828601526003840154828701526004840154828801526005840154608080840191909152838601929092528551908101865260068401548152600784015494810194909452600883015484860152600983015495840195909552600a90910154938201939093529082015290565b612a7760405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015612acb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612aef91906154aa565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b612b356133e5565b60405163160b9e6b60e31b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063b05cf35890612b6e905f908590600401615495565b5f6040518083038186803b158015612b84575f80fd5b505af4158015612b96573d5f803e3d5ffd5b5050604051639f46aa4160e01b81525f925073__$c58e2605104bb31274ad8c04841b6a7550$__9150639f46aa4190612bd59084908690600401615495565b602060405180830381865af4158015612bf0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c1491906154aa565b8251602001519091506001016112be5760208201516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401611291565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af4158015612ccf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0091906154aa565b5f610d008183613e10565b610f0c604051806040016040528083612d16906155af565b815233602090910152611ba0565b612d2d826112fc565b612d36816136e5565b6114ca8383613797565b610f0c6040518060600160405280838152602001336001600160a01b03168152602001336001600160a01b0316815250612b2d565b5f612d7e6133e5565b6040516320b5435f60e11b815273__$04d32033081e1e9356971d8f4b5098bcad$__9063416a86be90612db7905f908690600401615b65565b5f6040518083038186803b158015612dcd575f80fd5b505af4158015612ddf573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$04d32033081e1e9356971d8f4b5098bcad$__925063341a672c9150612e1c905f908690600401615b65565b602060405180830381865af4158015612e37573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e5b91906154aa565b60405163489d188160e01b815290915073__$04d32033081e1e9356971d8f4b5098bcad$__9063489d188190612e99905f9086908690600401615b8d565b5f6040518083038186803b158015612eaf575f80fd5b505af4158015612ec1573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__9063325191d290604401602060405180830381865af4158015612f21573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615bc3565b610f0c604051806040016040528083803603810190612f649190615bde565b8152336020909101526125ec565b612f7a6133e5565b604051635792057f60e11b81525f60048201528135602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__9063af240afe906044015f6040518083038186803b158015612fc9575f80fd5b505af4158015612fdb573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__92506341d373f29150604401610dac565b6130256133e5565b604051631005beb160e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__9063802df5889061305e905f908590600401615bf9565b5f6040518083038186803b158015613074575f80fd5b505af4158015613086573d5f803e3d5ffd5b5050604051631cc17ae560e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__925063e60bd7289150610dac905f908590600401615bf9565b5f6130ce8133613417565b6130f45760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0080546129cc9190600160401b900460ff168061313e575080546001600160401b03808416911610155b1561315c5760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b03831617600160401b1781556001600160a01b0384166131a45760405163de0ce17d60e01b815260040160405180910390fd5b601c546001600160a01b0316156131ce5760405163f1b06c8d60e01b815260040160405180910390fd5b6040516337649a6d60e11b81523060048201526001600160a01b03851690636ec934da90602401602060405180830381865afa158015613210573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132349190615bc3565b6132535760405163e2a7bea360e01b8152306004820152602401610e08565b601c80546001600160a01b0319166001600160a01b038616179055805460ff60401b191681556040516001600160401b03831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b6040516333c7c71f60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__906333c7c71f906064016113c8565b6133136133e5565b60405163024889b160e51b815273__$d49e499a4608ab3aca09b91fe5950492b6$__9063491136209061334c905f908590600401615bf9565b5f6040518083038186803b158015613362575f80fd5b505af4158015613374573d5f803e3d5ffd5b505060405163a083c0ab60e01b815273__$d49e499a4608ab3aca09b91fe5950492b6$__925063a083c0ab9150610dac905f908590600401615bf9565b610f0c6040518060600160405280838036038101906133d09190615c3e565b81523360208201819052604090910152611c61565b5f80516020615e418339815191525460ff16156134155760405163d93c066560e01b815260040160405180910390fd5b565b5f61342283836126bf565b1561342f57506001610d00565b601c546001600160a01b031661344657505f610d00565b601c54604051632474521560e21b8152600481018590526001600160a01b038481166024830152909116906391d1485490604401602060405180830381865afa158015613495573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134b99190615bc3565b9050610d00565b5f61137583600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613518573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061353c91906154aa565b61354790600a615d38565b6135519084615d43565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa15801561359b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135bf9190615d5a565b6135ca90600a615d7a565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015613614573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136389190615d5a565b61364390600a615d7a565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa15801561368d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136b191906154aa565b6136bb9190615d43565b613e33565b5f6136dd836136cf8685613e3f565b670de0b6b3a7640000613e33565b949350505050565b610f0c8133613e52565b5f5f80516020615e2183398151915261370884846126bf565b613787575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561373d3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610d00565b5f915050610d00565b5092915050565b5f5f80516020615e218339815191526137b084846126bf565b15613787575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610d00565b613818613e8b565b5f80516020615e41833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806138f557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166138e95f80516020615e01833981519152546001600160a01b031690565b6001600160a01b031614155b156134155760405163703e46dd60e11b815260040160405180910390fd5b5f61391e8133613417565b611b9c5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561399e575060408051601f3d908101601f1916820190925261399b918101906154aa565b60015b6139c657604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e08565b5f80516020615e0183398151915281146139f657604051632a87526960e21b815260048101829052602401610e08565b6115038383613eba565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146134155760405163703e46dd60e11b815260040160405180910390fd5b613a516133e5565b5f80516020615e41833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833613851565b613415613f0f565b613aa1613f0f565b613415613f58565b60198301805460ff60a01b1916600160a01b179055601a830154604080516318160ddd60e01b815290516060925f926001600160a01b03909116916318160ddd916004808201926020929091908290030181865afa158015613b0d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613b3191906154aa565b90505f85600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613bad91906154aa565b9050836001600160401b03811115613bc757613bc7614381565b604051908082528060200260200182016040528015613bfa57816020015b6060815260200190600190039081613be55790505b5092505f5b84811015613c8d57613c6830878784818110613c1d57613c1d615d88565b9050602002810190613c2f9190615d9c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613f7892505050565b848281518110613c7a57613c7a615d88565b6020908102919091010152600101613bff565b50601a860154604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015613cd7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613cfb91906154aa565b90505f87600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d53573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d7791906154aa565b60405163111a6a5d60e31b8152600481018a90526024810186905260448101859052606481018490526084810182905290915073__$bfec599912fc5b0c81449b9d06b4dcb311$",
    "sourceMap": "3695:13121:122:-:0;;;1171:4:60;1128:48;;4548:53:122;;;;;;;;;-1:-1:-1;4572:22:122;:20;:22::i;:::-;3695:13121;;7711:422:59;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:59;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:59;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:59;-1:-1:-1;;;;;8035:33:59;;;;;8087:29;;158:50:182;;;8087:29:59;;146:2:182;131:18;8087:29:59;;;;;;;7981:146;7760:373;7711:422::o;14:200:182:-;3695:13121:122;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/market/libraries/CapsLibrary.sol": {
        "CapsLibrary": [
          { "start": 5082, "length": 20 },
          { "start": 6928, "length": 20 },
          { "start": 16044, "length": 20 }
        ]
      },
      "src/market/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 4371, "length": 20 },
          { "start": 7961, "length": 20 },
          { "start": 8122, "length": 20 },
          { "start": 9254, "length": 20 },
          { "start": 11155, "length": 20 }
        ]
      },
      "src/market/libraries/OfferLibrary.sol": {
        "OfferLibrary": [
          { "start": 5290, "length": 20 },
          { "start": 13289, "length": 20 }
        ]
      },
      "src/market/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 4979, "length": 20 },
          { "start": 5859, "length": 20 },
          { "start": 6194, "length": 20 },
          { "start": 6669, "length": 20 },
          { "start": 11598, "length": 20 },
          { "start": 11671, "length": 20 },
          { "start": 12265, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 7785, "length": 20 },
          { "start": 7884, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 4715, "length": 20 },
          { "start": 4817, "length": 20 },
          { "start": 5444, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 12438, "length": 20 },
          { "start": 12537, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 5969, "length": 20 },
          { "start": 6068, "length": 20 }
        ]
      },
      "src/market/libraries/actions/CopyLimitOrders.sol": {
        "CopyLimitOrders": [
          { "start": 9987, "length": 20 },
          { "start": 10086, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 13346, "length": 20 },
          { "start": 13445, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 10425, "length": 20 },
          { "start": 10558, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 11917, "length": 20 },
          { "start": 12016, "length": 20 },
          { "start": 12141, "length": 20 }
        ]
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 6452, "length": 20 },
          { "start": 6554, "length": 20 },
          { "start": 6812, "length": 20 }
        ]
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "PartialRepay": [
          { "start": 3613, "length": 20 },
          { "start": 3712, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 9733, "length": 20 },
          { "start": 9831, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 7592, "length": 20 },
          { "start": 7726, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 7351, "length": 20 },
          { "start": 7450, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5701, "length": 20 },
          { "start": 11332, "length": 20 },
          { "start": 11434, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 4134, "length": 20 },
          { "start": 4233, "length": 20 }
        ]
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3872, "length": 20 },
          { "start": 3971, "length": 20 },
          { "start": 4595, "length": 20 },
          { "start": 9488, "length": 20 },
          { "start": 9620, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 12596, "length": 20 },
          { "start": 12695, "length": 20 }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103c9575f3560e01c80635cbc51eb116101f4578063b5ec748711610113578063e5af06ce116100a8578063f7e7d1fd11610078578063f7e7d1fd14610c45578063f85c3cd414610c64578063fa7a5b1014610c83578063fa823af514610caa578063fd17174a14610cbd575f80fd5b8063e5af06ce14610bed578063f052e7a414610c0c578063f45bf01c14610c1f578063f54ae18b14610c32575f80fd5b8063ccd8d4d1116100e3578063ccd8d4d114610b95578063d547741f14610ba8578063d8d933a514610bc7578063e05001f514610bda575f80fd5b8063b5ec748714610b18578063c73d983314610b44578063ca40742c14610b57578063ccc9681514610b76575f80fd5b80638628babd11610189578063a475207611610159578063a475207614610a7d578063ac9650d814610a9c578063ad3cb1cc14610abc578063b36116f614610aec575f80fd5b80638628babd14610a255780638e57277614610a3857806391d1485414610a4b578063a217fddf14610a6a575f80fd5b80637c90a6ca116101c45780637c90a6ca1461095e5780637dc0d1d0146109bd5780637f417c06146109fe5780638456cb5914610a11575f80fd5b80635cbc51eb146107c357806364eb0a71146107ef57806373d4a13a1461080e57806376c1b82f14610932575f80fd5b80632ed28ba2116102eb5780634cbd882c11610280578063536b9c7911610250578063536b9c791461072657806353e043d41461073957806354137c7e1461074c57806354fd4d501461076b5780635c975abb146107a0575f80fd5b80634cbd882c146106cd5780634f1ef286146106ec5780634fd9a8a5146106ff57806352d1902d14610712575f80fd5b806337501921116102bb57806337501921146106675780633ae6d7c3146106935780633e3c119b146106a65780633f4ba83a146106b9575f80fd5b80632ed28ba2146105ea5780632f2ff15d1461061657806336568abe146106355780633746f85814610654575f80fd5b80631ca3b0cb116103615780632b4c9a20116103315780632b4c9a20146105865780632c60185c146105995780632cc884c5146105b85780632e106f21146105d7575f80fd5b80631ca3b0cb146104c75780631e5eb1d0146104f05780631fcd4a3414610554578063248a9ca314610567575f80fd5b8063134f3f961161039c578063134f3f96146104485780631970e5ea1461045b57806319a7359b146104885780631c4fd41c1461049b575f80fd5b806301ffc9a7146103cd57806302f2855a146104015780630317b9df146104165780630cf8542f14610435575b5f80fd5b3480156103d8575f80fd5b506103ec6103e73660046142e9565b610cd0565b60405190151581526020015b60405180910390f35b61041461040f366004614326565b610d06565b005b348015610421575f80fd5b50610414610430366004614350565b610ddb565b610414610443366004614326565b610edf565b610414610456366004614598565b610f0f565b348015610466575f80fd5b5061047a610475366004614616565b610fb5565b6040519081526020016103f8565b61041461049636600461462d565b610fc0565b3480156104a6575f80fd5b506104ba6104b5366004614616565b610ff4565b6040516103f8919061463d565b3480156104d2575f80fd5b506104db61106f565b604080519283526020830191909152016103f8565b3480156104fb575f80fd5b506105046110a2565b6040516103f89190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b61041461056236600461472b565b611154565b348015610572575f80fd5b5061047a610581366004614616565b6112fc565b610414610594366004614326565b61131c565b3480156105a4575f80fd5b5061047a6105b3366004614746565b611349565b3480156105c3575f80fd5b5061047a6105d2366004614766565b61137c565b6104146105e5366004614790565b611407565b3480156105f5575f80fd5b506106096106043660046147c6565b61142d565b6040516103f8919061480e565b348015610621575f80fd5b5061041461063036600461486d565b6114ae565b348015610640575f80fd5b5061041461064f36600461486d565b6114d0565b610414610662366004614350565b611508565b348015610672575f80fd5b506106866106813660046147c6565b61152e565b6040516103f8919061489b565b6104146106a136600461491f565b6115af565b6104db6106b436600461495d565b6117ca565b3480156106c4575f80fd5b50610414611a62565b3480156106d8575f80fd5b506104146106e736600461496d565b611abb565b6104146106fa366004614993565b611b81565b61041461070d366004614b9e565b611ba0565b34801561071d575f80fd5b5061047a611c46565b610414610734366004614c0e565b611c61565b610414610747366004614b9e565b611d52565b348015610757575f80fd5b5061047a610766366004614616565b611df8565b348015610776575f80fd5b5060408051808201909152600481526376312e3760e01b60208201525b6040516103f89190614cac565b3480156107ab575f80fd5b505f80516020615e418339815191525460ff166103ec565b3480156107ce575f80fd5b506107e26107dd366004614cbe565b611ee4565b6040516103f89190614da7565b3480156107fa575f80fd5b506103ec610809366004614616565b6122f6565b348015610819575f80fd5b506108c160408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e09283015190911691810191909152610100016103f8565b34801561093d575f80fd5b5061095161094c366004614616565b612302565b6040516103f89190614e49565b348015610969575f80fd5b506109726123c8565b6040516103f891905f60c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b3480156109c8575f80fd5b506109d161246c565b6040805182516001600160a01b031681526020928301516001600160401b031692810192909252016103f8565b610414610a0c366004614e57565b6124ef565b348015610a1c575f80fd5b50610414612593565b610414610a33366004614f25565b6125ec565b610414610a46366004614326565b612692565b348015610a56575f80fd5b506103ec610a6536600461486d565b6126bf565b348015610a75575f80fd5b5061047a5f81565b348015610a88575f80fd5b50610414610a97366004614f69565b6126f5565b610aaf610aaa366004614fd3565b61297a565b6040516103f89190615041565b348015610ac7575f80fd5b50610793604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610af7575f80fd5b50610b0b610b06366004614cbe565b61298f565b6040516103f891906150d3565b348015610b23575f80fd5b50610b37610b32366004614616565b612a47565b6040516103f8919061510b565b610414610b5236600461472b565b612b2d565b348015610b62575f80fd5b5061047a610b71366004614cbe565b612c70565b348015610b81575f80fd5b506103ec610b90366004614616565b612cf3565b610414610ba3366004614350565b612cfe565b348015610bb3575f80fd5b50610414610bc236600461486d565b612d24565b610414610bd53660046147c6565b612d40565b61047a610be8366004614326565b612d75565b348015610bf8575f80fd5b506103ec610c07366004614616565b612eca565b610414610c1a36600461513f565b612f45565b610414610c2d366004615160565b612f72565b610414610c403660046151ed565b61301d565b348015610c50575f80fd5b50610414610c5f366004614cbe565b6130c3565b348015610c6f575f80fd5b5061047a610c7e366004614766565b6132bb565b348015610c8e575f80fd5b50601c546040516001600160a01b0390911681526020016103f8565b610414610cb83660046151ed565b61330b565b610414610ccb366004615160565b6133b1565b5f6001600160e01b03198216637965db0b60e01b1480610d0057506301ffc9a760e01b6001600160e01b03198316145b92915050565b610d0e6133e5565b604051635fed4de960e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__90635fed4de990610d47905f908590600401615207565b5f6040518083038186803b158015610d5d575f80fd5b505af4158015610d6f573d5f803e3d5ffd5b505060405163d96aec4360e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__925063d96aec439150610dac905f908590600401615207565b5f6040518083038186803b158015610dc2575f80fd5b505af4158015610dd4573d5f803e3d5ffd5b5050505050565b5f610de68133613417565b610e115760405163e2517d3f60e01b8152336004820152602481018290526044015b60405180910390fd5b60405163e57980dd60e01b815273__$72c16261390208f563094e6a4fc9f74031$__9063e57980dd90610e4a905f908690600401615249565b5f6040518083038186803b158015610e60575f80fd5b505af4158015610e72573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$72c16261390208f563094e6a4fc9f74031$__9250634752b3b39150610eaf905f908690600401615249565b5f6040518083038186803b158015610ec5575f80fd5b505af4158015610ed7573d5f803e3d5ffd5b505050505050565b610f0c604051806040016040528083803603810190610efe91906152cd565b81523360209091015261330b565b50565b610f176133e5565b6040516333d4ade560e01b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__906333d4ade590610f50905f9085906004016152e7565b5f6040518083038186803b158015610f66575f80fd5b505af4158015610f78573d5f803e3d5ffd5b505060405163178bcac760e11b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__9250632f17958e9150610dac905f9085906004016152e7565b5f610d0081836134c0565b610f0c604051806060016040528083803603810190610fdf91906147c6565b81523360208201819052604090910152611154565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$674c94602fbdb88ca53d9ba4295c8813fa$__90637d62a7e090604401602060405180830381865af415801561104b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615357565b6011545f908190611081908290615389565b61108d60025f1961539c565b60125461109a9190615389565b915091509091565b6110de6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__906386617e779060240160c060405180830381865af415801561112b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f91906153bb565b905090565b61115c6133e5565b604051631e55c20b60e31b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9063f2ae105890611195905f908590600401615495565b5f6040518083038186803b1580156111ab575f80fd5b505af41580156111bd573d5f803e3d5ffd5b5050604051630f6470bd60e01b81525f925073__$909b104b05b98ab9b02bd00c4a2f54926d$__9150630f6470bd906111fc9084908690600401615495565b602060405180830381865af4158015611217573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123b91906154aa565b8251602001519091506001016112be578151516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb6906044015b5f6040518083038186803b1580156112a7575f80fd5b505af41580156112b9573d5f803e3d5ffd5b505050505b60405163bfbfe8ab60e01b81525f60048201526024810182905273__$bfec599912fc5b0c81449b9d06b4dcb311$__9063bfbfe8ab90604401610eaf565b5f9081525f80516020615e21833981519152602052604090206001015490565b610f0c60405180604001604052808380360381019061133b91906152cd565b81523360209091015261301d565b5f815f0361136a576040516301c85f6760e71b815260040160405180910390fd5b6113755f84846136c0565b9392505050565b60405163327ad2cd60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__9063327ad2cd906064015b602060405180830381865af41580156113e3573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137591906154aa565b610f0c60405180604001604052808361141f906154c1565b815233602090910152610f0f565b61143561411d565b604051631c81982560e11b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__90633903304a9061146e905f9086906004016154cc565b61014060405180830381865af415801561148a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615537565b6114b7826112fc565b6114c0816136e5565b6114ca83836136ef565b50505050565b6001600160a01b03811633146114f95760405163334bd91960e11b815260040160405180910390fd5b6115038282613797565b505050565b610f0c604051806040016040528083611520906155af565b815233602090910152611d52565b611536614163565b60405163301d1d1560e21b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063c07474549061156f905f9086906004016154cc565b61012060405180830381865af415801561158b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0091906155ba565b6115b76133e5565b602081015160405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af415801561161b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061163f91906154aa565b60405163f9c417bd60e01b815290915073__$7fa168b5d238863382c2bf886894022425$__9063f9c417bd9061167b905f90879060040161561c565b5f6040518083038186803b158015611691575f80fd5b505af41580156116a3573d5f803e3d5ffd5b5050604051634971bf9960e01b815273__$7fa168b5d238863382c2bf886894022425$__9250634971bf9991506116e0905f90879060040161561c565b5f6040518083038186803b1580156116f6575f80fd5b505af4158015611708573d5f803e3d5ffd5b505060405163046dbd1360e11b81525f600482018190526001600160a01b0386166024830152925073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__91506308db7a2690604401602060405180830381865af415801561176b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061178f91906154aa565b90508181116114ca5760405163625a84dd60e01b81526001600160a01b03841660048201526024810183905260448101829052606401610e08565b5f806117d46133e5565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab6117ff8133613417565b6118255760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b604051639f53ee0f60e01b815273__$d00168f5747027b5a56099c751031d7e40$__90639f53ee0f9061185e905f908890600401615697565b5f6040518083038186803b158015611874575f80fd5b505af4158015611886573d5f803e3d5ffd5b505060405163647a4b7560e11b81525f925073__$d00168f5747027b5a56099c751031d7e40$__915063c8f496ea906118c59084908990600401615697565b606060405180830381865af41580156118e0573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061190491906156ab565b9095509350905073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__632d77afb65f6119366040890160208a01614cbe565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b158015611979575f80fd5b505af415801561198b573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$d00168f5747027b5a56099c751031d7e40$__9250636e6595c191506119ca905f90899089906004016156d6565b5f6040518083038186803b1580156119e0575f80fd5b505af41580156119f2573d5f803e3d5ffd5b505060405163bfbfe8ab60e01b81525f60048201526024810184905273__$bfec599912fc5b0c81449b9d06b4dcb311$__925063bfbfe8ab91506044015f6040518083038186803b158015611a45575f80fd5b505af4158015611a57573d5f803e3d5ffd5b505050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611a8d8133613417565b611ab35760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b610f0c613810565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd24038611ae68133613417565b611b0c5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611b8961386f565b611b9282613913565b611b9c8282613944565b5050565b611ba86133e5565b604051637125eda960e11b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__9063e24bdb5290611be1905f9085906004016157ab565b5f6040518083038186803b158015611bf7575f80fd5b505af4158015611c09573d5f803e3d5ffd5b505060405163184d91f360e31b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__925063c26c8f989150610dac905f9085906004016157ab565b5f611c4f613a00565b505f80516020615e0183398151915290565b611c696133e5565b604080516325f2df6f60e01b81525f6004820152825151602482015260208301516001600160a01b03908116604483015291830151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__906325f2df6f906084015f6040518083038186803b158015611cdb575f80fd5b505af4158015611ced573d5f803e3d5ffd5b5050604080516330e78a9160e11b81525f6004820152845151602482015260208501516001600160a01b03908116604483015291850151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__92506361cf15229150608401610dac565b611d5a6133e5565b604051632d0c1e8b60e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__90632d0c1e8b90611d93905f9085906004016157ab565b5f6040518083038186803b158015611da9575f80fd5b505af4158015611dbb573d5f803e3d5ffd5b505060405163c0c66ed960e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__925063c0c66ed99150610dac905f9085906004016157ab565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015611e51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e7591906154aa565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$674c94602fbdb88ca53d9ba4295c8813fa$__906345ffd36d906113c8905f9085906004016157c3565b611eec61419a565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611f7e57602002820191905f5260205f20905b815481526020019060010190808311611f6a575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611fd457602002820191905f5260205f20905b815481526020019060010190808311611fc0575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561202a57602002820191905f5260205f20905b815481526020019060010190808311612016575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f82018054806020026020016040519081016040528092919081815260200182805480156120b057602002820191905f5260205f20905b81548152602001906001019080831161209c575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561210657602002820191905f5260205f20905b8154815260200190600101908083116120f2575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561215c57602002820191905f5260205f20905b815481526020019060010190808311612148575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa1580156121e2573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061220691906154aa565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015612256573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061227a91906154aa565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa1580156122ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122ee91906154aa565b905292915050565b6011545f908210610d00565b61230a6141d4565b604051633978289f60e01b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90633978289f90604401602060405180830381865af415801561235e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061238291906154aa565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b6123fb6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063dd378fd69060240160c060405180830381865af4158015612448573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f91906157fe565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063d72f4008906024016040805180830381865af41580156124cb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f919061586a565b6124f76133e5565b6040516210aa0b60e31b815273__$45d7492db284be01938913cb41b9cac2a6$__90628550589061252e905f90859060040161589d565b5f6040518083038186803b158015612544575f80fd5b505af4158015612556573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$45d7492db284be01938913cb41b9cac2a6$__92506364140a839150610dac905f90859060040161589d565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6125be8133613417565b6125e45760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b610f0c613a49565b6125f46133e5565b6040516315868ea760e21b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__9063561a3a9c9061262d905f9085906004016158d5565b5f6040518083038186803b158015612643575f80fd5b505af4158015612655573d5f803e3d5ffd5b50506040516389e70deb60e01b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__92506389e70deb9150610dac905f9085906004016158d5565b610f0c6040518060400160405280838036038101906126b1919061592f565b8152336020909101526115af565b5f9182525f80516020615e21833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f811580156127395750825b90505f826001600160401b031660011480156127545750303b155b905081158015612762575080155b156127805760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156127aa57845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__906369777eb9906127eb905f908e908e908e908e908e90600401615a62565b5f6040518083038186803b158015612801575f80fd5b505af4158015612813573d5f803e3d5ffd5b5050505061281f613a91565b612827613a99565b61282f613a91565b604051632ffdac7160e21b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__9063bff6b1c49061286e905f908d908d908d908d90600401615aec565b5f6040518083038186803b158015612884575f80fd5b505af4158015612896573d5f803e3d5ffd5b505050506128a65f801b8b6136ef565b506128d17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b6136ef565b506128fc7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b6136ef565b506129277f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b6136ef565b50831561296e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b60606129846133e5565b6113755f8484613aa9565b612997614203565b506001600160a01b039081165f908152601b602090815260409182902082516060808201855282549095168152835160a08082018652600184015482526002840154828601526003840154828701526004840154828801526005840154608080840191909152838601929092528551908101865260068401548152600784015494810194909452600883015484860152600983015495840195909552600a90910154938201939093529082015290565b612a7760405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015612acb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612aef91906154aa565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b612b356133e5565b60405163160b9e6b60e31b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063b05cf35890612b6e905f908590600401615495565b5f6040518083038186803b158015612b84575f80fd5b505af4158015612b96573d5f803e3d5ffd5b5050604051639f46aa4160e01b81525f925073__$c58e2605104bb31274ad8c04841b6a7550$__9150639f46aa4190612bd59084908690600401615495565b602060405180830381865af4158015612bf0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612c1491906154aa565b8251602001519091506001016112be5760208201516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401611291565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af4158015612ccf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0091906154aa565b5f610d008183613e10565b610f0c604051806040016040528083612d16906155af565b815233602090910152611ba0565b612d2d826112fc565b612d36816136e5565b6114ca8383613797565b610f0c6040518060600160405280838152602001336001600160a01b03168152602001336001600160a01b0316815250612b2d565b5f612d7e6133e5565b6040516320b5435f60e11b815273__$04d32033081e1e9356971d8f4b5098bcad$__9063416a86be90612db7905f908690600401615b65565b5f6040518083038186803b158015612dcd575f80fd5b505af4158015612ddf573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$04d32033081e1e9356971d8f4b5098bcad$__925063341a672c9150612e1c905f908690600401615b65565b602060405180830381865af4158015612e37573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e5b91906154aa565b60405163489d188160e01b815290915073__$04d32033081e1e9356971d8f4b5098bcad$__9063489d188190612e99905f9086908690600401615b8d565b5f6040518083038186803b158015612eaf575f80fd5b505af4158015612ec1573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__9063325191d290604401602060405180830381865af4158015612f21573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615bc3565b610f0c604051806040016040528083803603810190612f649190615bde565b8152336020909101526125ec565b612f7a6133e5565b604051635792057f60e11b81525f60048201528135602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__9063af240afe906044015f6040518083038186803b158015612fc9575f80fd5b505af4158015612fdb573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__92506341d373f29150604401610dac565b6130256133e5565b604051631005beb160e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__9063802df5889061305e905f908590600401615bf9565b5f6040518083038186803b158015613074575f80fd5b505af4158015613086573d5f803e3d5ffd5b5050604051631cc17ae560e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__925063e60bd7289150610dac905f908590600401615bf9565b5f6130ce8133613417565b6130f45760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0080546129cc9190600160401b900460ff168061313e575080546001600160401b03808416911610155b1561315c5760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b03831617600160401b1781556001600160a01b0384166131a45760405163de0ce17d60e01b815260040160405180910390fd5b601c546001600160a01b0316156131ce5760405163f1b06c8d60e01b815260040160405180910390fd5b6040516337649a6d60e11b81523060048201526001600160a01b03851690636ec934da90602401602060405180830381865afa158015613210573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132349190615bc3565b6132535760405163e2a7bea360e01b8152306004820152602401610e08565b601c80546001600160a01b0319166001600160a01b038616179055805460ff60401b191681556040516001600160401b03831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b6040516333c7c71f60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__906333c7c71f906064016113c8565b6133136133e5565b60405163024889b160e51b815273__$d49e499a4608ab3aca09b91fe5950492b6$__9063491136209061334c905f908590600401615bf9565b5f6040518083038186803b158015613362575f80fd5b505af4158015613374573d5f803e3d5ffd5b505060405163a083c0ab60e01b815273__$d49e499a4608ab3aca09b91fe5950492b6$__925063a083c0ab9150610dac905f908590600401615bf9565b610f0c6040518060600160405280838036038101906133d09190615c3e565b81523360208201819052604090910152611c61565b5f80516020615e418339815191525460ff16156134155760405163d93c066560e01b815260040160405180910390fd5b565b5f61342283836126bf565b1561342f57506001610d00565b601c546001600160a01b031661344657505f610d00565b601c54604051632474521560e21b8152600481018590526001600160a01b038481166024830152909116906391d1485490604401602060405180830381865afa158015613495573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134b99190615bc3565b9050610d00565b5f61137583600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613518573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061353c91906154aa565b61354790600a615d38565b6135519084615d43565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa15801561359b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135bf9190615d5a565b6135ca90600a615d7a565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015613614573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136389190615d5a565b61364390600a615d7a565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa15801561368d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136b191906154aa565b6136bb9190615d43565b613e33565b5f6136dd836136cf8685613e3f565b670de0b6b3a7640000613e33565b949350505050565b610f0c8133613e52565b5f5f80516020615e2183398151915261370884846126bf565b613787575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561373d3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610d00565b5f915050610d00565b5092915050565b5f5f80516020615e218339815191526137b084846126bf565b15613787575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610d00565b613818613e8b565b5f80516020615e41833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806138f557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166138e95f80516020615e01833981519152546001600160a01b031690565b6001600160a01b031614155b156134155760405163703e46dd60e11b815260040160405180910390fd5b5f61391e8133613417565b611b9c5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561399e575060408051601f3d908101601f1916820190925261399b918101906154aa565b60015b6139c657604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e08565b5f80516020615e0183398151915281146139f657604051632a87526960e21b815260048101829052602401610e08565b6115038383613eba565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146134155760405163703e46dd60e11b815260040160405180910390fd5b613a516133e5565b5f80516020615e41833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833613851565b613415613f0f565b613aa1613f0f565b613415613f58565b60198301805460ff60a01b1916600160a01b179055601a830154604080516318160ddd60e01b815290516060925f926001600160a01b03909116916318160ddd916004808201926020929091908290030181865afa158015613b0d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613b3191906154aa565b90505f85600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613bad91906154aa565b9050836001600160401b03811115613bc757613bc7614381565b604051908082528060200260200182016040528015613bfa57816020015b6060815260200190600190039081613be55790505b5092505f5b84811015613c8d57613c6830878784818110613c1d57613c1d615d88565b9050602002810190613c2f9190615d9c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613f7892505050565b848281518110613c7a57613c7a615d88565b6020908102919091010152600101613bff565b50601a860154604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015613cd7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613cfb91906154aa565b90505f87600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d53573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d7791906154aa565b60405163111a6a5d60e31b8152600481018a90526024810186905260448101859052606481018490526084810182905290915073__$bfec599912fc5b0c81449b9d06b4dcb311$__906388d352e89060a4015f6040518083038186803b158015613ddf575f80fd5b505af4158015613df1573d5f803e3d5ffd5b5050506019909801805460ff60a01b1916905550929695505050505050565b5f613e1d60025f1961539c565b8210158015611375575050601291909101541190565b5f6136dd848484613fea565b81545f9061137590836301e13380613e33565b613e5c82826126bf565b611b9c5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610e08565b5f80516020615e418339815191525460ff1661341557604051638dfc202b60e01b815260040160405180910390fd5b613ec382614016565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115613f07576115038282613f78565b611b9c614079565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661341557604051631afcd79f60e31b815260040160405180910390fd5b613f60613f0f565b5f80516020615e41833981519152805460ff19169055565b60605f80846001600160a01b031684604051613f949190615de5565b5f60405180830381855af49150503d805f8114613fcc576040519150601f19603f3d011682016040523d82523d5f602084013e613fd1565b606091505b5091509150613fe1858383614098565b95945050505050565b5f825f1904841183021582026140075763ad251c275f526004601cfd5b50910281810615159190040190565b806001600160a01b03163b5f0361404b57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e08565b5f80516020615e0183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b34156134155760405163b398979f60e01b815260040160405180910390fd5b6060826140ad576140a8826140f4565b611375565b81511580156140c457506001600160a01b0384163b155b156140ed57604051639996b31560e01b81526001600160a01b0385166004820152602401610e08565b5080611375565b8051156141045780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060e001604052806141306141d4565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060c001604052806141766141d4565b81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060a001604052806141ad614281565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81525090565b60405180608001604052805f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b60405180606001604052805f6001600160a01b0316815260200161424a6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b815260200161427c6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b905290565b60405180608001604052806142946142b4565b81526020016142a16142b4565b81525f6020820181905260409091015290565b60405180604001604052805f815260200161427c60405180606001604052806060815260200160608152602001606081525090565b5f602082840312156142f9575f80fd5b81356001600160e01b031981168114611375575f80fd5b5f60608284031215614320575f80fd5b50919050565b5f60608284031215614336575f80fd5b6113758383614310565b5f60408284031215614320575f80fd5b5f60208284031215614360575f80fd5b81356001600160401b03811115614375575f80fd5b6136dd84828501614340565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156143b7576143b7614381565b60405290565b604080519081016001600160401b03811182821017156143b7576143b7614381565b60405160e081016001600160401b03811182821017156143b7576143b7614381565b604051606081016001600160401b03811182821017156143b7576143b7614381565b60405160c081016001600160401b03811182821017156143b7576143b7614381565b604051601f8201601f191681016001600160401b038111828210171561446d5761446d614381565b604052919050565b8015158114610f0c575f80fd5b5f6001600160401b0382111561449a5761449a614381565b5060051b60200190565b5f82601f8301126144b3575f80fd5b813560206144c86144c383614482565b614445565b8083825260208201915060208460051b8701019350868411156144e9575f80fd5b602086015b8481101561450557803583529183019183016144ee565b509695505050505050565b5f60808284031215614520575f80fd5b614528614395565b905081358152602082013561453c81614475565b6020820152604082013561454f81614475565b604082015260608201356001600160401b0381111561456c575f80fd5b614578848285016144a4565b60608301525092915050565b6001600160a01b0381168114610f0c575f80fd5b5f602082840312156145a8575f80fd5b81356001600160401b03808211156145be575f80fd5b90830190604082860312156145d1575f80fd5b6145d96143bd565b8235828111156145e7575f80fd5b6145f387828601614510565b8252506020830135925061460683614584565b6020810192909252509392505050565b5f60208284031215614626575f80fd5b5035919050565b5f60e08284031215614320575f80fd5b602081016003831061465d57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60e08284031215614673575f80fd5b61467b6143df565b9050813561468881614584565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c08201356146cc81614475565b60c082015292915050565b5f61012082840312156146e8575f80fd5b6146f0614401565b90506146fc8383614663565b815260e082013561470c81614584565b602082015261010082013561472081614584565b604082015292915050565b5f610120828403121561473c575f80fd5b61137583836146d7565b5f8060408385031215614757575f80fd5b50508035926020909101359150565b5f8060408385031215614777575f80fd5b823561478281614584565b946020939093013593505050565b5f602082840312156147a0575f80fd5b81356001600160401b038111156147b5575f80fd5b820160808185031215611375575f80fd5b5f60e082840312156147d6575f80fd5b6113758383614663565b80516001600160a01b0316825260208082015115159083015260408082015190830152606090810151910152565b5f610140820190506148218284516147e0565b60018060a01b036020840151166080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015260c083015161012083015292915050565b5f806040838503121561487e575f80fd5b82359150602083013561489081614584565b809150509250929050565b5f610120820190506148ae8284516147e0565b60208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015292915050565b5f606082840312156148f7575f80fd5b6148ff614401565b905081358152602082013560208201526040820135604082015292915050565b5f6080828403121561492f575f80fd5b6149376143bd565b61494184846148e7565b8152606083013561495181614584565b60208201529392505050565b5f60a08284031215614320575f80fd5b5f6020828403121561497d575f80fd5b81356001600160801b0381168114611375575f80fd5b5f80604083850312156149a4575f80fd5b82356149af81614584565b91506020838101356001600160401b03808211156149cb575f80fd5b818601915086601f8301126149de575f80fd5b8135818111156149f0576149f0614381565b614a02601f8201601f19168501614445565b91508082528784828501011115614a17575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f60408284031215614a44575f80fd5b614a4c6143bd565b9050813581526020808301356001600160401b0380821115614a6c575f80fd5b9084019060608287031215614a7f575f80fd5b614a87614401565b823582811115614a95575f80fd5b614aa1888286016144a4565b8252508383013582811115614ab4575f80fd5b8301601f81018813614ac4575f80fd5b8035614ad26144c382614482565b81815260059190911b8201860190868101908a831115614af0575f80fd5b928701925b82841015614b0e57833582529287019290870190614af5565b84880152505050604083013582811115614b26575f80fd5b614b32888286016144a4565b60408301525080848601525050505092915050565b5f60408284031215614b57575f80fd5b614b5f6143bd565b905081356001600160401b03811115614b76575f80fd5b614b8284828501614a34565b8252506020820135614b9381614584565b602082015292915050565b5f60208284031215614bae575f80fd5b81356001600160401b03811115614bc3575f80fd5b6136dd84828501614b47565b5f60208284031215614bdf575f80fd5b604051602081018181106001600160401b0382111715614c0157614c01614381565b6040529135825250919050565b5f60608284031215614c1e575f80fd5b614c26614401565b614c308484614bcf565b81526020830135614c4081614584565b60208201526040830135614c5381614584565b60408201529392505050565b5f5b83811015614c79578181015183820152602001614c61565b50505f910152565b5f8151808452614c98816020860160208601614c5f565b601f01601f19169290920160200192915050565b602081525f6113756020830184614c81565b5f60208284031215614cce575f80fd5b813561137581614584565b5f815180845260208085019450602084015f5b83811015614d0857815187529582019590820190600101614cec565b509495945050505050565b805182525f602080830151604082860152805160606040870152614d3a60a0870182614cd9565b83830151603f19888303810160608a0152815180845291860193505f929091908601905b80841015614d7e5784518252938601936001939093019290860190614d5e565b5060408501519550818982030160808a0152614d9a8187614cd9565b9998505050505050505050565b602081525f825160a060208401528051608060c0850152614dcc610140850182614d13565b9050602082015160bf198583030160e0860152614de98282614d13565b91505060408201516101008501526060820151151561012085015260208501519150614e2060408501836001600160a01b03169052565b6040850151606085015260608501516080850152608085015160a0850152809250505092915050565b60808101610d0082846147e0565b5f60408284031215614e67575f80fd5b6113758383614340565b5f60a08284031215614e81575f80fd5b60405160a081018181106001600160401b0382111715614ea357614ea3614381565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b5f6101608284031215614eef575f80fd5b614ef7614401565b90508135614f0481614584565b8152614f138360208401614e71565b60208201526147208360c08401614e71565b5f6101808284031215614f36575f80fd5b614f3e6143bd565b614f488484614ede565b815261016083013561495181614584565b5f60c08284031215614320575f80fd5b5f805f805f6102a08688031215614f7e575f80fd5b8535614f8981614584565b9450614f988760208801614f59565b9350614fa78760e08801614f59565b9250614fb7876101a08801614340565b9150614fc7876101e08801614f59565b90509295509295909350565b5f8060208385031215614fe4575f80fd5b82356001600160401b0380821115614ffa575f80fd5b818501915085601f83011261500d575f80fd5b81358181111561501b575f80fd5b8660208260051b850101111561502f575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561509657603f19888603018452615084858351614c81565b94509285019290850190600101615068565b5092979650505050505050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b81516001600160a01b031681526020808301516101608301916150f8908401826150a3565b50604083015161379060c08401826150a3565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015260808101610d00565b5f6101608284031215614320575f80fd5b5f60208284031215614320575f80fd5b5f60208284031215615170575f80fd5b6113758383615150565b5f6060828403121561518a575f80fd5b615192614401565b9050813561519f81614584565b815260208281013590820152604082013561472081614584565b5f608082840312156151c9575f80fd5b6151d16143bd565b90506151dd838361517a565b81526060820135614b9381614584565b5f608082840312156151fd575f80fd5b61137583836151b9565b5f6080820190508382528235602083015260208301356040830152604083013561523081614584565b6001600160a01b03166060929092019190915292915050565b828152604060208201525f8235601e19843603018112615267575f80fd5b83016020810190356001600160401b03811115615282575f80fd5b803603821315615290575f80fd5b604080850152806080850152808260a08601375f60a082860101526020850135606085015260a0601f19601f830116850101925050509392505050565b5f606082840312156152dd575f80fd5b611375838361517a565b828152604060208201525f8251604080840152805160808401526020810151151560a08401526040810151151560c084015260608101519050608060e0840152615335610100840182614cd9565b602094909401516001600160a01b031660609390930192909252509092915050565b5f60208284031215615367575f80fd5b815160038110611375575f80fd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610d0057610d00615375565b5f826153b657634e487b7160e01b5f52601260045260245ffd5b500490565b5f60c082840312156153cb575f80fd5b6153d3614423565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015161540d81614584565b60a08201529392505050565b80516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a0818101519083015260c0908101511515910152565b615470828251615419565b60208101516001600160a01b0390811660e08401526040909101511661010090910152565b82815261014081016113756020830184615465565b5f602082840312156154ba575f80fd5b5051919050565b5f610d003683614510565b82815261010081016113756020830184615419565b5f608082840312156154f1575f80fd5b6154f9614395565b9050815161550681614584565b8152602082015161551681614475565b80602083015250604082015160408201526060820151606082015292915050565b5f6101408284031215615548575f80fd5b6155506143df565b61555a84846154e1565b8152608083015161556a81614584565b8060208301525060a0830151604082015260c0830151606082015260e0830151608082015261010083015160a082015261012083015160c08201528091505092915050565b5f610d003683614a34565b5f61012082840312156155cb575f80fd5b6155d3614423565b6155dd84846154e1565b81526080830151602082015260a0830151604082015260c0830151606082015260e0830151608082015261010083015160a08201528091505092915050565b918252805180516020808501919091528082015160408086019190915290910151606084015201516001600160a01b0316608082015260a00190565b80358252602081013561566a81614584565b6001600160a01b031660208301526040818101359083015260608082013590830152608090810135910152565b82815260c081016113756020830184615658565b5f805f606084860312156156bd575f80fd5b8351925060208401519150604084015190509250925092565b83815260e081016156ea6020830185615658565b8260c0830152949350505050565b5f8151604084528051604085015260208082015191506040606086015281516060608087015261572b60e0870182614cd9565b82840151607f19888303810160a08a0152815180845291850193505f929091908501905b8084101561576f578451825293850193600193909301929085019061574f565b5060408601519550818982030160c08a015261578b8187614cd9565b978501516001600160a01b03169890940197909752509395945050505050565b828152604060208201525f6136dd60408301846156f8565b82815260a08101611375602083018480516001600160a01b031682526020808201519083015260408082015190830152606090810151910152565b5f60c0828403121561580e575f80fd5b615816614423565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b6001600160401b0381168114610f0c575f80fd5b5f6040828403121561587a575f80fd5b6158826143bd565b825161588d81614584565b8152602083015161495181615856565b5f6060820190508382528235602083015260208301356158bc81614584565b6001600160a01b03166040929092019190915292915050565b5f6101a082019050838252825160018060a01b03808251166020850152602082015161590460408601826150a3565b506040820151915061591960e08501836150a3565b8060208601511661018085015250509392505050565b5f6060828403121561593f575f80fd5b61137583836148e7565b803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a081013561598381614584565b6001600160a01b031660a0929092019190915250565b80356159a481614584565b6001600160a01b0316825260208101356159bd81615856565b6001600160401b0381166020840152505050565b80356159dc81614584565b6001600160a01b0390811683526020820135906159f882614584565b9081166020840152604082013590615a0f82614584565b9081166040840152606082013590615a2682614584565b9081166060840152608082013590615a3d82614584565b908116608084015260a082013590615a5482614584565b80821660a085015250505050565b8681526001600160a01b03861660208201526102c08101615a866040830187615949565b8435610100830152602085013561012083015260408501356101408301526060850135610160830152608085013561018083015260a08501356101a0830152615ad36101c0830185615999565b615ae16102008301846159d1565b979650505050505050565b8581526102a08101615b016020830187615949565b843560e0830152602085013561010083015260408501356101208301526060850135610140830152608085013561016083015260a0850135610180830152615b4d6101a0830185615999565b615b5b6101e08301846159d1565b9695505050505050565b8281526080810161137560208301848035825260208082013590830152604090810135910152565b83815260a08101615bb560208301858035825260208082013590830152604090810135910152565b826080830152949350505050565b5f60208284031215615bd3575f80fd5b815161137581614475565b5f6101608284031215615bef575f80fd5b6113758383614ede565b82815260a081016113756020830184805180516001600160a01b0390811684526020808301518186015260409283015182169285019290925291015116606090910152565b5f60208284031215615c4e575f80fd5b6113758383614bcf565b600181815b80851115615c9257815f1904821115615c7857615c78615375565b80851615615c8557918102915b93841c9390800290615c5d565b509250929050565b5f82615ca857506001610d00565b81615cb457505f610d00565b8160018114615cca5760028114615cd457615cf0565b6001915050610d00565b60ff841115615ce557615ce5615375565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715615d13575081810a610d00565b615d1d8383615c58565b805f1904821115615d3057615d30615375565b029392505050565b5f6113758383615c9a565b8082028115828204841417610d0057610d00615375565b5f60208284031215615d6a575f80fd5b815160ff81168114611375575f80fd5b5f61137560ff841683615c9a565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e19843603018112615db1575f80fd5b8301803591506001600160401b03821115615dca575f80fd5b602001915036819003821315615dde575f80fd5b9250929050565b5f8251615df6818460208701614c5f565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a264697066735822122046d9ef5aa8818f5930725e8c88aeee9523fed021abc2ea3e493082ff272110c264736f6c63430008170033",
    "sourceMapi;:::-;;:::i;:::-;;;470:14:182;;463:22;445:41;;433:2;418:18;3443:202:56;;;;;;;;15429:199:122;;;;;;:::i;:::-;;:::i;:::-;;7360:259;;;;;;;;;;-1:-1:-1;7360:259:122;;;;;:::i;:::-;;:::i;8718:180::-;;;;;;:::i;:::-;;:::i;15930:311::-;;;;;;:::i;:::-;;:::i;2435:196:124:-;;;;;;;;;;-1:-1:-1;2435:196:124;;;;;:::i;:::-;;:::i;:::-;;;6423:25:182;;;6411:2;6396:18;2435:196:124;6277:177:182;10856:259:122;;;;;;:::i;:::-;;:::i;5301:133:124:-;;;;;;;;;;-1:-1:-1;5301:133:124;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5470:244::-;;;;;;;;;;;;;:::i;:::-;;;;7196:25:182;;;7252:2;7237:18;;7230:34;;;;7169:18;5470:244:124;7022:248:182;2667:125:124;;;;;;;;;;;;;:::i;:::-;;;;;;7637:13:182;;7619:32;;7707:4;7695:17;;;7689:24;7667:20;;;7660:54;7770:4;7758:17;;;7752:24;7730:20;;;7723:54;7833:4;7821:17;;;7815:24;7793:20;;;7786:54;7896:4;7884:17;;;7878:24;7856:20;;;7849:54;7979:3;7951:17;;;7945:24;-1:-1:-1;;;;;7941:50:182;7919:20;;;7912:80;;;;7606:3;7591:19;;7384:614;11151:543:122;;;;;;:::i;:::-;;:::i;4759:191:56:-;;;;;;;;;;-1:-1:-1;4759:191:56;;;;;:::i;:::-;;:::i;9201:186:122:-;;;;;;:::i;:::-;;:::i;6434:208:124:-;;;;;;;;;;-1:-1:-1;6434:208:124;;;;;:::i;:::-;;:::i;5949:155::-;;;;;;;;;;-1:-1:-1;5949:155:124;;;;;:::i;:::-;;:::i;15660:234:122:-;;;;;;:::i;:::-;;:::i;6678:238:124:-;;;;;;;;;;-1:-1:-1;6678:238:124;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5246:136:56:-;;;;;;;;;;-1:-1:-1;5246:136:56;;;;;:::i;:::-;;:::i;6348:245::-;;;;;;;;;;-1:-1:-1;6348:245:56;;;;;:::i;:::-;;:::i;9718:210:122:-;;;;;;:::i;:::-;;:::i;6952:243:124:-;;;;;;;;;;-1:-1:-1;6952:243:124;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15064:333:122:-;;;;;;:::i;:::-;;:::i;14040:762::-;;;;;;:::i;:::-;;:::i;8314:116::-;;;;;;;;;;;;;:::i;7656:472::-;;;;;;;;;;-1:-1:-1;7656:472:122;;;;;:::i;:::-;;:::i;4158:214:60:-;;;;;;:::i;:::-;;:::i;10533:291:122:-;;;;;;:::i;:::-;;:::i;3705:134:60:-;;;;;;;;;;;;;:::i;13725:283:122:-;;;;;;:::i;:::-;;:::i;9964:287::-;;;;;;:::i;:::-;;:::i;6140:258:124:-;;;;;;;;;;-1:-1:-1;6140:258:124;;;;;:::i;:::-;;:::i;7231:86::-;;;;;;;;;;-1:-1:-1;7303:7:124;;;;;;;;;;;;-1:-1:-1;;;7303:7:124;;;;7231:86;;;;;;;:::i;2692:145:63:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:63;;;2692:145;;3910:409:124;;;;;;;;;;-1:-1:-1;3910:409:124;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4549:141::-;;;;;;;;;;-1:-1:-1;4549:141:124;;;;;:::i;:::-;;:::i;3144:584::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3217:504:124;;;;;;;;3260:29;;3217:504;;3325:31;;3217:504;;;;3397:36;;-1:-1:-1;;;;;3397:36:124;;;3217:504;;;;;;;3470:32;;;;3217:504;;;;3584:26;;;;3217:504;;;;3638:27;;;;3217:504;;;;3690:20;;;;3217:504;;;;3530:23;;;;;3217:504;;;;;3144:584;;;;;24275:13:182;;24257:32;;24345:4;24333:17;;;24327:24;24305:20;;;24298:54;24387:17;;;24381:24;-1:-1:-1;;;;;24481:21:182;;;24459:20;;;24452:51;;;;24563:4;24551:17;;;24545:24;24541:33;;24519:20;;;24512:63;24635:4;24623:17;;;24617:24;24613:33;;24591:20;;;24584:63;24432:3;24695:17;;;24689:24;24685:33;;24663:20;;;24656:63;24779:4;24767:17;;;24761:24;24757:33;;24735:20;;;24728:63;24851:4;24839:17;;;24833:24;24829:33;;;24807:20;;;24800:63;;;;24244:3;24229:19;3144:584:124;24056:813:182;5101:164:124;;;;;;;;;;-1:-1:-1;5101:164:124;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2828:128::-;;;;;;;;;;;;;:::i;:::-;;;;;;25331:4:182;25373:3;25362:9;25358:19;25350:27;;25410:6;25404:13;25393:9;25386:32;25474:4;25466:6;25462:17;25456:24;25449:4;25438:9;25434:20;25427:54;25537:4;25529:6;25525:17;25519:24;25512:4;25501:9;25497:20;25490:54;25600:4;25592:6;25588:17;25582:24;25575:4;25564:9;25560:20;25553:54;25663:4;25655:6;25651:17;25645:24;25638:4;25627:9;25623:20;25616:54;25726:4;25718:6;25714:17;25708:24;25701:4;25690:9;25686:20;25679:54;25149:590;;;;;2992:116:124;;;;;;;;;;;;;:::i;:::-;;;;25994:13:182;;-1:-1:-1;;;;;25990:39:182;25972:58;;26090:4;26078:17;;;26072:24;-1:-1:-1;;;;;26068:49:182;26046:20;;;26039:79;;;;25945:18;2992:116:124;25744:380:182;12597:171:122;;;;;;:::i;:::-;;:::i;8165:112::-;;;;;;;;;;;;;:::i;16523:291::-;;;;;;:::i;:::-;;:::i;14834:194::-;;;;;;:::i;:::-;;:::i;3732:207:56:-;;;;;;;;;;-1:-1:-1;3732:207:56;;;;;:::i;:::-;;:::i;2317:49::-;;;;;;;;;;-1:-1:-1;2317:49:56;2362:4;2317:49;;4607:627:122;;;;;;;;;;-1:-1:-1;4607:627:122;;;;;:::i;:::-;;:::i;8467:219::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1819:58:60:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:60;;;;;4355:158:124;;;;;;;;;;-1:-1:-1;4355:158:124;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4911:154::-;;;;;;;;;;-1:-1:-1;4911:154:124;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12023:542:122:-;;;;;;:::i;:::-;;:::i;2080:122:124:-;;;;;;;;;;-1:-1:-1;2080:122:124;;;;;:::i;:::-;;:::i;4726:149::-;;;;;;;;;;-1:-1:-1;4726:149:124;;;;;:::i;:::-;;:::i;10283:214:122:-;;;;;;:::i;:::-;;:::i;5662:138:56:-;;;;;;;;;;-1:-1:-1;5662:138:56;;;;;:::i;:::-;;:::i;11726:261:122:-;;;;;;:::i;:::-;;:::i;13003:403::-;;;;;;:::i;:::-;;:::i;2238:161:124:-;;;;;;;;;;-1:-1:-1;2238:161:124;;;;;:::i;:::-;;:::i;16273:214:122:-;;;;;;:::i;:::-;;:::i;12800:171::-;;;;;;:::i;:::-;;:::i;9423:263::-;;;;;;:::i;:::-;;:::i;5816:856::-;;;;;;;;;;-1:-1:-1;5816:856:122;;;;;:::i;:::-;;:::i;5750:163:124:-;;;;;;;;;;-1:-1:-1;5750:163:124;;;;;:::i;:::-;;:::i;3768:106::-;;;;;;;;;;-1:-1:-1;3845:22:124;;3768:106;;-1:-1:-1;;;;;3845:22:124;;;35457:51:182;;35445:2;35430:18;3768:106:124;35289:225:182;8934:235:122;;;;;;:::i;:::-;;:::i;13438:251::-;;;;;;:::i;:::-;;:::i;3443:202:56:-;3528:4;-1:-1:-1;;;;;;3551:47:56;;-1:-1:-1;;;3551:47:56;;:87;;-1:-1:-1;;;;;;;;;;1133:40:64;;;3602:36:56;3544:94;3443:202;-1:-1:-1;;3443:202:56:o;15429:199:122:-;2316:19:63;:17;:19::i;:::-;15544:34:122::1;::::0;-1:-1:-1;;;15544:34:122;;:26:::1;::::0;::::1;::::0;:34:::1;::::0;:5:::1;::::0;15571:6;;15544:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;15588:33:122::1;::::0;-1:-1:-1;;;15588:33:122;;:25:::1;::::0;-1:-1:-1;15588:25:122::1;::::0;-1:-1:-1;15588:33:122::1;::::0;:5:::1;::::0;15614:6;;15588:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15429:199:::0;:::o;7360:259::-;2362:4:56;5683:26:122;2362:4:56;5698:10:122;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:122;;5765:10;5732:50;;;36822:51:182;36889:18;;;36882:34;;;36795:18;;5732:50:122;;;;;;;;5678:115;7535:34:::1;::::0;-1:-1:-1;;;7535:34:122;;:26:::1;::::0;::::1;::::0;:34:::1;::::0;:5:::1;::::0;7562:6;;7535:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7579:33:122::1;::::0;-1:-1:-1;;;7579:33:122;;:25:::1;::::0;-1:-1:-1;7579:25:122::1;::::0;-1:-1:-1;7579:33:122::1;::::0;:5:::1;::::0;7605:6;;7579:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7360:259:::0;;:::o;8718:180::-;8807:84;8825:65;;;;;;;;8858:6;8825:65;;;;;;;;;;:::i;:::-;;;8878:10;8825:65;;;;;8807:17;:84::i;:::-;8718:180;:::o;15930:311::-;2316:19:63;:17;:19::i;:::-;16125:50:122::1;::::0;-1:-1:-1;;;16125:50:122;;:34:::1;::::0;::::1;::::0;:50:::1;::::0;:5:::1;::::0;16160:14;;16125:50:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;16185:49:122::1;::::0;-1:-1:-1;;;16185:49:122;;:33:::1;::::0;-1:-1:-1;16185:33:122::1;::::0;-1:-1:-1;16185:49:122::1;::::0;:5:::1;::::0;16219:14;;16185:49:::1;;;:::i;2435:196:124:-:0;2534:7;2560:64;2534:7;2605:18;2560:44;:64::i;10856:259:122:-;10963:145;11002:96;;;;;;;;11043:6;11002:96;;;;;;;;;;:::i;:::-;;;11063:10;11002:96;;;;;;;;;;;10963:25;:145::i;5301:133:124:-;5396:31;;-1:-1:-1;;;5396:31:124;;5367:10;5396:31;;;7196:25:182;;;7237:18;;;7230:34;;;5367:10:124;5396:19;;;;7169:18:182;;5396:31:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5470:244::-;5571:29;;5522:7;;;;5571:54;;5522:7;;5571:54;:::i;:::-;388:21:138;408:1;-1:-1:-1;;388:21:138;:::i;:::-;5639:31:124;;:58;;;;:::i;:::-;5550:157;;;;5470:244;;:::o;2667:125::-;2711:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2711:32:124;2762:23;;-1:-1:-1;;;2762:23:124;;:5;:23;;;6423:25:182;2762:21:124;;;;6396:18:182;;2762:23:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2755:30;;2667:125;:::o;11151:543:122:-;2316:19:63;:17;:19::i;:::-;11336:45:122::1;::::0;-1:-1:-1;;;11336:45:122;;:29:::1;::::0;::::1;::::0;:45:::1;::::0;:5:::1;::::0;11366:14;;11336:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11408:44:122::1;::::0;-1:-1:-1;;;11408:44:122;;11391:14:::1;::::0;-1:-1:-1;11408:28:122::1;::::0;-1:-1:-1;11408:28:122::1;::::0;:44:::1;::::0;11391:14;;11437;;11408:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11466:21:::0;;:38:::1;;::::0;11391:61;;-1:-1:-1;11466:53:122;;11462:164:::1;;11584:21:::0;;:30;11535:80:::1;::::0;-1:-1:-1;;;11535:80:122;;:5:::1;:80;::::0;::::1;42824:25:182::0;-1:-1:-1;;;;;42885:32:182;;;42865:18;;;42858:60;11535:48:122::1;::::0;::::1;::::0;42797:18:182;;11535:80:122::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11462:164;11635:52;::::0;-1:-1:-1;;;11635:52:122;;:5:::1;:52;::::0;::::1;7196:25:182::0;7237:18;;;7230:34;;;11635:44:122::1;::::0;::::1;::::0;7169:18:182;;11635:52:122::1;7022:248:182::0;4759:191:56;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:56;;;;;:24;;;;4759:191::o;9201:186:122:-;9294:86;9313:66;;;;;;;;9347:6;9313:66;;;;;;;;;;:::i;:::-;;;9367:10;9313:66;;;;;9294:18;:86::i;6434:208:124:-;6504:7;6527:5;6536:1;6527:10;6523:67;;6560:19;;-1:-1:-1;;;6560:19:124;;;;;;;;;;;6523:67;6606:29;:5;6623:4;6629:5;6606:16;:29::i;:::-;6599:36;6434:208;-1:-1:-1;;;6434:208:124:o;5949:155::-;6054:43;;-1:-1:-1;;;6054:43:124;;6028:7;6054:43;;;43411:25:182;;;-1:-1:-1;;;;;43472:32:182;;43452:18;;;43445:60;43521:18;;;43514:34;;;6028:7:124;6054:28;;;;43384:18:182;;6054:43:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15660:234:122:-;15777:110;15808:78;;;;;;;;15854:6;15808:78;;;:::i;:::-;;;15874:10;15808:78;;;;;15777:30;:110::i;6678:238:124:-;6798:46;;:::i;:::-;6867:42;;-1:-1:-1;;;6867:42:124;;:15;;:27;;:42;;6895:5;;6902:6;;6867:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5246:136:56:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:56;;966:10:61;6441:34:56;6437:102;;6498:30;;-1:-1:-1;;;6498:30:56;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;9718:210:122:-;9823:98;9848:72;;;;;;;;9888:6;9848:72;;;:::i;:::-;;;9908:10;9848:72;;;;;9823:24;:98::i;6952:243:124:-;7074:48;;:::i;:::-;7145:43;;-1:-1:-1;;;7145:43:124;;:16;;:28;;:43;;7174:5;;7181:6;;7145:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15064:333:122:-;2316:19:63;:17;:19::i;:::-;15260:25:122::1;::::0;::::1;::::0;7013:33:::1;::::0;-1:-1:-1;;;7013:33:122;;6981:29:::1;7013:33;::::0;::::1;42824:25:182::0;;;-1:-1:-1;;;;;42885:32:182;;42865:18;;;42858:60;6981:29:122;7013:21:::1;::::0;::::1;::::0;42797:18:182;;7013:33:122::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15301:40:::2;::::0;-1:-1:-1;;;15301:40:122;;6981:65;;-1:-1:-1;15301:24:122::2;::::0;::::2;::::0;:40:::2;::::0;:5:::2;::::0;15326:14;;15301:40:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;15351:39:122::2;::::0;-1:-1:-1;;;15351:39:122;;:23:::2;::::0;-1:-1:-1;15351:23:122::2;::::0;-1:-1:-1;15351:39:122::2;::::0;:5:::2;::::0;15375:14;;15351:39:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;7098:33:122::1;::::0;-1:-1:-1;;;7098:33:122;;7067:28:::1;7098:33;::::0;::::1;42824:25:182::0;;;-1:-1:-1;;;;;42885:32:182;;42865:18;;;42858:60;7067:28:122;-1:-1:-1;7098:21:122::1;::::0;-1:-1:-1;7098:21:122::1;::::0;42797:18:182;;7098:33:122::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7067:64;;7169:21;7145:20;:45;7141:176;;7213:93;::::0;-1:-1:-1;;;7213:93:122;;-1:-1:-1;;;;;47674:32:182;;7213:93:122::1;::::0;::::1;47656:51:182::0;47723:18;;;47716:34;;;47766:18;;;47759:34;;;47629:18;;7213:93:122::1;47454:345:182::0;14040:762:122;14268:39;14309:35;2316:19:63;:17;:19::i;:::-;934:24:115::1;5683:26:122;5692:4;5698:10;5683:8;:26::i;:::-;5678:115;;5732:50;::::0;-1:-1:-1;;;5732:50:122;;5765:10:::1;5732:50;::::0;::::1;36822:51:182::0;36889:18;;;36882:34;;;36795:18;;5732:50:122::1;36648:274:182::0;5678:115:122::1;14360:46:::2;::::0;-1:-1:-1;;;14360:46:122;;:38:::2;::::0;::::2;::::0;:46:::2;::::0;:5:::2;::::0;14399:6;;14360:46:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;14525:45:122::2;::::0;-1:-1:-1;;;14525:45:122;;14416:14:::2;::::0;-1:-1:-1;14525:37:122::2;::::0;-1:-1:-1;14525:37:122::2;::::0;:45:::2;::::0;14416:14;;14563:6;;14525:45:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14440:130:::0;;-1:-1:-1;14440:130:122;-1:-1:-1;14440:130:122;-1:-1:-1;14580:48:122::2;;:5;14629:15;::::0;;;::::2;::::0;::::2;;:::i;:::-;14580:65;::::0;-1:-1:-1;;;;;;14580:65:122::2;::::0;;;;;;::::2;::::0;::::2;42824:25:182::0;;;;-1:-1:-1;;;;;42885:32:182;42865:18;;;42858:60;42797:18;;14580:65:122::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;14655:78:122::2;::::0;-1:-1:-1;;;14655:78:122;;:37:::2;::::0;-1:-1:-1;14655:37:122::2;::::0;-1:-1:-1;14655:78:122::2;::::0;:5:::2;::::0;14693:6;;14701:31;;14655:78:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;14743:52:122::2;::::0;-1:-1:-1;;;14743:52:122;;:5:::2;:52;::::0;::::2;7196:25:182::0;7237:18;;;7230:34;;;14743:44:122::2;::::0;-1:-1:-1;14743:44:122::2;::::0;-1:-1:-1;7169:18:182;;14743:52:122::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;14350:452;2345:1:63::1;14040:762:122::0;;;:::o;8314:116::-;991:24:115;5683:26:122;5692:4;5698:10;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:122;;5765:10;5732:50;;;36822:51:182;36889:18;;;36882:34;;;36795:18;;5732:50:122;36648:274:182;5678:115:122;8413:10:::1;:8;:10::i;7656:472::-:0;1061:37:115;5683:26:122;5692:4;5698:10;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:122;;5765:10;5732:50;;;36822:51:182;36889:18;;;36882:34;;;36795:18;;5732:50:122;36648:274:182;5678:115:122;7858:35;;;-1:-1:-1;;;;;7903:48:122;;::::1;-1:-1:-1::0;;;;;;7961:70:122;;;;-1:-1:-1;;;8015:15:122::1;-1:-1:-1::0;;;;;7961:70:122::1;;;::::0;;;8046:75:::1;::::0;;7858:35;;;::::1;49777:34:182::0;;;49842:2;49827:18;;49820:43;;;;8083:10:122::1;::::0;8046:75:::1;::::0;49697:18:182;8046:75:122::1;;;;;;;7824:304;7656:472:::0;;:::o;4158:214:60:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;10533:291:122:-;2316:19:63;:17;:19::i;:::-;10718:45:122::1;::::0;-1:-1:-1;;;10718:45:122;;:29:::1;::::0;::::1;::::0;:45:::1;::::0;:5:::1;::::0;10748:14;;10718:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10773:44:122::1;::::0;-1:-1:-1;;;10773:44:122;;:28:::1;::::0;-1:-1:-1;10773:28:122::1;::::0;-1:-1:-1;10773:44:122::1;::::0;:5:::1;::::0;10802:14;;10773:44:::1;;;:::i;3705:134:60:-:0;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:60;:::o;13725:283:122:-;2316:19:63;:17;:19::i;:::-;13906:43:122::1;::::0;;-1:-1:-1;;;13906:43:122;;:5:::1;:43;::::0;::::1;51928:25:182::0;51995:13;;51989:20;51969:18;;;51962:48;51984:2;52045:15;;52039:22;-1:-1:-1;;;;;52135:21:182;;;52115:18;;;52108:49;52203:15;;;52197:22;52193:31;;;52173:18;;;52166:59;13906:27:122::1;::::0;::::1;::::0;51900:19:182;;13906:43:122::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13959:42:122::1;::::0;;-1:-1:-1;;;13959:42:122;;:5:::1;:42;::::0;::::1;51928:25:182::0;51995:13;;51989:20;51969:18;;;51962:48;51984:2;52045:15;;52039:22;-1:-1:-1;;;;;52135:21:182;;;52115:18;;;52108:49;52203:15;;;52197:22;52193:31;;;52173:18;;;52166:59;13959:26:122::1;::::0;-1:-1:-1;13959:26:122::1;::::0;-1:-1:-1;51900:19:182;;13959:42:122::1;51624:607:182::0;9964:287:122;2316:19:63;:17;:19::i;:::-;10147:44:122::1;::::0;-1:-1:-1;;;10147:44:122;;:28:::1;::::0;::::1;::::0;:44:::1;::::0;:5:::1;::::0;10176:14;;10147:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10201:43:122::1;::::0;-1:-1:-1;;;10201:43:122;;:27:::1;::::0;-1:-1:-1;10201:27:122::1;::::0;-1:-1:-1;10201:43:122::1;::::0;:5:::1;::::0;10229:14;;10201:43:::1;;;:::i;6140:258:124:-:0;6284:37;;-1:-1:-1;;;6284:37:124;;6230:7;6284:37;;;7196:25:182;;;7237:18;;;7230:34;;;6230:7:124;;;6284:21;;;;7169:18:182;;6284:37:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6249:72;;;;;;;;;;-1:-1:-1;;;;;6249:72:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;6338:53;-1:-1:-1;;;6338:53:124;;6249:72;;-1:-1:-1;6338:39:124;;;;:53;;-1:-1:-1;;6249:72:124;;6338:53;;;:::i;3910:409::-;3968:15;;:::i;:::-;4002:310;;;-1:-1:-1;;;;;4031:22:124;;-1:-1:-1;4031:22:124;;;:10;:22;;;;;;;;4002:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4031:22;;4002:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4002:310:124;;;;-1:-1:-1;;;4002:310:124;;-1:-1:-1;4002:310:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4002:310:124;;;;;;;;;4118:26;;:42;;-1:-1:-1;;;4118:42:124;;;;;35457:51:182;;;;4002:310:124;;;;;4118:26;;;;:36;;35430:18:182;;4118:42:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4002:310;;4195:27;;:43;;-1:-1:-1;;;4195:43:124;;-1:-1:-1;;;;;35475:32:182;;;4195:43:124;;;35457:51:182;4002:310:124;;;;;4195:27;;;;:37;;35430:18:182;;4195:43:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4002:310;;4265:20;;:36;;-1:-1:-1;;;4265:36:124;;-1:-1:-1;;;;;35475:32:182;;;4265:36:124;;;35457:51:182;4002:310:124;;;;;4265:20;;;;:30;;35430:18:182;;4265:36:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4002:310;;3995:317;3910:409;-1:-1:-1;;3910:409:124:o;4549:141::-;2298:29:138;;4622:4:124;;-1:-1:-1;;4645:38:124;2132:202:138;5101:164:124;5177:21;;:::i;:::-;5217:41;;-1:-1:-1;;;5217:41:124;;:5;:41;;;7196:25:182;7237:18;;;7230:34;;;5217:23:124;;;;7169:18:182;;5217:41:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5210:48;;;;;;;;;;-1:-1:-1;;;;;5210:48:124;;;;-1:-1:-1;;;5210:48:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5101:164:124:o;2828:128::-;2873:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2873:33:124;2925:24;;-1:-1:-1;;;2925:24:124;;:5;:24;;;6423:25:182;2925:22:124;;;;6396:18:182;;2925:24:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2992:116::-;-1:-1:-1;;;;;;;;;;;;;;;;;3081:20:124;;-1:-1:-1;;;3081:20:124;;:5;:20;;;6423:25:182;3081:18:124;;;;6396::182;;3081:20:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12597:171:122:-;2316:19:63;:17;:19::i;:::-;12698:27:122::1;::::0;-1:-1:-1;;;12698:27:122;;:19:::1;::::0;::::1;::::0;:27:::1;::::0;:5:::1;::::0;12718:6;;12698:27:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12735:26:122::1;::::0;-1:-1:-1;;;12735:26:122;;:18:::1;::::0;-1:-1:-1;12735:18:122::1;::::0;-1:-1:-1;12735:26:122::1;::::0;:5:::1;::::0;12754:6;;12735:26:::1;;;:::i;8165:112::-:0;991:24:115;5683:26:122;5692:4;5698:10;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:122;;5765:10;5732:50;;;36822:51:182;36889:18;;;36882:34;;;36795:18;;5732:50:122;36648:274:182;5678:115:122;8262:8:::1;:6;:8::i;16523:291::-:0;2316:19:63;:17;:19::i;:::-;16708:45:122::1;::::0;-1:-1:-1;;;16708:45:122;;:29:::1;::::0;::::1;::::0;:45:::1;::::0;:5:::1;::::0;16738:14;;16708:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;16763:44:122::1;::::0;-1:-1:-1;;;16763:44:122;;:28:::1;::::0;-1:-1:-1;16763:28:122::1;::::0;-1:-1:-1;16763:44:122::1;::::0;:5:::1;::::0;16792:14;;16763:44:::1;;;:::i;14834:194::-:0;14931:90;14952:68;;;;;;;;14988:6;14952:68;;;;;;;;;;:::i;:::-;;;15008:10;14952:68;;;;;14931:20;:90::i;3732:207:56:-;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:56;;;;;;;;-1:-1:-1;;;;;3901:31:56;;;;;;;;;;;;;;;3732:207::o;4607:627:122:-;8870:21:59;4302:15;;-1:-1:-1;;;4302:15:59;;;;4301:16;;-1:-1:-1;;;;;4348:14:59;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;-1:-1:-1;;;;;4790:16:59;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:59;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:59;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:59;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:59;-1:-1:-1;;;5013:22:59;;;4979:67;4864:43:122::1;::::0;-1:-1:-1;;;4864:43:122;;:24:::1;::::0;::::1;::::0;:43:::1;::::0;:5:::1;::::0;4889;;4896:1;;4899;;4902;;4905;;4864:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4918:22;:20;:22::i;:::-;4950:17;:15;:17::i;:::-;4977:24;:22;:24::i;:::-;5012:35;::::0;-1:-1:-1;;;5012:35:122;;:23:::1;::::0;::::1;::::0;:35:::1;::::0;:5:::1;::::0;5036:1;;5039;;5042;;5045;;5012:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5057:37;2362:4:56;5068:18:122::0;::::1;5088:5;5057:10;:37::i;:::-;;5104:30;991:24:115;5128:5:122;5104:10;:30::i;:::-;;5144;934:24:115;5168:5:122;5144:10;:30::i;:::-;;5184:43;1061:37:115;5221:5:122;5184:10;:43::i;:::-;;5070:14:59::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:59;;;5142:14;;-1:-1:-1;61153:50:182;;5142:14:59;;61141:2:182;61126:18;5142:14:59;;;;;;;5066:101;4092:1081;;;;;4607:627:122;;;;;:::o;8467:219::-;8609:22;2316:19:63;:17;:19::i;:::-;8657:22:122::1;:5;8673::::0;;8657:15:::1;:22::i;4355:158:124:-:0;4424:26;;:::i;:::-;-1:-1:-1;;;;;;4469:37:124;;;:5;:37;;;:31;:37;;;;;;;;;4462:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4355:158::o;4911:154::-;4983:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4983:19:124;5021:37;;-1:-1:-1;;;5021:37:124;;:5;:37;;;7196:25:182;7237:18;;;7230:34;;;5021:21:124;;;;7169:18:182;;5021:37:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5014:44;;;;;;;;;;-1:-1:-1;;;;;5014:44:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4911:154;-1:-1:-1;;4911:154:124:o;12023:542:122:-;2316:19:63;:17;:19::i;:::-;12210:46:122::1;::::0;-1:-1:-1;;;12210:46:122;;:30:::1;::::0;::::1;::::0;:46:::1;::::0;:5:::1;::::0;12241:14;;12210:46:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12283:45:122::1;::::0;-1:-1:-1;;;12283:45:122;;12266:14:::1;::::0;-1:-1:-1;12283:29:122::1;::::0;-1:-1:-1;12283:29:122::1;::::0;:45:::1;::::0;12266:14;;12313;;12283:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12342:21:::0;;:38:::1;;::::0;12266:62;;-1:-1:-1;12342:53:122;;12338:159:::1;;12460:25;::::0;::::1;::::0;12411:75:::1;::::0;-1:-1:-1;;;12411:75:122;;:5:::1;:75;::::0;::::1;42824:25:182::0;-1:-1:-1;;;;;42885:32:182;;;42865:18;;;42858:60;12411:48:122::1;::::0;::::1;::::0;42797:18:182;;12411:75:122::1;42617:307:182::0;2080:122:124;2168:27;;-1:-1:-1;;;2168:27:124;;2142:7;2168:27;;;42824:25:182;;;-1:-1:-1;;;;;42885:32:182;;42865:18;;;42858:60;2142:7:124;2168:21;;;;42797:18:182;;2168:27:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4726:149::-;4803:4;4826:42;4803:4;4851:16;4826:24;:42::i;10283:214:122:-;10390:100;10416:73;;;;;;;;10457:6;10416:73;;;:::i;:::-;;;10477:10;10416:73;;;;;10390:25;:100::i;5662:138:56:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;11726:261:122:-:0;11833:147;11873:97;;;;;;;;11915:6;11873:97;;;;11935:10;-1:-1:-1;;;;;11873:97:122;;;;;11958:10;-1:-1:-1;;;;;11873:97:122;;;;11833:26;:147::i;13003:403::-;13151:39;2316:19:63;:17;:19::i;:::-;13206:31:122::1;::::0;-1:-1:-1;;;13206:31:122;;:23:::1;::::0;::::1;::::0;:31:::1;::::0;:5:::1;::::0;13230:6;;13206:31:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13281:30:122::1;::::0;-1:-1:-1;;;13281:30:122;;:22:::1;::::0;-1:-1:-1;13281:22:122::1;::::0;-1:-1:-1;13281:30:122::1;::::0;:5:::1;::::0;13304:6;;13281:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13321:78;::::0;-1:-1:-1;;;13321:78:122;;13247:64;;-1:-1:-1;13321:37:122::1;::::0;::::1;::::0;:78:::1;::::0;:5:::1;::::0;13359:6;;13247:64;;13321:78:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13003:403:::0;;;:::o;2238:161:124:-;2344:48;;-1:-1:-1;;;2344:48:124;;2321:4;2344:48;;;7196:25:182;;;7237:18;;;7230:34;;;2321:4:124;2344:32;;;;7169:18:182;;2344:48:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;16273:214:122:-;16380:100;16406:73;;;;;;;;16447:6;16406:73;;;;;;;;;;:::i;:::-;;;16467:10;16406:73;;;;;16380:25;:100::i;12800:171::-;2316:19:63;:17;:19::i;:::-;12901:27:122::1;::::0;-1:-1:-1;;;12901:27:122;;:5:::1;:27;::::0;::::1;63774:25:182::0;63835:20;;63815:18;;;63808:48;12901:19:122::1;::::0;::::1;::::0;63747:18:182;;12901:27:122::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12938:26:122::1;::::0;-1:-1:-1;;;12938:26:122;;:5:::1;:26;::::0;::::1;63774:25:182::0;63835:20;;63815:18;;;63808:48;12938:18:122::1;::::0;-1:-1:-1;12938:18:122::1;::::0;-1:-1:-1;63747:18:182;;12938:26:122::1;63505:357:182::0;9423:263:122;2316:19:63;:17;:19::i;:::-;9594:38:122::1;::::0;-1:-1:-1;;;9594:38:122;;:22:::1;::::0;::::1;::::0;:38:::1;::::0;:5:::1;::::0;9617:14;;9594:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9642:37:122::1;::::0;-1:-1:-1;;;9642:37:122;;:21:::1;::::0;-1:-1:-1;9642:21:122::1;::::0;-1:-1:-1;9642:37:122::1;::::0;:5:::1;::::0;9664:14;;9642:37:::1;;;:::i;5816:856::-:0;2362:4:56;5683:26:122;2362:4:56;5698:10:122;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:122;;5765:10;5732:50;;;36822:51:182;36889:18;;;36882:34;;;36795:18;;5732:50:122;36648:274:182;5678:115:122;8870:21:59;6431:15;;5989:7:122::1;::::0;8870:21:59;-1:-1:-1;;;6431:15:59;::::1;;;::::0;:44:::1;;-1:-1:-1::0;6450:14:59;;-1:-1:-1;;;;;6450:25:59;;::::1;:14:::0;::::1;:25;;6431:44;6427:105;;;6498:23;;-1:-1:-1::0;;;6498:23:59::1;;;;;;;;;;;6427:105;6541:24:::0;;-1:-1:-1;;6575:22:59;-1:-1:-1;;;;;6541:24:59;::::1;6575:22:::0;-1:-1:-1;;;6575:22:59::1;::::0;;-1:-1:-1;;;;;6049:35:122;::::2;6045:191;;6204:21;;-1:-1:-1::0;;;6204:21:122::2;;;;;;;;;;;6045:191;6257:22:::0;;-1:-1:-1;;;;;6257:22:122::2;6249:45:::0;6245:208:::2;;6420:22;;-1:-1:-1::0;;;6420:22:122::2;;;;;;;;;;;6245:208;6467:36;::::0;-1:-1:-1;;;6467:36:122;;6497:4:::2;6467:36;::::0;::::2;35457:51:182::0;-1:-1:-1;;;;;6467:21:122;::::2;::::0;::::2;::::0;35430:18:182;;6467:36:122::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6462:156;;6571:36;::::0;-1:-1:-1;;;6571:36:122;;6601:4:::2;6571:36;::::0;::::2;35457:51:182::0;35430:18;;6571:36:122::2;35289:225:182::0;6462:156:122::2;6628:22:::0;:37;;-1:-1:-1;;;;;;6628:37:122::2;-1:-1:-1::0;;;;;6628:37:122;::::2;;::::0;;6618:23:59;;-1:-1:-1;;;;6618:23:59::1;::::0;;6656:20:::1;::::0;-1:-1:-1;;;;;61171:31:182;;61153:50;;6656:20:59::1;::::0;61141:2:182;61126:18;6656:20:59::1;;;;;;;6291:392;5802:1:122;5816:856:::0;;:::o;5750:163:124:-;5859:47;;-1:-1:-1;;;5859:47:124;;5833:7;5859:47;;;43411:25:182;;;-1:-1:-1;;;;;43472:32:182;;43452:18;;;43445:60;43521:18;;;43514:34;;;5833:7:124;5859:30;;;;43384:18:182;;5859:47:124;43176:378:182;8934:235:122;2316:19:63;:17;:19::i;:::-;9095:29:122::1;::::0;-1:-1:-1;;;9095:29:122;;:21:::1;::::0;::::1;::::0;:29:::1;::::0;:5:::1;::::0;9117:6;;9095:29:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9134:28:122::1;::::0;-1:-1:-1;;;9134:28:122;;:20:::1;::::0;-1:-1:-1;9134:20:122::1;::::0;-1:-1:-1;9134:28:122::1;::::0;:5:::1;::::0;9155:6;;9134:28:::1;;;:::i;13438:251::-:0;13541:141;13578:94;;;;;;;;13617:6;13578:94;;;;;;;;;;:::i;:::-;;;13637:10;13578:94;;;;;;;;;;;13541:23;:141::i;2905:128:63:-;-1:-1:-1;;;;;;;;;;;2821:9:63;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:63;;;;;;;;;;;2966:61;2905:128::o;5240:370:122:-;5312:4;5332:22;5340:4;5346:7;5332;:22::i;:::-;5328:276;;;-1:-1:-1;5377:4:122;5370:11;;5328:276;5410:22;;-1:-1:-1;;;;;5410:22:122;5398:206;;-1:-1:-1;5470:5:122;5463:12;;5398:206;5546:22;;5513:80;;-1:-1:-1;;;5513:80:122;;;;;42824:25:182;;;-1:-1:-1;;;;;42885:32:182;;;42865:18;;;42858:60;5546:22:122;;;;5513:65;;42797:18:182;;5513:80:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5506:87;;;;1013:477:133;1154:29;1223:260;1274:5;:12;;:22;;;;;;;;;;-1:-1:-1;;;;;1274:22:133;-1:-1:-1;;;;;1274:31:133;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1268:39;;:2;:39;:::i;:::-;1250:57;;:15;:57;:::i;:::-;1327:36;;;;:47;;;-1:-1:-1;;;1327:47:133;;;;-1:-1:-1;;;;;1327:36:133;;;;:45;;:47;;;;;;;;;;;;;;;:36;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1321:53;;:2;:53;:::i;:::-;1430:32;;;;:43;;;-1:-1:-1;;;1430:43:133;;;;-1:-1:-1;;;;;1430:32:133;;;;:41;;:43;;;;;;;;;;;;;;;:32;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1424:49;;:2;:49;:::i;:::-;1388:12;;;:22;:33;;;-1:-1:-1;;;1388:33:133;;;;-1:-1:-1;;;;;1388:22:133;;;;:31;;:33;;;;;;;;;;;;;;;:22;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;1223:13;:260::i;8668:187::-;8761:7;8787:61;8801:4;8807:31;8825:5;8832;8807:17;:31::i;:::-;179:4:139;8787:13:133;:61::i;:::-;8780:68;8668:187;-1:-1:-1;;;;8668:187:133:o;4148:103:56:-;4214:30;4225:4;966:10:61;4214::56;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:56;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:56;;;;;;;;;:38;;-1:-1:-1;;7475:38:56;7509:4;7475:38;;;7559:12;966:10:61;;887:96;7559:12:56;-1:-1:-1;;;;;7532:40:56;7550:7;-1:-1:-1;;;;;7532:40:56;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7432:219;7353:304;7270:387;;;;:::o;7892:388::-;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:56;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:56;;;;;;;;;;:39;;-1:-1:-1;;8097:39:56;;;8155:40;966:10:61;;8097:14:56;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;3674:178:63;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:63;;-1:-1:-1;;3791:17:63::1;::::0;;3823:22:::1;966:10:61::0;3832:12:63::1;3823:22;::::0;-1:-1:-1;;;;;35475:32:182;;;35457:51;;35445:2;35430:18;3823:22:63::1;;;;;;;3722:130;3674:178::o:0;4599:312:60:-;4679:4;-1:-1:-1;;;;;4688:6:60;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:60;:32;-1:-1:-1;;;;;;;;;;;2035:53:71;-1:-1:-1;;;;;2035:53:71;;1957:138;4749:32:60;-1:-1:-1;;;;;4749:42:60;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:60;;;;;;;;;;;6678:151:122;2362:4:56;5683:26:122;2362:4:56;5698:10:122;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:122;;5765:10;5732:50;;;36822:51:182;36889:18;;;36882:34;;;36795:18;;5732:50:122;36648:274:182;6052:538:60;6169:17;-1:-1:-1;;;;;6151:50:60;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:60;;;;;;;;-1:-1:-1;;6151:52:60;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:60;;-1:-1:-1;;;;;35475:32:182;;6513:60:60;;;35457:51:182;35430:18;;6513:60:60;35289:225:182;6147:437:60;-1:-1:-1;;;;;;;;;;;6245:40:60;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:60;;;;;6423:25:182;;;6396:18;;6312:34:60;6277:177:182;6241:120:60;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:60;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:60;;;;;;;;;;;3366:176:63;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:63;;-1:-1:-1;;3484:16:63::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:61::0;3522:12:63::1;887:96:61::0;3231:65:56;6931:20:59;:18;:20::i;1836:97:63:-;6931:20:59;:18;:20::i;:::-;1899:27:63::1;:25;:27::i;1377:885:140:-:0;1492:22;;;:29;;-1:-1:-1;;;;1492:29:140;-1:-1:-1;;;1492:29:140;;;1567:27;;;;:41;;;-1:-1:-1;;;1567:41:140;;;;1458:22;;1492:29;;-1:-1:-1;;;;;1567:27:140;;;;:39;;:41;;;;;;;;;;;;;;;:27;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1532:76;;1618:29;1650:5;:10;;:20;;;;;;;;;;-1:-1:-1;;;;;1650:20:140;-1:-1:-1;;;;;1650:32:140;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1618:66;-1:-1:-1;1717:4:140;-1:-1:-1;;;;;1705:24:140;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:34;;1744:9;1739:132;1759:15;;;1739:132;;;1808:52;1845:4;1852;;1857:1;1852:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1808:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1808:28:140;;-1:-1:-1;;;1808:52:140:i;:::-;1795:7;1803:1;1795:10;;;;;;;;:::i;:::-;;;;;;;;;;:65;1776:3;;1739:132;;;-1:-1:-1;1915:27:140;;;;:41;;;-1:-1:-1;;;1915:41:140;;;;1881:31;;-1:-1:-1;;;;;1915:27:140;;:39;;:41;;;;;;;;;;;;;;:27;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1881:75;;1966:28;1997:5;:10;;:20;;;;;;;;;;-1:-1:-1;;;;;1997:20:140;-1:-1:-1;;;;;1997:32:140;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:172;;-1:-1:-1;;;2042:172:140;;;;;68896:25:182;;;68937:18;;;68930:34;;;68980:18;;;68973:34;;;69023:18;;;69016:34;;;69066:19;;;69059:35;;;1966:65:140;;-1:-1:-1;2042:54:140;;;;68868:19:182;;2042:172:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2225:22:140;;;;:30;;-1:-1:-1;;;;2225:30:140;;;-1:-1:-1;1377:885:140;;;-1:-1:-1;;;;;;1377:885:140:o;2559:208:138:-;2651:4;388:21;408:1;-1:-1:-1;;388:21:138;:::i;:::-;2674:10;:38;;:86;;;;-1:-1:-1;;2729:31:138;;;;;;-1:-1:-1;2716:44:138;2559:208::o;614:142:139:-;688:7;714:35;741:1;744;747;714:26;:35::i;8042:173:133:-;8168:26;;8128:7;;8154:54;;8196:5;230:8:139;8154:13:133;:54::i;4381:197:56:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:56;;-1:-1:-1;;;;;36840:32:182;;4514:47:56;;;36822:51:182;36889:18;;;36882:34;;;36795:18;;4514:47:56;36648:274:182;3105:126:63;-1:-1:-1;;;;;;;;;;;2821:9:63;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:63;;;;;;;;;;;2779:335:71;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:71;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:59:-;8870:21;8560:40;-1:-1:-1;;;8560:40:59;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:59;;;;;;;;;;;1939:156:63;6931:20:59;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:63;;-1:-1:-1;;2071:17:63::1;::::0;;1939:156::o;4106:253:79:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:79;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:79:o;25271:508:93:-;25345:9;25568:1;25564;25560:6;25556:14;25553:1;25550:21;25547:1;25543:29;25536:37;25533:1;25529:45;25519:169;;25607:10;25601:4;25594:24;25669:4;25663;25656:18;25519:169;-1:-1:-1;25749:9:93;;25724:17;;;25717:25;25710:33;25745:17;;;25706:57;;25271:508::o;2186:281:71:-;2263:17;-1:-1:-1;;;;;2263:29:71;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:71;;-1:-1:-1;;;;;35475:32:182;;2320:47:71;;;35457:51:182;35430:18;;2320:47:71;35289:225:182;2259:119:71;-1:-1:-1;;;;;;;;;;;2387:73:71;;-1:-1:-1;;;;;;2387:73:71;-1:-1:-1;;;;;2387:73:71;;;;;;;;;;2186:281::o;6598:122::-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:71;;;;;;;;;;;4625:582:79;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:79;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:79;;-1:-1:-1;;;;;35475:32:182;;5121:24:79;;;35457:51:182;35430:18;;5121:24:79;35289:225:182;5041:119:79;-1:-1:-1;5180:10:79;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:79;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:182;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:182;;209:43;;199:71;;266:1;263;256:12;497:166;568:5;613:2;604:6;599:3;595:16;591:25;588:45;;;629:1;626;619:12;588:45;-1:-1:-1;651:6:182;497:166;-1:-1:-1;497:166:182:o;668:261::-;766:6;819:2;807:9;798:7;794:23;790:32;787:52;;;835:1;832;825:12;787:52;858:65;915:7;904:9;858:65;:::i;934:166::-;1005:5;1050:2;1041:6;1036:3;1032:16;1028:25;1025:45;;;1066:1;1063;1056:12;1105:379;1203:6;1256:2;1244:9;1235:7;1231:23;1227:32;1224:52;;;1272:1;1269;1262:12;1224:52;1312:9;1299:23;-1:-1:-1;;;;;1337:6:182;1334:30;1331:50;;;1377:1;1374;1367:12;1331:50;1400:78;1470:7;1461:6;1450:9;1446:22;1400:78;:::i;1750:127::-;1811:10;1806:3;1802:20;1799:1;1792:31;1842:4;1839:1;1832:15;1866:4;1863:1;1856:15;1882:253;1954:2;1948:9;1996:4;1984:17;;-1:-1:-1;;;;;2016:34:182;;2052:22;;;2013:62;2010:88;;;2078:18;;:::i;:::-;2114:2;2107:22;1882:253;:::o;2140:257::-;2212:4;2206:11;;;2244:17;;-1:-1:-1;;;;;2276:34:182;;2312:22;;;2273:62;2270:88;;;2338:18;;:::i;2402:253::-;2474:2;2468:9;2516:4;2504:17;;-1:-1:-1;;;;;2536:34:182;;2572:22;;;2533:62;2530:88;;;2598:18;;:::i;2660:253::-;2732:2;2726:9;2774:4;2762:17;;-1:-1:-1;;;;;2794:34:182;;2830:22;;;2791:62;2788:88;;;2856:18;;:::i;2918:252::-;2990:2;2984:9;3032:3;3020:16;;-1:-1:-1;;;;;3051:34:182;;3087:22;;;3048:62;3045:88;;;3113:18;;:::i;3175:275::-;3246:2;3240:9;3311:2;3292:13;;-1:-1:-1;;3288:27:182;3276:40;;-1:-1:-1;;;;;3331:34:182;;3367:22;;;3328:62;3325:88;;;3393:18;;:::i;:::-;3429:2;3422:22;3175:275;;-1:-1:-1;3175:275:182:o;3455:118::-;3541:5;3534:13;3527:21;3520:5;3517:32;3507:60;;3563:1;3560;3553:12;3578:183;3638:4;-1:-1:-1;;;;;3663:6:182;3660:30;3657:56;;;3693:18;;:::i;:::-;-1:-1:-1;3738:1:182;3734:14;3750:4;3730:25;;3578:183::o;3766:668::-;3820:5;3873:3;3866:4;3858:6;3854:17;3850:27;3840:55;;3891:1;3888;3881:12;3840:55;3927:6;3914:20;3953:4;3977:60;3993:43;4033:2;3993:43;:::i;:::-;3977:60;:::i;:::-;4059:3;4083:2;4078:3;4071:15;4111:4;4106:3;4102:14;4095:21;;4168:4;4162:2;4159:1;4155:10;4147:6;4143:23;4139:34;4125:48;;4196:3;4188:6;4185:15;4182:35;;;4213:1;4210;4203:12;4182:35;4249:4;4241:6;4237:17;4263:142;4279:6;4274:3;4271:15;4263:142;;;4345:17;;4333:30;;4383:12;;;;4296;;4263:142;;;-1:-1:-1;4423:5:182;3766:668;-1:-1:-1;;;;;;3766:668:182:o;4439:710::-;4512:5;4560:4;4548:9;4543:3;4539:19;4535:30;4532:50;;;4578:1;4575;4568:12;4532:50;4600:22;;:::i;:::-;4591:31;;4658:9;4645:23;4638:5;4631:38;4721:2;4710:9;4706:18;4693:32;4734:30;4756:7;4734:30;:::i;:::-;4791:2;4780:14;;4773:31;4856:2;4841:18;;4828:32;4869:30;4828:32;4869:30;:::i;:::-;4926:2;4915:14;;4908:31;4990:2;4975:18;;4962:32;-1:-1:-1;;;;;5006:30:182;;5003:50;;;5049:1;5046;5039:12;5003:50;5085:57;5138:3;5129:6;5118:9;5114:22;5085:57;:::i;:::-;5080:2;5073:5;5069:14;5062:81;;4439:710;;;;:::o;5154:131::-;-1:-1:-1;;;;;5229:31:182;;5219:42;;5209:70;;5275:1;5272;5265:12;5290:797;5404:6;5457:2;5445:9;5436:7;5432:23;5428:32;5425:52;;;5473:1;5470;5463:12;5425:52;5513:9;5500:23;-1:-1:-1;;;;;5583:2:182;5575:6;5572:14;5569:34;;;5599:1;5596;5589:12;5569:34;5622:22;;;;5678:4;5660:16;;;5656:27;5653:47;;;5696:1;5693;5686:12;5653:47;5722:22;;:::i;:::-;5782:2;5769:16;5810:2;5800:8;5797:16;5794:36;;;5826:1;5823;5816:12;5794:36;5853:72;5917:7;5906:8;5902:2;5898:17;5853:72;:::i;:::-;5846:5;5839:87;;5971:2;5967;5963:11;5950:25;5935:40;;5984:33;6009:7;5984:33;:::i;:::-;6044:2;6033:14;;6026:31;;;;-1:-1:-1;6037:5:182;5290:797;-1:-1:-1;;;5290:797:182:o;6092:180::-;6151:6;6204:2;6192:9;6183:7;6179:23;6175:32;6172:52;;;6220:1;6217;6210:12;6172:52;-1:-1:-1;6243:23:182;;6092:180;-1:-1:-1;6092:180:182:o;6459:209::-;6560:6;6613:3;6601:9;6592:7;6588:23;6584:33;6581:53;;;6630:1;6627;6620:12;6673:344;6821:2;6806:18;;6854:1;6843:13;;6833:144;;6899:10;6894:3;6890:20;6887:1;6880:31;6934:4;6931:1;6924:15;6962:4;6959:1;6952:15;6833:144;6986:25;;;6673:344;:::o;8003:770::-;8071:5;8119:4;8107:9;8102:3;8098:19;8094:30;8091:50;;;8137:1;8134;8127:12;8091:50;8159:22;;:::i;:::-;8150:31;;8218:9;8205:23;8237:33;8262:7;8237:33;:::i;:::-;8293:7;8286:5;8279:22;;8361:2;8350:9;8346:18;8333:32;8328:2;8321:5;8317:14;8310:56;8426:2;8415:9;8411:18;8398:32;8393:2;8386:5;8382:14;8375:56;8491:2;8480:9;8476:18;8463:32;8458:2;8451:5;8447:14;8440:56;8557:3;8546:9;8542:19;8529:33;8523:3;8516:5;8512:15;8505:58;8624:3;8613:9;8609:19;8596:33;8590:3;8583:5;8579:15;8572:58;8682:3;8671:9;8667:19;8654:33;8696:30;8718:7;8696:30;:::i;:::-;8753:3;8742:15;;8735:32;8746:5;8003:770;-1:-1:-1;;8003:770:182:o;8778:557::-;8856:5;8904:6;8892:9;8887:3;8883:19;8879:32;8876:52;;;8924:1;8921;8914:12;8876:52;8946:22;;:::i;:::-;8937:31;;8991:55;9042:3;9031:9;8991:55;:::i;:::-;8984:5;8977:70;9099:3;9088:9;9084:19;9071:33;9113;9138:7;9113:33;:::i;:::-;9173:4;9162:16;;9155:33;9240:3;9225:19;;9212:33;9254;9212;9254;:::i;:::-;9314:4;9303:16;;9296:33;9307:5;8778:557;-1:-1:-1;;8778:557:182:o;9340:277::-;9449:6;9502:3;9490:9;9481:7;9477:23;9473:33;9470:53;;;9519:1;9516;9509:12;9470:53;9542:69;9603:7;9592:9;9542:69;:::i;10251:248::-;10319:6;10327;10380:2;10368:9;10359:7;10355:23;10351:32;10348:52;;;10396:1;10393;10386:12;10348:52;-1:-1:-1;;10419:23:182;;;10489:2;10474:18;;;10461:32;;-1:-1:-1;10251:248:182:o;10504:315::-;10572:6;10580;10633:2;10621:9;10612:7;10608:23;10604:32;10601:52;;;10649:1;10646;10639:12;10601:52;10688:9;10675:23;10707:31;10732:5;10707:31;:::i;:::-;10757:5;10809:2;10794:18;;;;10781:32;;-1:-1:-1;;;10504:315:182:o;10824:407::-;10930:6;10983:2;10971:9;10962:7;10958:23;10954:32;10951:52;;;10999:1;10996;10989:12;10951:52;11039:9;11026:23;-1:-1:-1;;;;;11064:6:182;11061:30;11058:50;;;11104:1;11101;11094:12;11058:50;11127:22;;11183:3;11165:16;;;11161:26;11158:46;;;11200:1;11197;11190:12;11236:257;11335:6;11388:3;11376:9;11367:7;11363:23;11359:33;11356:53;;;11405:1;11402;11395:12;11356:53;11428:59;11479:7;11468:9;11428:59;:::i;11498:309::-;11582:12;;-1:-1:-1;;;;;11578:38:182;11566:51;;11680:4;11669:16;;;11663:23;11656:31;11649:39;11633:14;;;11626:63;11738:4;11727:16;;;11721:23;11705:14;;;11698:47;11794:4;11783:16;;;11777:23;11761:14;;11754:47;11498:309::o;11812:703::-;11988:4;12030:3;12019:9;12015:19;12007:27;;12043:58;12091:9;12082:6;12076:13;12043:58;:::i;:::-;12186:1;12182;12177:3;12173:11;12169:19;12161:4;12153:6;12149:17;12143:24;12139:50;12132:4;12121:9;12117:20;12110:80;12246:4;12238:6;12234:17;12228:24;12221:4;12210:9;12206:20;12199:54;12309:4;12301:6;12297:17;12291:24;12284:4;12273:9;12269:20;12262:54;12372:4;12364:6;12360:17;12354:24;12347:4;12336:9;12332:20;12325:54;12437:4;12429:6;12425:17;12419:24;12410:6;12399:9;12395:22;12388:56;12502:4;12494:6;12490:17;12484:24;12475:6;12464:9;12460:22;12453:56;11812:703;;;;:::o;12520:315::-;12588:6;12596;12649:2;12637:9;12628:7;12624:23;12620:32;12617:52;;;12665:1;12662;12655:12;12617:52;12701:9;12688:23;12678:33;;12761:2;12750:9;12746:18;12733:32;12774:31;12799:5;12774:31;:::i;:::-;12824:5;12814:15;;;12520:315;;;;;:::o;13489:614::-;13667:4;13709:3;13698:9;13694:19;13686:27;;13722:58;13770:9;13761:6;13755:13;13722:58;:::i;:::-;13836:4;13828:6;13824:17;13818:24;13811:4;13800:9;13796:20;13789:54;13899:4;13891:6;13887:17;13881:24;13874:4;13863:9;13859:20;13852:54;13962:4;13954:6;13950:17;13944:24;13937:4;13926:9;13922:20;13915:54;14025:4;14017:6;14013:17;14007:24;14000:4;13989:9;13985:20;13978:54;14090:4;14082:6;14078:17;14072:24;14063:6;14052:9;14048:22;14041:56;13489:614;;;;:::o;14108:356::-;14171:5;14219:4;14207:9;14202:3;14198:19;14194:30;14191:50;;;14237:1;14234;14227:12;14191:50;14259:22;;:::i;:::-;14250:31;;14317:9;14304:23;14297:5;14290:38;14388:2;14377:9;14373:18;14360:32;14355:2;14348:5;14344:14;14337:56;14453:2;14442:9;14438:18;14425:32;14420:2;14413:5;14409:14;14402:56;14108:356;;;;:::o;14469:470::-;14573:6;14626:3;14614:9;14605:7;14601:23;14597:33;14594:53;;;14643:1;14640;14633:12;14594:53;14669:22;;:::i;:::-;14714:54;14760:7;14749:9;14714:54;:::i;:::-;14707:5;14700:69;14821:2;14810:9;14806:18;14793:32;14834:33;14859:7;14834:33;:::i;:::-;14894:4;14883:16;;14876:33;14887:5;14469:470;-1:-1:-1;;;14469:470:182:o;14944:218::-;15054:6;15107:3;15095:9;15086:7;15082:23;15078:33;15075:53;;;15124:1;15121;15114:12;15167:301;15226:6;15279:2;15267:9;15258:7;15254:23;15250:32;15247:52;;;15295:1;15292;15285:12;15247:52;15334:9;15321:23;-1:-1:-1;;;;;15377:5:182;15373:46;15366:5;15363:57;15353:85;;15434:1;15431;15424:12;15473:898;15550:6;15558;15611:2;15599:9;15590:7;15586:23;15582:32;15579:52;;;15627:1;15624;15617:12;15579:52;15666:9;15653:23;15685:31;15710:5;15685:31;:::i;:::-;15735:5;-1:-1:-1;15759:2:182;15797:18;;;15784:32;-1:-1:-1;;;;;15865:14:182;;;15862:34;;;15892:1;15889;15882:12;15862:34;15930:6;15919:9;15915:22;15905:32;;15975:7;15968:4;15964:2;15960:13;15956:27;15946:55;;15997:1;15994;15987:12;15946:55;16033:2;16020:16;16055:2;16051;16048:10;16045:36;;;16061:18;;:::i;:::-;16103:53;16146:2;16127:13;;-1:-1:-1;;16123:27:182;16119:36;;16103:53;:::i;:::-;16090:66;;16179:2;16172:5;16165:17;16219:7;16214:2;16209;16205;16201:11;16197:20;16194:33;16191:53;;;16240:1;16237;16230:12;16191:53;16295:2;16290;16286;16282:11;16277:2;16270:5;16266:14;16253:45;16339:1;16334:2;16329;16322:5;16318:14;16314:23;16307:34;;16360:5;16350:15;;;;;15473:898;;;;;:::o;16376:1616::-;16444:5;16492:4;16480:9;16475:3;16471:19;16467:30;16464:50;;;16510:1;16507;16500:12;16464:50;16532:22;;:::i;:::-;16523:31;;16590:9;16577:23;16570:5;16563:38;16620:2;16673;16662:9;16658:18;16645:32;-1:-1:-1;;;;;16737:2:182;16729:6;16726:14;16723:34;;;16753:1;16750;16743:12;16723:34;16776:22;;;;16828:4;16814:12;;;16810:23;16807:43;;;16846:1;16843;16836:12;16807:43;16874:22;;:::i;:::-;16934:2;16921:16;16962:2;16952:8;16949:16;16946:36;;;16978:1;16975;16968:12;16946:36;17007:52;17055:3;17044:8;17040:2;17036:17;17007:52;:::i;:::-;16998:7;16991:69;;17106:2;17102;17098:11;17085:25;17135:2;17125:8;17122:16;17119:36;;;17151:1;17148;17141:12;17119:36;17174:17;;17222:4;17214:13;;17210:23;-1:-1:-1;17200:51:182;;17247:1;17244;17237:12;17200:51;17283:2;17270:16;17306:60;17322:43;17362:2;17322:43;:::i;17306:60::-;17400:15;;;17482:1;17478:10;;;;17470:19;;17466:28;;;17431:12;;;;17506:15;;;17503:35;;;17534:1;17531;17524:12;17503:35;17558:11;;;;17578:142;17594:6;17589:3;17586:15;17578:142;;;17660:17;;17648:30;;17611:12;;;;17698;;;;17578:142;;;17736:16;;;17729:31;-1:-1:-1;;;17806:4:182;17798:13;;17785:27;17824:16;;;17821:36;;;17853:1;17850;17843:12;17821:36;17893:52;17941:3;17930:8;17926:2;17922:17;17893:52;:::i;:::-;17886:4;17877:7;17873:18;17866:80;;17978:7;17973:2;17966:5;17962:14;17955:31;;;;;16376:1616;;;;:::o;17997:529::-;18075:5;18123:4;18111:9;18106:3;18102:19;18098:30;18095:50;;;18141:1;18138;18131:12;18095:50;18163:22;;:::i;:::-;18154:31;;18221:9;18208:23;-1:-1:-1;;;;;18246:6:182;18243:30;18240:50;;;18286:1;18283;18276:12;18240:50;18313:68;18377:3;18368:6;18357:9;18353:22;18313:68;:::i;:::-;18306:5;18299:83;;18434:2;18423:9;18419:18;18406:32;18447:33;18472:7;18447:33;:::i;:::-;18507:2;18496:14;;18489:31;18500:5;17997:529;-1:-1:-1;;17997:529:182:o;18531:394::-;18640:6;18693:2;18681:9;18672:7;18668:23;18664:32;18661:52;;;18709:1;18706;18699:12;18661:52;18749:9;18736:23;-1:-1:-1;;;;;18774:6:182;18771:30;18768:50;;;18814:1;18811;18804:12;18768:50;18837:82;18911:7;18902:6;18891:9;18887:22;18837:82;:::i;18930:418::-;18996:5;19044:4;19032:9;19027:3;19023:19;19019:30;19016:50;;;19062:1;19059;19052:12;19016:50;19095:2;19089:9;19137:4;19129:6;19125:17;19208:6;19196:10;19193:22;-1:-1:-1;;;;;19160:10:182;19157:34;19154:62;19151:88;;;19219:18;;:::i;:::-;19255:2;19248:22;19318:23;;19303:39;;-1:-1:-1;19288:6:182;18930:418;-1:-1:-1;18930:418:182:o;19353:611::-;19460:6;19513:2;19501:9;19492:7;19488:23;19484:32;19481:52;;;19529:1;19526;19519:12;19481:52;19555:22;;:::i;:::-;19600:57;19649:7;19638:9;19600:57;:::i;:::-;19593:5;19586:72;19710:2;19699:9;19695:18;19682:32;19723:33;19748:7;19723:33;:::i;:::-;19783:2;19772:14;;19765:31;19848:2;19833:18;;19820:32;19861:33;19820:32;19861:33;:::i;:::-;19921:2;19910:14;;19903:31;19914:5;19353:611;-1:-1:-1;;;19353:611:182:o;20367:250::-;20452:1;20462:113;20476:6;20473:1;20470:13;20462:113;;;20552:11;;;20546:18;20533:11;;;20526:39;20498:2;20491:10;20462:113;;;-1:-1:-1;;20609:1:182;20591:16;;20584:27;20367:250::o;20622:271::-;20664:3;20702:5;20696:12;20729:6;20724:3;20717:19;20745:76;20814:6;20807:4;20802:3;20798:14;20791:4;20784:5;20780:16;20745:76;:::i;:::-;20875:2;20854:15;-1:-1:-1;;20850:29:182;20841:39;;;;20882:4;20837:50;;20622:271;-1:-1:-1;;20622:271:182:o;20898:220::-;21047:2;21036:9;21029:21;21010:4;21067:45;21108:2;21097:9;21093:18;21085:6;21067:45;:::i;21123:247::-;21182:6;21235:2;21223:9;21214:7;21210:23;21206:32;21203:52;;;21251:1;21248;21241:12;21203:52;21290:9;21277:23;21309:31;21334:5;21309:31;:::i;21375:439::-;21428:3;21466:5;21460:12;21493:6;21488:3;21481:19;21519:4;21548;21543:3;21539:14;21532:21;;21587:4;21580:5;21576:16;21610:1;21620:169;21634:6;21631:1;21628:13;21620:169;;;21695:13;;21683:26;;21729:12;;;;21764:15;;;;21656:1;21649:9;21620:169;;;-1:-1:-1;21805:3:182;;21375:439;-1:-1:-1;;;;;21375:439:182:o;21819:1081::-;21908:5;21902:12;21897:3;21890:25;21872:3;21934:4;21984:2;21977:5;21973:14;21967:21;22018:4;22013:2;22008:3;22004:12;21997:26;22060:12;22054:19;22105:4;22098;22093:3;22089:14;22082:28;22131:59;22185:3;22180;22176:13;22160:14;22131:59;:::i;:::-;22227:21;;;22221:28;-1:-1:-1;;22311:14:182;;;22307:23;;22300:4;22291:14;;22284:47;22380:21;;22410:20;;;22484:23;;;;-1:-1:-1;22525:1:182;;22268:7;;22448:13;;;;22535:175;22549:6;22546:1;22543:13;22535:175;;;22612:13;;22598:28;;22685:15;;;;22571:1;22564:9;;;;;22648:14;;;;22535:175;;;22539:3;22765:4;22751:12;22747:23;22741:30;22719:52;;22823:2;22817:3;22810:5;22806:15;22802:24;22796:3;22791;22787:13;22780:47;22843:51;22888:5;22872:14;22843:51;:::i;:::-;22836:58;21819:1081;-1:-1:-1;;;;;;;;;21819:1081:182:o;22905:1146::-;23088:2;23077:9;23070:21;23051:4;23126:6;23120:13;23169:4;23164:2;23153:9;23149:18;23142:32;23211:12;23205:19;23261:4;23255:3;23244:9;23240:19;23233:33;23289:65;23349:3;23338:9;23334:19;23318:14;23289:65;:::i;:::-;23275:79;;23409:2;23395:12;23391:21;23385:28;23482:3;23478:8;23466:9;23458:6;23454:22;23450:37;23444:3;23433:9;23429:19;23422:66;23511:52;23556:6;23540:14;23511:52;:::i;:::-;23497:66;;;23624:4;23610:12;23606:23;23600:30;23594:3;23583:9;23579:19;23572:59;23706:4;23692:12;23688:23;23682:30;23675:38;23668:46;23662:3;23651:9;23647:19;23640:75;23764:2;23756:6;23752:15;23746:22;23724:44;;23777:56;23827:4;23816:9;23812:20;23796:14;-1:-1:-1;;;;;7341:31:182;7329:44;;7275:104;23777:56;23889:4;23881:6;23877:17;23871:24;23864:4;23853:9;23849:20;23842:54;23952:4;23944:6;23940:17;23934:24;23927:4;23916:9;23912:20;23905:54;24015:4;24007:6;24003:17;23997:24;23990:4;23979:9;23975:20;23968:54;24039:6;24031:14;;;;22905:1146;;;;:::o;24874:270::-;25074:3;25059:19;;25087:51;25063:9;25120:6;25087:51;:::i;26129:254::-;26220:6;26273:2;26261:9;26252:7;26248:23;26244:32;26241:52;;;26289:1;26286;26279:12;26241:52;26312:65;26369:7;26358:9;26312:65;:::i;26388:679::-;26449:5;26497:4;26485:9;26480:3;26476:19;26472:30;26469:50;;;26515:1;26512;26505:12;26469:50;26548:2;26542:9;26590:4;26582:6;26578:17;26661:6;26649:10;26646:22;-1:-1:-1;;;;;26613:10:182;26610:34;26607:62;26604:88;;;26672:18;;:::i;:::-;26712:10;26708:2;26701:22;;26741:6;26732:15;;26784:9;26771:23;26763:6;26756:39;26856:2;26845:9;26841:18;26828:32;26823:2;26815:6;26811:15;26804:57;26922:2;26911:9;26907:18;26894:32;26889:2;26881:6;26877:15;26870:57;26988:2;26977:9;26973:18;26960:32;26955:2;26947:6;26943:15;26936:57;27055:3;27044:9;27040:19;27027:33;27021:3;27013:6;27009:16;27002:59;;26388:679;;;;:::o;27072:489::-;27140:5;27188:6;27176:9;27171:3;27167:19;27163:32;27160:52;;;27208:1;27205;27198:12;27160:52;27230:22;;:::i;:::-;27221:31;;27289:9;27276:23;27308:33;27333:7;27308:33;:::i;:::-;27350:22;;27404:57;27457:3;27452:2;27437:18;;27404:57;:::i;:::-;27399:2;27392:5;27388:14;27381:81;27496:58;27550:3;27544;27533:9;27529:19;27496:58;:::i;27566:481::-;27675:6;27728:3;27716:9;27707:7;27703:23;27699:33;27696:53;;;27745:1;27742;27735:12;27696:53;27771:22;;:::i;:::-;27816:59;27867:7;27856:9;27816:59;:::i;:::-;27809:5;27802:74;27928:3;27917:9;27913:19;27900:33;27942;27967:7;27942:33;:::i;28316:174::-;28394:5;28439:3;28430:6;28425:3;28421:16;28417:26;28414:46;;;28456:1;28453;28446:12;28495:889;28767:6;28775;28783;28791;28799;28852:3;28840:9;28831:7;28827:23;28823:33;28820:53;;;28869:1;28866;28859:12;28820:53;28908:9;28895:23;28927:31;28952:5;28927:31;:::i;:::-;28977:5;-1:-1:-1;29001:81:182;29074:7;29069:2;29054:18;;29001:81;:::i;:::-;28991:91;;29101:82;29175:7;29169:3;29158:9;29154:19;29101:82;:::i;:::-;29091:92;;29202:75;29269:7;29263:3;29252:9;29248:19;29202:75;:::i;:::-;29192:85;;29296:82;29370:7;29364:3;29353:9;29349:19;29296:82;:::i;:::-;29286:92;;28495:889;;;;;;;;:::o;29389:626::-;29486:6;29494;29547:2;29535:9;29526:7;29522:23;29518:32;29515:52;;;29563:1;29560;29553:12;29515:52;29603:9;29590:23;-1:-1:-1;;;;;29673:2:182;29665:6;29662:14;29659:34;;;29689:1;29686;29679:12;29659:34;29727:6;29716:9;29712:22;29702:32;;29772:7;29765:4;29761:2;29757:13;29753:27;29743:55;;29794:1;29791;29784:12;29743:55;29834:2;29821:16;29860:2;29852:6;29849:14;29846:34;;;29876:1;29873;29866:12;29846:34;29929:7;29924:2;29914:6;29911:1;29907:14;29903:2;29899:23;29895:32;29892:45;29889:65;;;29950:1;29947;29940:12;29889:65;29981:2;29973:11;;;;;30003:6;;-1:-1:-1;29389:626:182;;-1:-1:-1;;;;29389:626:182:o;30020:801::-;30180:4;30209:2;30249;30238:9;30234:18;30279:2;30268:9;30261:21;30302:6;30337;30331:13;30368:6;30360;30353:22;30406:2;30395:9;30391:18;30384:25;;30468:2;30458:6;30455:1;30451:14;30440:9;30436:30;30432:39;30418:53;;30506:2;30498:6;30494:15;30527:1;30537:255;30551:6;30548:1;30545:13;30537:255;;;30644:2;30640:7;30628:9;30620:6;30616:22;30612:36;30607:3;30600:49;30672:40;30705:6;30696;30690:13;30672:40;:::i;:::-;30662:50;-1:-1:-1;30770:12:182;;;;30735:15;;;;30573:1;30566:9;30537:255;;;-1:-1:-1;30809:6:182;;30020:801;-1:-1:-1;;;;;;;30020:801:182:o;30826:323::-;30912:5;30906:12;30901:3;30894:25;30968:4;30961:5;30957:16;30951:23;30944:4;30939:3;30935:14;30928:47;31024:4;31017:5;31013:16;31007:23;31000:4;30995:3;30991:14;30984:47;31080:4;31073:5;31069:16;31063:23;31056:4;31051:3;31047:14;31040:47;31136:4;31129:5;31125:16;31119:23;31112:4;31107:3;31103:14;31096:47;;;30826:323::o;31154:551::-;31399:13;;-1:-1:-1;;;;;31395:39:182;31377:58;;31482:4;31470:17;;;31464:24;31364:3;31349:19;;;31497:68;;31544:20;;31464:24;31497:68;:::i;:::-;;31614:4;31606:6;31602:17;31596:24;31629:70;31693:4;31682:9;31678:20;31662:14;31629:70;:::i;32006:264::-;31792:12;;-1:-1:-1;;;;;31788:38:182;31776:51;;31876:4;31865:16;;;31859:23;31843:14;;;31836:47;31932:4;31921:16;;;31915:23;31899:14;;;31892:47;31988:4;31977:16;;;31971:23;31955:14;;;31948:47;32202:3;32187:19;;32215:49;31710:291;33208:209;33309:6;33362:3;33350:9;33341:7;33337:23;33333:33;33330:53;;;33379:1;33376;33369:12;33422:159;33486:5;33531:2;33522:6;33517:3;33513:16;33509:25;33506:45;;;33547:1;33544;33537:12;33586:247;33677:6;33730:2;33718:9;33709:7;33705:23;33701:32;33698:52;;;33746:1;33743;33736:12;33698:52;33769:58;33819:7;33808:9;33769:58;:::i;33838:500::-;33899:5;33947:4;33935:9;33930:3;33926:19;33922:30;33919:50;;;33965:1;33962;33955:12;33919:50;33987:22;;:::i;:::-;33978:31;;34046:9;34033:23;34065:33;34090:7;34065:33;:::i;:::-;34107:22;;34189:2;34174:18;;;34161:32;34145:14;;;34138:56;34246:2;34231:18;;34218:32;34259:33;34218:32;34259:33;:::i;34343:399::-;34414:5;34462:4;34450:9;34445:3;34441:19;34437:30;34434:50;;;34480:1;34477;34470:12;34434:50;34502:22;;:::i;:::-;34493:31;;34547:48;34591:3;34580:9;34547:48;:::i;:::-;34540:5;34533:63;34648:2;34637:9;34633:18;34620:32;34661:33;34686:7;34661:33;:::i;34747:263::-;34849:6;34902:3;34890:9;34881:7;34877:23;34873:33;34870:53;;;34919:1;34916;34909:12;34870:53;34942:62;34996:7;34985:9;34942:62;:::i;36046:597::-;36275:4;36317:3;36306:9;36302:19;36294:27;;36348:6;36337:9;36330:25;36404:6;36391:20;36386:2;36375:9;36371:18;36364:48;36473:2;36465:6;36461:15;36448:29;36443:2;36432:9;36428:18;36421:57;36525:2;36517:6;36513:15;36500:29;36538:31;36563:5;36538:31;:::i;:::-;-1:-1:-1;;;;;36605:31:182;36600:2;36585:18;;;;36578:59;;;;36046:597;;-1:-1:-1;;36046:597:182:o;36927:1070::-;37193:6;37182:9;37175:25;37236:2;37231;37220:9;37216:18;37209:30;37156:4;37287:6;37274:20;37374:2;37370:7;37361:6;37345:14;37341:27;37337:41;37317:18;37313:66;37303:94;;37393:1;37390;37383:12;37303:94;37419:31;;37527:2;37516:14;;;37473:19;-1:-1:-1;;;;;37542:30:182;;37539:50;;;37585:1;37582;37575:12;37539:50;37634:6;37618:14;37614:27;37605:7;37601:41;37598:61;;;37655:1;37652;37645:12;37598:61;37695:2;37690;37679:9;37675:18;37668:30;37735:6;37729:3;37718:9;37714:19;37707:35;37794:6;37785:7;37779:3;37768:9;37764:19;37751:50;37851:1;37845:3;37836:6;37825:9;37821:22;37817:32;37810:43;37914:2;37906:6;37902:15;37889:29;37884:2;37873:9;37869:18;37862:57;37987:3;37980:2;37976:7;37971:2;37963:6;37959:15;37955:29;37944:9;37940:45;37936:55;37928:63;;;;36927:1070;;;;;:::o;38002:241::-;38093:6;38146:2;38134:9;38125:7;38121:23;38117:32;38114:52;;;38162:1;38159;38152:12;38114:52;38185;38229:7;38218:9;38185:52;:::i;38248:948::-;38548:6;38537:9;38530:25;38591:2;38586;38575:9;38571:18;38564:30;38511:4;38629:6;38623:13;38672:2;38667;38656:9;38652:18;38645:30;38718:12;38712:19;38706:3;38695:9;38691:19;38684:48;38807:2;38793:12;38789:21;38783:28;38776:36;38769:44;38763:3;38752:9;38748:19;38741:73;38889:2;38875:12;38871:21;38865:28;38858:36;38851:44;38845:3;38834:9;38830:19;38823:73;38951:4;38937:12;38933:23;38927:30;38905:52;;38994:3;38988;38977:9;38973:19;38966:32;39018:65;39078:3;39067:9;39063:19;39047:14;39018:65;:::i;:::-;39143:2;39131:15;;;;39125:22;-1:-1:-1;;;;;39121:48:182;39114:4;39099:20;;;;39092:78;;;;-1:-1:-1;39007:76:182;;38248:948;-1:-1:-1;;38248:948:182:o;39487:276::-;39573:6;39626:2;39614:9;39605:7;39601:23;39597:32;39594:52;;;39642:1;39639;39632:12;39594:52;39674:9;39668:16;39713:1;39706:5;39703:12;39693:40;;39729:1;39726;39719:12;39768:127;39829:10;39824:3;39820:20;39817:1;39810:31;39860:4;39857:1;39850:15;39884:4;39881:1;39874:15;39900:128;39967:9;;;39988:11;;;39985:37;;;40002:18;;:::i;40033:217::-;40073:1;40099;40089:132;;40143:10;40138:3;40134:20;40131:1;40124:31;40178:4;40175:1;40168:15;40206:4;40203:1;40196:15;40089:132;-1:-1:-1;40235:9:182;;40033:217::o;40470:669::-;40584:6;40637:3;40625:9;40616:7;40612:23;40608:33;40605:53;;;40654:1;40651;40644:12;40605:53;40680:22;;:::i;:::-;40731:9;40725:16;40718:5;40711:31;40795:2;40784:9;40780:18;40774:25;40769:2;40762:5;40758:14;40751:49;40853:2;40842:9;40838:18;40832:25;40827:2;40820:5;40816:14;40809:49;40911:2;40900:9;40896:18;40890:25;40885:2;40878:5;40874:14;40867:49;40970:3;40959:9;40955:19;40949:26;40943:3;40936:5;40932:15;40925:51;41021:3;41010:9;41006:19;41000:26;41035:33;41060:7;41035:33;:::i;:::-;41095:3;41084:15;;41077:32;41088:5;40470:669;-1:-1:-1;;;40470:669:182:o;41144:484::-;41235:12;;-1:-1:-1;;;;;41231:38:182;41219:51;;41319:4;41308:16;;;41302:23;41286:14;;;41279:47;41375:4;41364:16;;;41358:23;41342:14;;;41335:47;41431:4;41420:16;;;41414:23;41398:14;;;41391:47;41487:4;41476:16;;;41470:23;41454:14;;;41447:47;41257:3;41532:16;;;41526:23;41510:14;;;41503:47;41613:4;41602:16;;;41596:23;41589:31;41582:39;41566:14;;41559:63;41144:484::o;41633:360::-;41718:58;41772:3;41764:5;41758:12;41718:58;:::i;:::-;41822:4;41811:16;;41805:23;-1:-1:-1;;;;;41898:21:182;;;41891:4;41882:14;;41875:45;41975:4;41964:16;;;41958:23;41954:32;41945:6;41936:16;;;41929:58;41633:360::o;41998:425::-;42306:25;;;42293:3;42278:19;;42340:77;42413:2;42398:18;;42390:6;42340:77;:::i;42428:184::-;42498:6;42551:2;42539:9;42530:7;42526:23;42522:32;42519:52;;;42567:1;42564;42557:12;42519:52;-1:-1:-1;42590:16:182;;42428:184;-1:-1:-1;42428:184:182:o;43559:252::-;43701:9;43738:67;43790:14;43783:5;43738:67;:::i;43816:391::-;44100:25;;;44087:3;44072:19;;44134:67;44197:2;44182:18;;44174:6;44134:67;:::i;44212:545::-;44284:5;44332:4;44320:9;44315:3;44311:19;44307:30;44304:50;;;44350:1;44347;44340:12;44304:50;44372:22;;:::i;:::-;44363:31;;44424:9;44418:16;44443:33;44468:7;44443:33;:::i;:::-;44485:22;;44552:2;44537:18;;44531:25;44565:30;44531:25;44565:30;:::i;:::-;44627:7;44622:2;44615:5;44611:14;44604:31;;44688:2;44677:9;44673:18;44667:25;44662:2;44655:5;44651:14;44644:49;44746:2;44735:9;44731:18;44725:25;44720:2;44713:5;44709:14;44702:49;44212:545;;;;:::o;44762:784::-;44874:6;44927:3;44915:9;44906:7;44902:23;44898:33;44895:53;;;44944:1;44941;44934:12;44895:53;44970:22;;:::i;:::-;45015:63;45070:7;45059:9;45015:63;:::i;:::-;45008:5;45001:78;45124:3;45113:9;45109:19;45103:26;45138:33;45163:7;45138:33;:::i;:::-;45205:7;45198:4;45191:5;45187:16;45180:33;;45268:3;45257:9;45253:19;45247:26;45240:4;45233:5;45229:16;45222:52;45329:3;45318:9;45314:19;45308:26;45301:4;45294:5;45290:16;45283:52;45389:4;45378:9;45374:20;45368:27;45362:3;45355:5;45351:15;45344:52;45450:3;45439:9;45435:19;45429:26;45423:3;45416:5;45412:15;45405:51;45510:3;45499:9;45495:19;45489:26;45483:3;45476:5;45472:15;45465:51;45535:5;45525:15;;;44762:784;;;;:::o;45551:235::-;45681:9;45718:62;45765:14;45758:5;45718:62;:::i;46189:652::-;46302:6;46355:3;46343:9;46334:7;46330:23;46326:33;46323:53;;;46372:1;46369;46362:12;46323:53;46398:22;;:::i;:::-;46443:63;46498:7;46487:9;46443:63;:::i;:::-;46436:5;46429:78;46562:3;46551:9;46547:19;46541:26;46534:4;46527:5;46523:16;46516:52;46623:3;46612:9;46608:19;46602:26;46595:4;46588:5;46584:16;46577:52;46684:4;46673:9;46669:20;46663:27;46656:4;46649:5;46645:16;46638:53;46745:3;46734:9;46730:19;46724:26;46718:3;46711:5;46707:15;46700:51;46805:3;46794:9;46790:19;46784:26;46778:3;46771:5;46767:15;46760:51;46830:5;46820:15;;;46189:652;;;;:::o;46846:603::-;47144:25;;;47188:13;;47237:9;;47232:2;47217:18;;;47210:37;;;;47289:11;;;47283:18;47278:2;47263:18;;;47256:46;;;;47344:11;;;47338:18;47333:2;47318:18;;47311:46;47404:15;47398:22;-1:-1:-1;;;;;47394:48:182;47388:3;47373:19;;47366:77;47131:3;47116:19;;46846:603::o;47804:482::-;47922:5;47909:19;47904:3;47897:32;47977:4;47970:5;47966:16;47953:30;47992:33;48017:7;47992:33;:::i;:::-;-1:-1:-1;;;;;48057:33:182;48050:4;48041:14;;48034:57;48147:4;48136:16;;;48123:30;48107:14;;;48100:54;48210:4;48199:16;;;48186:30;48170:14;;;48163:54;48273:4;48262:16;;;48249:30;48233:14;;48226:54;47804:482::o;48291:433::-;48599:25;;;48586:3;48571:19;;48633:85;48714:2;48699:18;;48691:6;48633:85;:::i;48729:306::-;48817:6;48825;48833;48886:2;48874:9;48865:7;48861:23;48857:32;48854:52;;;48902:1;48899;48892:12;48854:52;48931:9;48925:16;48915:26;;48981:2;48970:9;48966:18;48960:25;48950:35;;49025:2;49014:9;49010:18;49004:25;48994:35;;48729:306;;;;;:::o;49040:505::-;49376:25;;;49363:3;49348:19;;49410:85;49491:2;49476:18;;49468:6;49410:85;:::i;:::-;49532:6;49526:3;49515:9;49511:19;49504:35;49040:505;;;;;;:::o;49874:1304::-;49948:3;49992:5;49986:12;50019:4;50014:3;50007:17;50062:12;50056:19;50049:4;50044:3;50040:14;50033:43;50095:4;50154:2;50140:12;50136:21;50130:28;50108:50;;50188:4;50183:2;50178:3;50174:12;50167:26;50230:14;50224:21;50276:2;50270:3;50265;50261:13;50254:25;50300:59;50354:3;50349;50345:13;50329:14;50300:59;:::i;:::-;50396:23;;;50390:30;-1:-1:-1;;50482:14:182;;;50478:23;;50472:3;50463:13;;50456:46;50551:21;;50581:20;;;50655:23;;;;-1:-1:-1;50696:1:182;;50439:8;;50619:13;;;;50706:175;50720:6;50717:1;50714:13;50706:175;;;50783:13;;50769:28;;50856:15;;;;50742:1;50735:9;;;;;50819:14;;;;50706:175;;;50710:3;50938:4;50922:14;50918:25;50912:32;50890:54;;50996:2;50990:3;50983:5;50979:15;50975:24;50969:3;50964;50960:13;50953:47;51022:51;51067:5;51051:14;51022:51;:::i;:::-;51113:14;;;51107:21;-1:-1:-1;;;;;51103:47:182;51089:12;;;;51082:69;;;;-1:-1:-1;51009:64:182;;49874:1304;-1:-1:-1;;;;;49874:1304:182:o;51183:436::-;51473:6;51462:9;51455:25;51516:2;51511;51500:9;51496:18;51489:30;51436:4;51536:77;51609:2;51598:9;51594:18;51586:6;51536:77;:::i;52896:368::-;53166:25;;;53153:3;53138:19;;53200:58;53254:2;53239:18;;53231:6;31792:12;;-1:-1:-1;;;;;31788:38:182;31776:51;;31876:4;31865:16;;;31859:23;31843:14;;;31836:47;31932:4;31921:16;;;31915:23;31899:14;;;31892:47;31988:4;31977:16;;;31971:23;31955:14;;31948:47;31710:291;53700:597;53815:6;53868:3;53856:9;53847:7;53843:23;53839:33;53836:53;;;53885:1;53882;53875:12;53836:53;53911:22;;:::i;:::-;53962:9;53956:16;53949:5;53942:31;54026:2;54015:9;54011:18;54005:25;54000:2;53993:5;53989:14;53982:49;54084:2;54073:9;54069:18;54063:25;54058:2;54051:5;54047:14;54040:49;54142:2;54131:9;54127:18;54121:25;54116:2;54109:5;54105:14;54098:49;54201:3;54190:9;54186:19;54180:26;54174:3;54167:5;54163:15;54156:51;54261:3;54250:9;54246:19;54240:26;54234:3;54227:5;54223:15;54216:51;54286:5;54276:15;;;53700:597;;;;:::o;54302:129::-;-1:-1:-1;;;;;54380:5:182;54376:30;54369:5;54366:41;54356:69;;54421:1;54418;54411:12;54436:501;54547:6;54600:2;54588:9;54579:7;54575:23;54571:32;54568:52;;;54616:1;54613;54606:12;54568:52;54642:22;;:::i;:::-;54694:9;54688:16;54713:33;54738:7;54713:33;:::i;:::-;54755:22;;54822:2;54807:18;;54801:25;54835:32;54801:25;54835:32;:::i;54942:516::-;55157:4;55199:2;55188:9;55184:18;55176:26;;55229:6;55218:9;55211:25;55285:6;55272:20;55267:2;55256:9;55252:18;55245:48;55340:2;55332:6;55328:15;55315:29;55353:31;55378:5;55353:31;:::i;:::-;-1:-1:-1;;;;;55420:31:182;55415:2;55400:18;;;;55393:59;;;;54942:516;;-1:-1:-1;;54942:516:182:o;55463:782::-;55716:4;55758:3;55747:9;55743:19;55735:27;;55789:6;55778:9;55771:25;55821:6;55815:13;55864:1;55860;55855:3;55851:11;55847:19;55917:2;55912;55906:9;55902:18;55897:2;55886:9;55882:18;55875:46;55964:2;55960;55956:11;55950:18;55977:66;56039:2;56028:9;56024:18;56010:12;55977:66;:::i;:::-;;56088:2;56084;56080:11;56074:18;56052:40;;56101:69;56165:3;56154:9;56150:19;56134:14;56101:69;:::i;:::-;56235:2;56229;56221:6;56217:15;56211:22;56207:31;56201:3;56190:9;56186:19;56179:60;;;55463:782;;;;;:::o;56250:246::-;56344:6;56397:2;56385:9;56376:7;56372:23;56368:32;56365:52;;;56413:1;56410;56403:12;56365:52;56436:54;56482:7;56471:9;56436:54;:::i;56501:540::-;56614:5;56601:19;56596:3;56589:32;56677:4;56670:5;56666:16;56653:30;56646:4;56641:3;56637:14;56630:54;56740:4;56733:5;56729:16;56716:30;56709:4;56704:3;56700:14;56693:54;56803:4;56796:5;56792:16;56779:30;56772:4;56767:3;56763:14;56756:54;56866:4;56859:5;56855:16;56842:30;56835:4;56830:3;56826:14;56819:54;56921:4;56914:5;56910:16;56897:30;56936:33;56961:7;56936:33;:::i;:::-;-1:-1:-1;;;;;57001:33:182;57022:3;56985:14;;;;56978:57;;;;-1:-1:-1;56501:540:182:o;57493:382::-;57606:5;57593:19;57621:33;57646:7;57621:33;:::i;:::-;-1:-1:-1;;;;;57675:33:182;57663:46;;57757:4;57746:16;;57733:30;57772:32;57733:30;57772:32;:::i;:::-;-1:-1:-1;;;;;57840:7:182;57836:32;57829:4;57824:3;57820:14;57813:56;;57493:382;;:::o;57880:966::-;57991:5;57978:19;58006:33;58031:7;58006:33;:::i;:::-;-1:-1:-1;;;;;58098:16:182;;;58086:29;;58163:4;58152:16;;58139:30;;58178:33;58139:30;58178:33;:::i;:::-;58243:16;;;58236:4;58227:14;;58220:40;58308:4;58297:16;;58284:30;;58323:33;58284:30;58323:33;:::i;:::-;58388:16;;;58381:4;58372:14;;58365:40;58453:4;58442:16;;58429:30;;58468:33;58429:30;58468:33;:::i;:::-;58533:16;;;58526:4;58517:14;;58510:40;58598:4;58587:16;;58574:30;;58613:33;58574:30;58613:33;:::i;:::-;58678:16;;;58671:4;58662:14;;58655:40;58743:4;58732:16;;58719:30;;58758:33;58719:30;58758:33;:::i;:::-;58836:2;58827:7;58823:16;58816:4;58811:3;58807:14;58800:40;;;57880:966;;:::o;58851:1118::-;59517:25;;;-1:-1:-1;;;;;59578:32:182;;59573:2;59558:18;;59551:60;59504:3;59489:19;;59620:80;59696:2;59681:18;;59673:6;59620:80;:::i;:::-;57147:19;;59786:3;59771:19;;57135:32;57223:4;57212:16;;57199:30;57183:14;;;57176:54;57286:4;57275:16;;57262:30;57246:14;;;57239:54;57349:4;57338:16;;57325:30;57309:14;;;57302:54;57412:4;57401:16;;57388:30;57372:14;;;57365:54;57475:4;57464:16;;57451:30;57435:14;;;57428:54;59800:78;59873:3;59862:9;59858:19;59850:6;59800:78;:::i;:::-;59887:76;59958:3;59947:9;59943:19;59935:6;59887:76;:::i;:::-;58851:1118;;;;;;;;;:::o;59974:1021::-;60612:25;;;60599:3;60584:19;;60646:80;60722:2;60707:18;;60699:6;60646:80;:::i;:::-;57147:19;;60812:3;60797:19;;57135:32;57223:4;57212:16;;57199:30;57183:14;;;57176:54;57286:4;57275:16;;57262:30;57246:14;;;57239:54;57349:4;57338:16;;57325:30;57309:14;;;57302:54;57412:4;57401:16;;57388:30;57372:14;;;57365:54;57475:4;57464:16;;57451:30;57435:14;;;57428:54;60826:78;60899:3;60888:9;60884:19;60876:6;60826:78;:::i;:::-;60913:76;60984:3;60973:9;60969:19;60961:6;60913:76;:::i;:::-;59974:1021;;;;;;;;:::o;62135:388::-;62413:25;;;62400:3;62385:19;;62447:70;62513:2;62498:18;;62490:6;61978:19;;61966:32;;62054:4;62043:16;;;62030:30;62014:14;;;62007:54;62117:4;62106:16;;;62093:30;62077:14;;62070:54;61888:242;62528:460;62834:25;;;62821:3;62806:19;;62868:70;62934:2;62919:18;;62911:6;61978:19;;61966:32;;62054:4;62043:16;;;62030:30;62014:14;;;62007:54;62117:4;62106:16;;;62093:30;62077:14;;62070:54;61888:242;62868:70;62975:6;62969:3;62958:9;62954:19;62947:35;62528:460;;;;;;:::o;62993:245::-;63060:6;63113:2;63101:9;63092:7;63088:23;63084:32;63081:52;;;63129:1;63126;63119:12;63081:52;63161:9;63155:16;63180:28;63202:5;63180:28;:::i;63243:257::-;63342:6;63395:3;63383:9;63374:7;63370:23;63366:33;63363:53;;;63412:1;63409;63402:12;63363:53;63435:59;63486:7;63475:9;63435:59;:::i;64236:404::-;64530:25;;;64517:3;64502:19;;64564:70;64630:2;64615:18;;64607:6;63955:12;;64030:9;;-1:-1:-1;;;;;64026:18:182;;;64014:31;;64091:4;64083:13;;;64077:20;64061:14;;;64054:44;64148:4;64140:13;;;64134:20;64130:29;;64114:14;;;64107:53;;;;64202:16;;64196:23;64192:32;64185:4;64176:14;;;64169:56;63867:364;65257:252;65354:6;65407:2;65395:9;65386:7;65382:23;65378:32;65375:52;;;65423:1;65420;65413:12;65375:52;65446:57;65495:7;65484:9;65446:57;:::i;65793:416::-;65882:1;65919:5;65882:1;65933:270;65954:7;65944:8;65941:21;65933:270;;;66013:4;66009:1;66005:6;66001:17;65995:4;65992:27;65989:53;;;66022:18;;:::i;:::-;66072:7;66062:8;66058:22;66055:55;;;66092:16;;;;66055:55;66171:22;;;;66131:15;;;;65933:270;;;65937:3;65793:416;;;;;:::o;66214:806::-;66263:5;66293:8;66283:80;;-1:-1:-1;66334:1:182;66348:5;;66283:80;66382:4;66372:76;;-1:-1:-1;66419:1:182;66433:5;;66372:76;66464:4;66482:1;66477:59;;;;66550:1;66545:130;;;;66457:218;;66477:59;66507:1;66498:10;;66521:5;;;66545:130;66582:3;66572:8;66569:17;66566:43;;;66589:18;;:::i;:::-;-1:-1:-1;;66645:1:182;66631:16;;66660:5;;66457:218;;66759:2;66749:8;66746:16;66740:3;66734:4;66731:13;66727:36;66721:2;66711:8;66708:16;66703:2;66697:4;66694:12;66690:35;66687:77;66684:159;;;-1:-1:-1;66796:19:182;;;66828:5;;66684:159;66875:34;66900:8;66894:4;66875:34;:::i;:::-;66945:6;66941:1;66937:6;66933:19;66924:7;66921:32;66918:58;;;66956:18;;:::i;:::-;66994:20;;66214:806;-1:-1:-1;;;66214:806:182:o;67025:131::-;67085:5;67114:36;67141:8;67135:4;67114:36;:::i;67161:168::-;67234:9;;;67265;;67282:15;;;67276:22;;67262:37;67252:71;;67303:18;;:::i;67334:273::-;67402:6;67455:2;67443:9;67434:7;67430:23;67426:32;67423:52;;;67471:1;67468;67461:12;67423:52;67503:9;67497:16;67553:4;67546:5;67542:16;67535:5;67532:27;67522:55;;67573:1;67570;67563:12;67612:140;67670:5;67699:47;67740:4;67730:8;67726:19;67720:4;67699:47;:::i;67946:127::-;68007:10;68002:3;67998:20;67995:1;67988:31;68038:4;68035:1;68028:15;68062:4;68059:1;68052:15;68078:521;68155:4;68161:6;68221:11;68208:25;68315:2;68311:7;68300:8;68284:14;68280:29;68276:43;68256:18;68252:68;68242:96;;68334:1;68331;68324:12;68242:96;68361:33;;68413:20;;;-1:-1:-1;;;;;;68445:30:182;;68442:50;;;68488:1;68485;68478:12;68442:50;68521:4;68509:17;;-1:-1:-1;68552:14:182;68548:27;;;68538:38;;68535:58;;;68589:1;68586;68579:12;68535:58;68078:521;;;;;:::o;69105:287::-;69234:3;69272:6;69266:13;69288:66;69347:6;69342:3;69335:4;69327:6;69323:17;69288:66;:::i;:::-;69370:16;;;;;69105:287;-1:-1:-1;;69105:287:182:o",
    "linkReferences": {
      "src/market/libraries/CapsLibrary.sol": {
        "CapsLibrary": [
          { "start": 4826, "length": 20 },
          { "start": 6672, "length": 20 },
          { "start": 15788, "length": 20 }
        ]
      },
      "src/market/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 4115, "length": 20 },
          { "start": 7705, "length": 20 },
          { "start": 7866, "length": 20 },
          { "start": 8998, "length": 20 },
          { "start": 10899, "length": 20 }
        ]
      },
      "src/market/libraries/OfferLibrary.sol": {
        "OfferLibrary": [
          { "start": 5034, "length": 20 },
          { "start": 13033, "length": 20 }
        ]
      },
      "src/market/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 4723, "length": 20 },
          { "start": 5603, "length": 20 },
          { "start": 5938, "length": 20 },
          { "start": 6413, "length": 20 },
          { "start": 11342, "length": 20 },
          { "start": 11415, "length": 20 },
          { "start": 12009, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 7529, "length": 20 },
          { "start": 7628, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 4459, "length": 20 },
          { "start": 4561, "length": 20 },
          { "start": 5188, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 12182, "length": 20 },
          { "start": 12281, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 5713, "length": 20 },
          { "start": 5812, "length": 20 }
        ]
      },
      "src/market/libraries/actions/CopyLimitOrders.sol": {
        "CopyLimitOrders": [
          { "start": 9731, "length": 20 },
          { "start": 9830, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 13090, "length": 20 },
          { "start": 13189, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 10169, "length": 20 },
          { "start": 10302, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 11661, "length": 20 },
          { "start": 11760, "length": 20 },
          { "start": 11885, "length": 20 }
        ]
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 6196, "length": 20 },
          { "start": 6298, "length": 20 },
          { "start": 6556, "length": 20 }
        ]
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "PartialRepay": [
          { "start": 3357, "length": 20 },
          { "start": 3456, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 9477, "length": 20 },
          { "start": 9575, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 7336, "length": 20 },
          { "start": 7470, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 7095, "length": 20 },
          { "start": 7194, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5445, "length": 20 },
          { "start": 11076, "length": 20 },
          { "start": 11178, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 3878, "length": 20 },
          { "start": 3977, "length": 20 }
        ]
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3616, "length": 20 },
          { "start": 3715, "length": 20 },
          { "start": 4339, "length": 20 },
          { "start": 9232, "length": 20 },
          { "start": 9364, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 12340, "length": 20 },
          { "start": 12439, "length": 20 }
        ]
      }
    },
    "immutableReferences": {
      "43850": [
        { "start": 14458, "length": 32 },
        { "start": 14499, "length": 32 },
        { "start": 14859, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": "3746f858",
    "buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": "53e043d4",
    "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "19a7359b",
    "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": "1fcd4a34",
    "claim((uint256))": "f45bf01c",
    "collateralRatio(address)": "ca40742c",
    "compensate((uint256,uint256,uint256))": "8e572776",
    "compensateOnBehalfOf(((uint256,uint256,uint256),address))": "3ae6d7c3",
    "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": "f052e7a4",
    "copyLimitOrdersOnBehalfOf(((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))": "8628babd",
    "data()": "73d4a13a",
    "debtTokenAmountToCollateralTokenAmount(uint256)": "1970e5ea",
    "deposit((address,uint256,address))": "0cf8542f",
    "depositOnBehalfOf(((address,uint256,address),address))": "fa823af5",
    "feeConfig()": "1e5eb1d0",
    "getBorrowOfferAPR(address,uint256)": "f85c3cd4",
    "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "2ed28ba2",
    "getCreditPosition(uint256)": "76c1b82f",
    "getDebtPosition(uint256)": "b5ec7487",
    "getDebtPositionAssignedCollateral(uint256)": "54137c7e",
    "getLoanOfferAPR(address,uint256)": "2cc884c5",
    "getLoanStatus(uint256)": "1c4fd41c",
    "getPositionsCount()": "1ca3b0cb",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "37501921",
    "getSwapFee(uint256,uint256)": "2c60185c",
    "getUserCopyLimitOrders(address)": "b36116f6",
    "getUserView(address)": "5cbc51eb",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,(uint256,uint256,uint256,uint256,uint256,address),(uint256,uint256,uint256,uint256,uint256,uint256),(address,uint64),(address,address,address,address,address,address))": "a4752076",
    "isCreditPositionId(uint256)": "ccc96815",
    "isDebtPositionId(uint256)": "64eb0a71",
    "isDebtPositionLiquidatable(uint256)": "e5af06ce",
    "liquidate((uint256,uint256,uint256))": "e05001f5",
    "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": "3e3c119b",
    "multicall(bytes[])": "ac9650d8",
    "oracle()": "7dc0d1d0",
    "partialRepay((uint256,uint256,address))": "02f2855a",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proxiableUUID()": "52d1902d",
    "reinitialize(address)": "f7e7d1fd",
    "renounceRole(bytes32,address)": "36568abe",
    "repay((uint256,address))": "7f417c06",
    "revokeRole(bytes32,address)": "d547741f",
    "riskConfig()": "7c90a6ca",
    "selfLiquidate((uint256))": "fd17174a",
    "selfLiquidateOnBehalfOf(((uint256),address,address))": "536b9c79",
    "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": "ccd8d4d1",
    "sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": "4fd9a8a5",
    "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "d8d933a5",
    "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": "c73d9833",
    "setUserConfiguration((uint256,bool,bool,uint256[]))": "2e106f21",
    "setUserConfigurationOnBehalfOf(((uint256,bool,bool,uint256[]),address))": "134f3f96",
    "setVariablePoolBorrowRate(uint128)": "4cbd882c",
    "sizeFactory()": "fa7a5b10",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpause()": "3f4ba83a",
    "updateConfig((string,uint256))": "0317b9df",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "version()": "54fd4d50",
    "withdraw((address,uint256,address))": "2b4c9a20",
    "withdrawOnBehalfOf(((address,uint256,address),address))": "f54ae18b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"}],\"name\":\"INVALID_MARKET\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"crBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crAfter\",\"type\":\"uint256\"}],\"name\":\"MUST_IMPROVE_COLLATERAL_RATIO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_TENOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldBorrowRate\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newBorrowRate\",\"type\":\"uint128\"}],\"name\":\"VariablePoolBorrowRateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditLimitOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimitOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditMarketOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarketOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"compensate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct CompensateOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"compensateOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct CopyLimitOrdersParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"copyLimitOrders\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct CopyLimitOrdersParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct CopyLimitOrdersOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"copyLimitOrdersOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nextDebtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextCreditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableScaledTokenV1_5\",\"name\":\"borrowAToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"debtToken\",\"type\":\"address\"},{\"internalType\":\"contract IPool\",\"name\":\"variablePool\",\"type\":\"address\"}],\"internalType\":\"struct DataView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowATokenAmount\",\"type\":\"uint256\"}],\"name\":\"debtTokenAmountToCollateralTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct DepositOnBehalfOfParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"depositOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getBorrowOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getBuyCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCreditMarket.SwapDataBuyCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"getCreditPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"futureValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndexAtRepayment\",\"type\":\"uint256\"}],\"internalType\":\"struct DebtPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPositionAssignedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getLoanOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"getLoanStatus\",\"outputs\":[{\"internalType\":\"enum LoanStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPositionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getSellCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct SellCreditMarket.SwapDataSellCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getSwapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCopyLimitOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct UserCopyLimitOrders\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserView\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"loanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"borrowOffer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"}],\"internalType\":\"struct User\",\"name\":\"user\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct UserView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"f\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowAToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"r\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variablePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowATokenV1_5\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sizeFactory\",\"type\":\"address\"}],\"internalType\":\"struct InitializeDataParams\",\"name\":\"d\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"isCreditPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionLiquidatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateWithReplacementParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidateWithReplacement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitBorrowToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct PartialRepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"partialRepay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISizeFactory\",\"name\":\"_sizeFactory\",\"type\":\"address\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct RepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowAToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"selfLiquidate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct SelfLiquidateOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"selfLiquidateOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditLimitOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimitOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditMarketOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarketOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setUserConfiguration\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SetUserConfigurationOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"setUserConfigurationOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"}],\"name\":\"setVariablePoolBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeFactory\",\"outputs\":[{\"internalType\":\"contract ISizeFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct UpdateConfigParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"withdrawOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Size (https://size.credit/)\",\"custom:security-contact\":\"security@size.credit\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)\"}},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"}},\"buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"details\":\"When emitting the `SwapData` event, the recipient is set as the `lender` param, which is inconsistent with the `BuyCreditMarket` event emitted just before,        where `lender` is passed as `onBehalfOf`. The reason is that `SwapData` emits only debt/credit recipients, while `BuyCreditMarket` emits both and also `onBehalfOf`.\"},\"claim((uint256))\":{\"details\":\"Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before\",\"params\":{\"params\":\"ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim\"}},\"collateralRatio(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The collateral ratio of the user\"}},\"compensate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"details\":\"Does not erase the user's loan offer and borrow offer\",\"params\":{\"params\":\"CopyLimitOrdersParams struct containing the following fields:     - address copyAddress: The address of the user to copy from     - CopyLimitOrder copyLoanOffer: The loan offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied loan offer     - CopyLimitOrder copyBorrowOffer: The borrow offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied borrow offer\"}},\"data()\":{\"returns\":{\"_0\":\"The data view\"}},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"params\":{\"borrowATokenAmount\":\"The amount of borrow A tokens\"},\"returns\":{\"_0\":\"The equivalent amount of collateral tokens\"}},\"deposit((address,uint256,address))\":{\"details\":\"The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens\",\"params\":{\"params\":\"DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit\"}},\"feeConfig()\":{\"returns\":{\"_0\":\"The fee configuration parameters\"}},\"getBorrowOfferAPR(address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the borrow offer\"}},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for buying credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for buying credit as a market order\"}},\"getCreditPosition(uint256)\":{\"params\":{\"creditPositionId\":\"The ID of the credit position\"},\"returns\":{\"_0\":\"The CreditPosition struct containing the details of the credit position\"}},\"getDebtPosition(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The DebtPosition struct containing the details of the debt position\"}},\"getDebtPositionAssignedCollateral(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The assigned collateral amount\"}},\"getLoanOfferAPR(address,uint256)\":{\"params\":{\"lender\":\"The address of the lender\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the loan offer\"}},\"getLoanStatus(uint256)\":{\"params\":{\"positionId\":\"The ID of the position\"},\"returns\":{\"_0\":\"The loan status\"}},\"getPositionsCount()\":{\"returns\":{\"_0\":\"The count of debt positions and credit positions\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for selling credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for selling credit as a market order\"}},\"getSwapFee(uint256,uint256)\":{\"params\":{\"cash\":\"The cash amount\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The swap fee\"}},\"getUserCopyLimitOrders(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user copy limit orders\"}},\"getUserView(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user view\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isCreditPositionId(uint256)\":{\"params\":{\"creditPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a credit position ID, false otherwise\"}},\"isDebtPositionId(uint256)\":{\"params\":{\"debtPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a debt position ID, false otherwise\"}},\"isDebtPositionLiquidatable(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"True if the debt position is liquidatable, false otherwise\"}},\"liquidate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)\"},\"returns\":{\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens the the fee recipient received from the liquidation\"}},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"details\":\"This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned\",\"params\":{\"params\":\"LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"},\"returns\":{\"liquidatorProfitBorrowToken\":\"The amount of borrow tokens liquidator received from the liquidation\",\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens liquidator received from the liquidation\"}},\"multicall(bytes[])\":{\"details\":\"This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.\",\"params\":{\"data\":\"An array of bytes encoded function calls to be executed in sequence.\"},\"returns\":{\"results\":\"An array of bytes representing the return data from each function call executed.\"}},\"oracle()\":{\"returns\":{\"_0\":\"The oracle parameters\"}},\"partialRepay((uint256,uint256,address))\":{\"details\":\"The partial repay amount should be less than the debt position future value\",\"params\":{\"params\":\"PartialRepayParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position with debt to repay     - uint256 amount: The amount of tokens to repay (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - address borrower: The address of the borrower\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"repay((uint256,address))\":{\"details\":\"The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim\",\"params\":{\"params\":\"RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"riskConfig()\":{\"returns\":{\"_0\":\"The risk configuration parameters\"}},\"selfLiquidate((uint256))\":{\"details\":\"The user is prevented to self liquidate if a regular liquidation would be profitable\",\"params\":{\"params\":\"SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate\"}},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)\"}},\"sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)\"}},\"sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"details\":\"When emitting the `SwapData` event, the `recipient` parameter is left out. The reason is that `SwapData` emits only debt/credit recipients,      while `SellCreditMarket` emits both and also the cash recipient.\"},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"details\":\"By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.\",\"params\":{\"params\":\"SetUserConfigurationParams struct containing the following fields:     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions\"}},\"setVariablePoolBorrowRate(uint128)\":{\"details\":\"The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero\",\"params\":{\"borrowRate\":\"The new borrow rate\"}},\"sizeFactory()\":{\"returns\":{\"_0\":\"The size factory\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateConfig((string,uint256))\":{\"details\":\"For `address` parameters, the `value` is converted to `uint160` and then to `address`\",\"params\":{\"params\":\"UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"version()\":{\"returns\":{\"_0\":\"The version of the Size protocol\"}},\"withdraw((address,uint256,address))\":{\"details\":\"This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens\",\"params\":{\"params\":\"WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal\"}}},\"title\":\"Size\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new loan offer in the orderbook\"},\"buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))\":{\"notice\":\"Same as `buyCreditLimit` but `onBehalfOf`\"},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Obtains credit via lending or buying existing credit\"},\"buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"notice\":\"Same as `buyCreditMarket` but `onBehalfOf`\"},\"claim((uint256))\":{\"notice\":\"Claim the repayment of a loan with accrued interest from the Variable Pool\"},\"collateralRatio(address)\":{\"notice\":\"Get the collateral ratio of a user\"},\"compensateOnBehalfOf(((uint256,uint256,uint256),address))\":{\"notice\":\"Same as `compensate` but `onBehalfOf`\"},\"copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"notice\":\"Copy limit orders from a user\"},\"copyLimitOrdersOnBehalfOf(((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))\":{\"notice\":\"Same as `copyLimitOrders` but `onBehalfOf`\"},\"data()\":{\"notice\":\"Get the data view\"},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"notice\":\"Convert debt token amount to collateral token amount\"},\"deposit((address,uint256,address))\":{\"notice\":\"Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Variable Pool,         Collateral tokens are deposited into the Size contract through the DepositTokenLibrary\"},\"depositOnBehalfOf(((address,uint256,address),address))\":{\"notice\":\"Same as `deposit` but `onBehalfOf`\"},\"feeConfig()\":{\"notice\":\"Get the fee configuration parameters\"},\"getBorrowOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a borrow offer\"},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Gets the swap data for buying credit as a market order\"},\"getCreditPosition(uint256)\":{\"notice\":\"Get the details of a credit position\"},\"getDebtPosition(uint256)\":{\"notice\":\"Get the details of a debt position\"},\"getDebtPositionAssignedCollateral(uint256)\":{\"notice\":\"Get the assigned collateral for a debt position\"},\"getLoanOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a loan offer\"},\"getLoanStatus(uint256)\":{\"notice\":\"Get the loan status for a given position ID\"},\"getPositionsCount()\":{\"notice\":\"Get the count of debt and credit positions\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Returns the swap data for selling credit as a market order\"},\"getSwapFee(uint256,uint256)\":{\"notice\":\"Get the swap fee for a given cash and tenor\"},\"getUserCopyLimitOrders(address)\":{\"notice\":\"Get the user copy limit orders for a given user\"},\"getUserView(address)\":{\"notice\":\"Get the user view for a given user\"},\"isCreditPositionId(uint256)\":{\"notice\":\"Check if a given ID is a credit position ID\"},\"isDebtPositionId(uint256)\":{\"notice\":\"Check if a given ID is a debt position ID\"},\"isDebtPositionLiquidatable(uint256)\":{\"notice\":\"Check if a debt position is liquidatable\"},\"liquidate((uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower\"},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position with a replacement borrower\"},\"multicall(bytes[])\":{\"notice\":\"Executes multiple calls in a single transaction\"},\"oracle()\":{\"notice\":\"Get the oracle parameters\"},\"partialRepay((uint256,uint256,address))\":{\"notice\":\"Partial repay a debt position by selecting a specific CreditPosition\"},\"pause()\":{\"notice\":\"Pauses the protocol         Only callable by the PAUSER_ROLE\"},\"repay((uint256,address))\":{\"notice\":\"Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported\"},\"riskConfig()\":{\"notice\":\"Get the risk configuration parameters\"},\"selfLiquidate((uint256))\":{\"notice\":\"Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees\"},\"selfLiquidateOnBehalfOf(((uint256),address,address))\":{\"notice\":\"Same as `selfLiquidate` but `onBehalfOf`\"},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new borrow offer in the orderbook\"},\"sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))\":{\"notice\":\"Same as `sellCreditLimit` but `onBehalfOf`\"},\"sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"notice\":\"Same as `sellCreditMarket` but `onBehalfOf`\"},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"notice\":\"Set the credit positions for sale\"},\"setUserConfigurationOnBehalfOf(((uint256,bool,bool,uint256[]),address))\":{\"notice\":\"Same as `setUserConfiguration` but `onBehalfOf`\"},\"setVariablePoolBorrowRate(uint128)\":{\"notice\":\"Sets the variable borrow rate         Only callable by the BORROW_RATE_UPDATER_ROLE\"},\"sizeFactory()\":{\"notice\":\"Get the size factory\"},\"unpause()\":{\"notice\":\"Unpauses the protocol         Only callable by the UNPAUSER_ROLE\"},\"updateConfig((string,uint256))\":{\"notice\":\"Updates the configuration of the protocol         Only callable by the DEFAULT_ADMIN_ROLE\"},\"version()\":{\"notice\":\"Get the version of the Size protocol\"},\"withdraw((address,uint256,address))\":{\"notice\":\"Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Variable Pool         Collateral tokens are withdrawn from the Size contract through the DepositTokenLibrary\"},\"withdrawOnBehalfOf(((address,uint256,address),address))\":{\"notice\":\"Same as `withdraw` but `onBehalfOf`\"}},\"notice\":\"See the documentation in {ISize}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/market/Size.sol\":\"Size\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/aave-v3-core/contracts/\",\":@chainlink/=lib/chainlink/\",\":@chimera/=lib/chimera/src/\",\":@crytic/properties/=lib/properties/\",\":@deprecated/=deprecated/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@script/=script/\",\":@solady/=lib/solady/src/\",\":@src/=src/\",\":@test/=test/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ERC4626/=lib/properties/lib/ERC4626/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":chainlink/=lib/chainlink/contracts/\",\":chimera/=lib/chimera/src/\",\":ds-test/=lib/solady/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":properties/=lib/properties/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/properties/lib/solmate/src/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"lib/aave-v3-core/contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa\",\"dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf\"]},\"lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol\":{\"keccak256\":\"0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0\",\"dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7\"]},\"lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol\":{\"keccak256\":\"0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87\",\"dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3\"]},\"lib/aave-v3-core/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d\",\"dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM\"]},\"lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06\",\"dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx\"]},\"lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da\",\"dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260\",\"dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df\",\"dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E\"]},\"src/factory/interfaces/ISizeFactory.sol\":{\"keccak256\":\"0xebc4426038cc8d0b132bcb99fd436d8099035055535b05b5d34664f82ad876ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a328aa6461e1804f26dc23809f417e67f44899ba37ec2b1b5714029d1e2aa5b\",\"dweb:/ipfs/QmTzGoJUGMTMbKqeoyioDt3uNZQnm7wRNg95bm24a6HB7b\"]},\"src/factory/interfaces/ISizeFactoryOffchainGetters.sol\":{\"keccak256\":\"0x01193f70622dd06fa303e488c255bf9b86f4fd2150ded107df75eabb1c200403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81f74325395f6f3c01d55991aa3e8b2e26c3bd8d80b3e061f3c3d90bea81603d\",\"dweb:/ipfs/QmWKW2CQdeYgK1x5L6i9k43wJVYxu9Qy6QUJD5aFoykQ8p\"]},\"src/factory/interfaces/ISizeFactoryV1_7.sol\":{\"keccak256\":\"0x2cea6fa459a87abe5e964db97204841d3425b344cbb00ee83e5b98455ab67972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f832221d6b28791cbe98bc832b452936b5acc0092817f1eaeed91fa7974c79b7\",\"dweb:/ipfs/QmXhdbhCm8eKnDbK6jztkPXy6JknGJS23EhF26Cy27ssdu\"]},\"src/factory/libraries/Authorization.sol\":{\"keccak256\":\"0xf42a6c9392e33ad8d3be9045864c896a1552b4c3e4775198b990ea0b165f8908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02603db5e7c1b4df6b1f474e24fbd3b82e33e46deb84de07d0222bb26d2781af\",\"dweb:/ipfs/QmaDuJawdoxgvVvMerZW8CMQZXKJPXhuH4RASMTfuMJX96\"]},\"src/market/Size.sol\":{\"keccak256\":\"0xa8b5dbfd9416582916644462baf324b851ffb22e770f44b3c92802e16fc18583\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7087ea04a2898e8f7ede428c2e6bd78fd8f05f67f6a02becb973f1ca2d19d399\",\"dweb:/ipfs/QmYyNwLJgBdYkoHxdrZLfXa3hYUV3y883FVi1b3FHNC7pV\"]},\"src/market/SizeStorage.sol\":{\"keccak256\":\"0x5761db233e84b406cc8e679ead486311f43996483785581180f1931f0ca796ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed922b076d2b8dc9b512cb9c1a3dc95ae4390fb9023c2d5f9da10be5302e386\",\"dweb:/ipfs/QmPavYUcHvkdBqTcZK6Ph6dwDKXg9258Y19KW772v9uM3i\"]},\"src/market/SizeView.sol\":{\"keccak256\":\"0x9d184507cb8e498010122f0852ccc773b10ead57ce754068f6b03e4df16bb41f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0661bff01b17b1043f57f8f149acc8e5dda2140106ab47c6dec788911484b28b\",\"dweb:/ipfs/QmQgCgbNarjZLKdjS66DYu98EtgZC9c7TK1PEophMNMPP6\"]},\"src/market/SizeViewData.sol\":{\"keccak256\":\"0x06ad8df04416ffaf15415f3be0cdb4c4ac1213c0a7a6f8a869170c620149747b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0fc6d18dbf7eb2270bd70dd0bc10cde18e5968f9e037e2a57586b8bdc0d6f8f\",\"dweb:/ipfs/QmPH6e38WdmHMo9FyhJ4ELpmXFzH7GdreukXjZ5WjS4CVD\"]},\"src/market/interfaces/IMulticall.sol\":{\"keccak256\":\"0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989\",\"dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R\"]},\"src/market/interfaces/ISize.sol\":{\"keccak256\":\"0x506b9707877f37a5c9d63084a3ec35e4fc8b7b131bf4663590d5a760a75ff5eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8de5c7f00281db9031a4623e28474b30f509b41d614769be81780257765eac1a\",\"dweb:/ipfs/QmcEwTS6b35nmPRuuxDbh2BPc1umihBcpyHdDySkvYzNPo\"]},\"src/market/interfaces/ISizeAdmin.sol\":{\"keccak256\":\"0x1f2fda9cf43a960e920186ce0414d596f0c73e20e0ab262a047ffcab5b8a4a9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://092faa4adc6268f096580faebcf426c87def65e02525abfecd04aa1acfceaa88\",\"dweb:/ipfs/QmWtjocrjvMRqKH47XiP7GKPRPKPCX3ApnpgpFjt3X9eRf\"]},\"src/market/interfaces/ISizeView.sol\":{\"keccak256\":\"0x3255e2448b7d70f8e92a2a404211a309d1efff419e7d140479c1d327040f650f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f36c86c141e8f46710cf69b4b69b2a5c4b9fa49a9bf350dd56810bb173dc4bb\",\"dweb:/ipfs/QmcsXpr1jSaN5CEBemR1D4XTxdPdmCPQboDkb2yftv8LEz\"]},\"src/market/interfaces/IWETH.sol\":{\"keccak256\":\"0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e\",\"dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t\"]},\"src/market/interfaces/v1.7/ISizeV1_7.sol\":{\"keccak256\":\"0x5be7f049ece5c38acc45e8230e13ceb1e77c835a3990a854456c7409209958d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8672c19394b2ad6e797614ca28e9341607dc0505ed09c6adfbb859a8c96dbb67\",\"dweb:/ipfs/QmXCeaqdKvnCwXDTkpe5PisAmwzmpq2zy9vtzNoAmHwPqQ\"]},\"src/market/interfaces/v1.7/ISizeViewV1_7.sol\":{\"keccak256\":\"0x1ae3e0e566182a39cea1e4a4b2f3ba8e47c9c5dc8aeed24fd5a90d35a5dd317e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c79e7a02e98992bca9e5bc5eb4513100b557f511b1cb0245f7838e12e87efeb\",\"dweb:/ipfs/QmPZDziwpJsReTqbzF7JiWntq4XitinnAJjDd393ePRB6T\"]},\"src/market/libraries/AccountingLibrary.sol\":{\"keccak256\":\"0xaf63013204ceefcfea23c1843805dcbbdc3ca78f20075c50d1ff1e121b303ce6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48e83453f178df9f745e91a408af5e51feb1a0c932c42052a6f2ada9be795225\",\"dweb:/ipfs/QmUxBEeqETbGSPTsZFttUxkiBGpJSqHr6LZJVuWWhH9giA\"]},\"src/market/libraries/CapsLibrary.sol\":{\"keccak256\":\"0xbc9bb02b6d216723e2dc0ea7431e072c206a7318dab435d5b713c168c0aaaf09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56837fc8e7df66ebc9b65790782d14a0bd14a096dea50d5f1d795bdb5cdfacc8\",\"dweb:/ipfs/QmXKaAPHzCnRsUAXuHKoJyR6cXQiRQ5dZtCdD4ZB2SthcP\"]},\"src/market/libraries/DepositTokenLibrary.sol\":{\"keccak256\":\"0xe11c6f6c228fa1a8f10eb74f6db851e8b23f73664a4f92dd17da7cb0c349e7d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd0450b84ef1561454628afb863d3edd6248eea4d0deb2580de5fbb1728d34c\",\"dweb:/ipfs/QmakkuB6Pzahjo1SQ9Ybmic4ym96UaQ7e8iEb8btDVqEKv\"]},\"src/market/libraries/Errors.sol\":{\"keccak256\":\"0xb45510436b26e36c1e45c589203678bdbcfbfcf1ab44277c27234e20f9318b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df58668e11fb5e0108b20fe2db50fd44968001fa59d8a72edf7f9e69209f801\",\"dweb:/ipfs/QmVGKzAUywbQjXZLBosMHwjuu7HsNbfN1Qigb5NmUGYXp3\"]},\"src/market/libraries/Events.sol\":{\"keccak256\":\"0x381f68b7ee89897a3cd38f5b267a0bd7954aa6853283b6235b44fd1af2e24b0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4930543bd6b4b90fe1f06f338cc05955b6d9cce34ef6c817afaebcb0cac4ea8\",\"dweb:/ipfs/QmPQXauGZ9BkhoUgEWKbzjkYr3wpxTpenYGR4K2BYYoKTH\"]},\"src/market/libraries/LoanLibrary.sol\":{\"keccak256\":\"0x93d76a205f0dd0130d1bcf4657edf2c40921ca76b77d468d802c24e42ba9eccb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e10015fa9e6bc78c5a2ef23595c140aea8dd41e44adfa7bb24cb7551ae61cac\",\"dweb:/ipfs/QmP93Yb2WhDBPstvhDkNzTDyqXQsdLmhQd61oj9LFSVfJZ\"]},\"src/market/libraries/Math.sol\":{\"keccak256\":\"0x445f0f8e7e74e16ce74d8563a083fa8c5a54142eb871f7e076f0569a5a940949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c34a2714a25dff091b872aa35056354c8a481112ff475204a31bc8db894eac3\",\"dweb:/ipfs/QmY5oew2GzqxaVA9f39hCr68V8tuhW5k4iB23kpXnPgx38\"]},\"src/market/libraries/Multicall.sol\":{\"keccak256\":\"0x557da60425f64fce42e25de2f1e5da989a01ac24e16bd587d1c8ea04c1bc4c03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf18600b85e8aa19b07f7e0abe082520ba2cebd190665d4a0b2ebe2395911d98\",\"dweb:/ipfs/Qmb3MEsVjEEciWNi3BfArzQbkcZ8aeQMAKVHp8E79GQrUd\"]},\"src/market/libraries/OfferLibrary.sol\":{\"keccak256\":\"0x7926a94b1d39a8870808b0fbef5475f7b424589bde84f7edea97898e81bb13d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d44cc7a629d0d74013efb9fe3980916571416e19f717132a3ef18be95e18a9\",\"dweb:/ipfs/QmNRPBYTT5t2sXFWVCcMjkZCXEmfU3hP4HMqgUHwzmX7Ys\"]},\"src/market/libraries/RiskLibrary.sol\":{\"keccak256\":\"0x8fc54337eb367bfc09ab84a4a6bf7ccd4d2223d39d5b59acb9ba0ef6db920212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8956d37f6b33b13ad766774742be28f15b31444798eaddc5346743cea90578c\",\"dweb:/ipfs/QmefRwhFvL6XsLVL5h2xxn91qX4JxcFQbhnrd7f37J4yLR\"]},\"src/market/libraries/YieldCurveLibrary.sol\":{\"keccak256\":\"0x8d4b1f45d67387169c3b38cc034305eba91ad306dac7021d4658e3b8bbc9a135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://438376203571e01cbb26ea58c192d3036a1e623c0c5897c52aeafaa90e281cd3\",\"dweb:/ipfs/QmcRNJKsudM9bZvCPCSEQWxPHvVEfQD1u2MPf8S33fh3o3\"]},\"src/market/libraries/actions/BuyCreditLimit.sol\":{\"keccak256\":\"0xccb77182ce62b7ea147ee65ad7e32076f9e565a2605c18842087103e471f79f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571a3265ef2664d9fea268e229af1bc0e430f458efe6898a03532de799d959ef\",\"dweb:/ipfs/QmSA1hphKNeRdqKtKpbfM3yof9TTd13r9X5ei7jNiuhcwQ\"]},\"src/market/libraries/actions/BuyCreditMarket.sol\":{\"keccak256\":\"0xdcd1e28348e63db90f96e882221ddc4d44ca7f00840e26fb6ac4415b7912ef9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c0b52e3901d79c80dd4a098f050ea9192488f71d585f41e9ba1bf10aabe9a50\",\"dweb:/ipfs/QmYvjvBtZVLivFpkw9UWbtW4YvgQNGiJVTJCW2PzcrEqvN\"]},\"src/market/libraries/actions/Claim.sol\":{\"keccak256\":\"0xb71ab7b45ca738fcb802bf2ab29f9e6b37ae98d7463dbfdfa6a51361a1d4bcd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc4357c1be3ccd8a37bb023d8cd8a8e346626423e54b93327e915be294c6de0c\",\"dweb:/ipfs/QmSvfKQ5xtJQmxQmPfyE8zqUaJLgDsxcGq55rQHxrWXftq\"]},\"src/market/libraries/actions/Compensate.sol\":{\"keccak256\":\"0x5fa7ce8b74eeea09d12b78e3b31dbc7b37fca58b235299ad5d9f8e99ea400719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fbeff16ba76d1e3735f4d067ba16da7b0f35176ff9ea501a99f94063936bc5d\",\"dweb:/ipfs/QmYyogfmQmrpEksBc9uSjVQvYAWdaq31pJ3j6aAnc8D1rA\"]},\"src/market/libraries/actions/CopyLimitOrders.sol\":{\"keccak256\":\"0x7c0122a6757ea03a0e466ece6bfe1689804dbc67aa47bbe3959dbfbd9bdf5044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5450e2ddb79dc482d93a34701e6559c972ba2247b6ce2fb2ce02c5ec15964bff\",\"dweb:/ipfs/QmdLeycgcqWjZ8gAvduxZpHRvsXGoa3BpvS9oJvhdH3QwZ\"]},\"src/market/libraries/actions/Deposit.sol\":{\"keccak256\":\"0xdb3dc341ad3b08322939d991f827a11be890163ce1b81bc8944e9da9f276593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://146b20c28ee3528f60fe6c68e19e53c6d232d5bdb4341a54232921325ed02eb5\",\"dweb:/ipfs/QmZv7smGvYeHBsG2VMP6CiAeoLzHmcJpdNosRjRnZEQ8cn\"]},\"src/market/libraries/actions/Initialize.sol\":{\"keccak256\":\"0xb48fd6e618d744052a68a6d963ca5b79c1375d929a5b3b11a38b89603ad8c9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f7bc6833318ebf3e19764140d1dac326ef602ad276bfae386a855a80e92b61e\",\"dweb:/ipfs/QmRuiU2RmFpqQZjtnJUiu2GaveK7Ykg85hKXrCBHHFxAQT\"]},\"src/market/libraries/actions/Liquidate.sol\":{\"keccak256\":\"0xd3c46e7454dd7932f34149d28ec5a0b6ee4749a8903d78e722dc19163cf2732d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff03c519e678a0557d2a4954d917ae907d0d6a08aa8a7c3cd2be807930c5b9ff\",\"dweb:/ipfs/QmfYXxx4g1RFyg9is7EyuW2xBmd6w5t9s1HnArdqC7opAD\"]},\"src/market/libraries/actions/LiquidateWithReplacement.sol\":{\"keccak256\":\"0xb93fd3da4105662549ce3044ae66cf658aed32e250acb6650df8e243e80d8c47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dc2b2170e792ee45f01e81b6f348c4a3d17b067b8b59015205969d6b08782ca\",\"dweb:/ipfs/QmUVMZeqRaVdVUkFe4LL5PYHXsxN5pmDS4wibsZHUXZXtk\"]},\"src/market/libraries/actions/PartialRepay.sol\":{\"keccak256\":\"0x18c3217aab5882299e55019dced21528174b2b395204f96e9a36004024f6ea93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88f12e5b76e4d12c96236ca96058fe9faf979fc6de8bd0e68e4aa8eabc254b65\",\"dweb:/ipfs/QmSQx1eK9UDebvVWhTMfUfthvJ4GEpo3Uf9zyNJNuLurKW\"]},\"src/market/libraries/actions/Repay.sol\":{\"keccak256\":\"0xe691e25d19c3c5ac9c6f8eb7a5d816b78fe34f859a21250b0ed5cb89511a928a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a6d6057553cd249aed266292e15db36afdabc572cf1b712e9c80a29260639da\",\"dweb:/ipfs/QmU8uMqjL2eDDS1hsMKhBmhDnXPcdB7b89xJDLtYUMrm6F\"]},\"src/market/libraries/actions/SelfLiquidate.sol\":{\"keccak256\":\"0x2d71cff942efc93fb7aa3a0a636e44562e0fa44ba4d503f323c6d08e7fdd8af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdc43c74a42cffbf3844939df1d21a2b392ad3596ece8f1e9a6ebe08c2ec64be\",\"dweb:/ipfs/QmRUScCkvE4EADEUEvdwrsnzfLsq7xjFt1xsSZ4PZfs6J7\"]},\"src/market/libraries/actions/SellCreditLimit.sol\":{\"keccak256\":\"0xe8fe9ab69faccffa8539167973d13c5afe04ca8358316a092540171d084654b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c626cb1ad9347b0eabd162f590c61175cdc687958bc6684843201713c5efa89\",\"dweb:/ipfs/QmNqZc3Zh2Nvj6exvG89XShBY4WtBJSh6iKWr7gZB8sQ3k\"]},\"src/market/libraries/actions/SellCreditMarket.sol\":{\"keccak256\":\"0x9eb93f5b5e2183e9dbef11967f23ff212cdf2e4850166173435425a6ac765664\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8945337e751c520c47f46d708b996f23291e525bed22edaee2d86ee3a26edf8\",\"dweb:/ipfs/QmVmiy7nR5G1VhaXqs6wBVqeraRbET1mFdh6N5Mry51WGj\"]},\"src/market/libraries/actions/SetUserConfiguration.sol\":{\"keccak256\":\"0x2616ee9d1e2a4e0e54e9dd320c6e7a77700c390f9fd03775f0f4318e5e18d3f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882e2fa2d69bdfea68718f7ae79db554f31b9503259a912ab59a4b4f3cbba360\",\"dweb:/ipfs/QmaSHBTBm4SNszTL3wbcTkyzbBDszFA1XgrPtGe2T98yj3\"]},\"src/market/libraries/actions/UpdateConfig.sol\":{\"keccak256\":\"0x7e26d2d7ceb21fec0545a4f73e0b5e9c7edb6218b818003fac3b0ed48193b36c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61c6604b0ea4a2b7aad3d397f51fb9684fa44117146eaec64e36d0382f4de8\",\"dweb:/ipfs/QmPfCFvb8DRLufZ5Ltgf28Rte4Y929APqvRi6LPHMGejzd\"]},\"src/market/libraries/actions/Withdraw.sol\":{\"keccak256\":\"0x66c9620ed432ef9fb53ad41a967432f5c68cc1b48855743f04733ad9f4921d00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b49ebd22fa2c2a4dd6644e87ca4cd2b4ff29978c6c149d0a6acf142d5ddf5e60\",\"dweb:/ipfs/QmUAbuDTEuSxewMbAZjkdnjQ7CG47C3PmyvWmKKeGXTbYz\"]},\"src/market/token/NonTransferrableScaledTokenV1_5.sol\":{\"keccak256\":\"0xf97d987f52e49a11142ab9146ace9979d71feec057eff2d48304d73b57435c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5953d8df62fda44b6b67878e548eddedaf7e3e8f23671c9ed3216c8961dafe3\",\"dweb:/ipfs/QmWK1nKSm7rvEp4G376Pu6opEFSaoDAkNFGZhesxAwynA1\"]},\"src/market/token/NonTransferrableToken.sol\":{\"keccak256\":\"0xf82118604ddbcd5d9ff708d739396e993d9621cff7b07f22a519141ca39a9e17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f371fb37a2ac76630302b1284d62e8657f038b504ce9884723574c2a3de32ec\",\"dweb:/ipfs/QmRsjmBirftC8Jih4jBG2BoJmpe4RRAAsEwsmtLjWicTVf\"]},\"src/oracle/IPriceFeed.sol\":{\"keccak256\":\"0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48\",\"dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ\"]},\"src/oracle/v1.5.1/PriceFeed.sol\":{\"keccak256\":\"0xc0bd99de76ee008df1be079de7efc852eb2ecd43a8f2c1d1d804165ff732ad9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b03ea6b0ea9a61a296cd29fb0d18de4911038a07b6ff3fea6d1ed46f4973fffa\",\"dweb:/ipfs/QmP6cY5rMkxePzRgEaVxyfJV9wx4QvLuB2LRHkReCoPYUu\"]},\"src/oracle/v1.5.1/adapters/ChainlinkPriceFeed.sol\":{\"keccak256\":\"0x71a4ccb7d9469f4d7a914a81c754b1278152a387f8154e0f9793e0e3d010a599\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d953653f6481b344d0d00a677a8301f3006a50c3b90744c39cd3eda6f508818b\",\"dweb:/ipfs/QmYR1RvdMboMpH9ykJN5WwuC3AabSvPS2JA4t4afxa7gyh\"]},\"src/oracle/v1.5.1/adapters/ChainlinkSequencerUptimeFeed.sol\":{\"keccak256\":\"0x3d200d7fcc7c457a201f2bb32a0b68ea13b2b697cb300bbd587828bff5ffe8b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d72923e346e73eb0d42d055437dc6df059c3a8f27b08ff5aacd7cf7fdf90eec5\",\"dweb:/ipfs/QmPYENtSCwseMxYtQeKAkVe8DuCJYzRGpFRxDgw85xf2g8\"]},\"src/oracle/v1.5.1/adapters/UniswapV3PriceFeed.sol\":{\"keccak256\":\"0xea95d62fd50c16d48014c11d4dad500b53406aca773ed4e0632290f696b5998f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81373a8e7c054eaecc7017be89cd4ee7d7f09eab09df8d568c944b72ef7c1abe\",\"dweb:/ipfs/QmQc4gmAoq2oYdBmnTsimDCVWas1tnFAMfxLvykbSTb5kd\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "EnforcedPause" },
        { "inputs": [], "type": "error", "name": "ExpectedPause" },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "market", "type": "address" }
          ],
          "type": "error",
          "name": "INVALID_MARKET"
        },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "uint256",
              "name": "crBefore",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "crAfter", "type": "uint256" }
          ],
          "type": "error",
          "name": "MUST_IMPROVE_COLLATERAL_RATIO"
        },
        { "inputs": [], "type": "error", "name": "NOT_SUPPORTED" },
        { "inputs": [], "type": "error", "name": "NULL_ADDRESS" },
        { "inputs": [], "type": "error", "name": "NULL_TENOR" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "oldBorrowRate",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "newBorrowRate",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VariablePoolBorrowRateUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BuyCreditLimitParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxDueDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct YieldCurve",
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256[]",
                          "name": "tenors",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "int256[]",
                          "name": "aprs",
                          "type": "int256[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "marketRateMultipliers",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimitOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BuyCreditMarketParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "borrower",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "exactAmountIn",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarketOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct ClaimParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralRatio",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionToCompensateId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensate"
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CompensateParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "creditPositionWithDebtToRepayId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionToCompensateId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensateOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct CopyLimitOrdersParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "copyAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "copyLimitOrders"
        },
        {
          "inputs": [
            {
              "internalType": "struct CopyLimitOrdersOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CopyLimitOrdersParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "copyAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "struct CopyLimitOrder",
                      "name": "copyLoanOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "minTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "int256",
                          "name": "offsetAPR",
                          "type": "int256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct CopyLimitOrder",
                      "name": "copyBorrowOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "minTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "int256",
                          "name": "offsetAPR",
                          "type": "int256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "copyLimitOrdersOnBehalfOf"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "data",
          "outputs": [
            {
              "internalType": "struct DataView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nextDebtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextCreditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableScaledTokenV1_5",
                  "name": "borrowAToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "debtToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IPool",
                  "name": "variablePool",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowATokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "debtTokenAmountToCollateralTokenAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositOnBehalfOfParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DepositParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositOnBehalfOf"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeConfig",
          "outputs": [
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBuyCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCreditPosition",
          "outputs": [
            {
              "internalType": "struct CreditPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                { "internalType": "bool", "name": "forSale", "type": "bool" },
                {
                  "internalType": "uint256",
                  "name": "credit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPosition",
          "outputs": [
            {
              "internalType": "struct DebtPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "futureValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidityIndexAtRepayment",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPositionAssignedCollateral",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "lender", "type": "address" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanStatus",
          "outputs": [
            { "internalType": "enum LoanStatus", "name": "", "type": "uint8" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionsCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSellCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "cash", "type": "uint256" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSwapFee",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserCopyLimitOrders",
          "outputs": [
            {
              "internalType": "struct UserCopyLimitOrders",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "copyAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserView",
          "outputs": [
            {
              "internalType": "struct UserView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct User",
                  "name": "user",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct LimitOrder",
                      "name": "loanOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct LimitOrder",
                      "name": "borrowOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralTokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtBalance",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "f",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "r",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowAToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct InitializeOracleParams",
              "name": "o",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            },
            {
              "internalType": "struct InitializeDataParams",
              "name": "d",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "weth",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "variablePool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "borrowATokenV1_5",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sizeFactory",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCreditPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionLiquidatable",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateWithReplacementParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidateWithReplacement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidatorProfitBorrowToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes[]", "name": "_data", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            { "internalType": "bytes[]", "name": "results", "type": "bytes[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "struct InitializeOracleParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PartialRepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "partialRepay"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISizeFactory",
              "name": "_sizeFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reinitialize"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct RepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "riskConfig",
          "outputs": [
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowAToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidate"
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SelfLiquidateParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidateOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SellCreditLimitParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxDueDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct YieldCurve",
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256[]",
                          "name": "tenors",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "int256[]",
                          "name": "aprs",
                          "type": "int256[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "marketRateMultipliers",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimitOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SellCreditMarketParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "exactAmountIn",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarketOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "openingLimitBorrowCR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "creditPositionIdsForSale",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "creditPositionIds",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfiguration"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SetUserConfigurationParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "creditPositionIdsForSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "creditPositionIds",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfigurationOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVariablePoolBorrowRate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sizeFactory",
          "outputs": [
            {
              "internalType": "contract ISizeFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "struct UpdateConfigParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "string", "name": "key", "type": "string" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct WithdrawParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawOnBehalfOf"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)"
            }
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            }
          },
          "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "details": "When emitting the `SwapData` event, the recipient is set as the `lender` param, which is inconsistent with the `BuyCreditMarket` event emitted just before,        where `lender` is passed as `onBehalfOf`. The reason is that `SwapData` emits only debt/credit recipients, while `BuyCreditMarket` emits both and also `onBehalfOf`."
          },
          "claim((uint256))": {
            "details": "Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before",
            "params": {
              "params": "ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim"
            }
          },
          "collateralRatio(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The collateral ratio of the user" }
          },
          "compensate((uint256,uint256,uint256))": {
            "params": {
              "params": "CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)"
            }
          },
          "constructor": { "custom:oz-upgrades-unsafe-allow": "constructor" },
          "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "details": "Does not erase the user's loan offer and borrow offer",
            "params": {
              "params": "CopyLimitOrdersParams struct containing the following fields:     - address copyAddress: The address of the user to copy from     - CopyLimitOrder copyLoanOffer: The loan offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied loan offer     - CopyLimitOrder copyBorrowOffer: The borrow offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied borrow offer"
            }
          },
          "data()": { "returns": { "_0": "The data view" } },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "params": { "borrowATokenAmount": "The amount of borrow A tokens" },
            "returns": { "_0": "The equivalent amount of collateral tokens" }
          },
          "deposit((address,uint256,address))": {
            "details": "The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens",
            "params": {
              "params": "DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit"
            }
          },
          "feeConfig()": {
            "returns": { "_0": "The fee configuration parameters" }
          },
          "getBorrowOfferAPR(address,uint256)": {
            "params": {
              "borrower": "The address of the borrower",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the borrow offer" }
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for buying credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for buying credit as a market order"
            }
          },
          "getCreditPosition(uint256)": {
            "params": { "creditPositionId": "The ID of the credit position" },
            "returns": {
              "_0": "The CreditPosition struct containing the details of the credit position"
            }
          },
          "getDebtPosition(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "The DebtPosition struct containing the details of the debt position"
            }
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": { "_0": "The assigned collateral amount" }
          },
          "getLoanOfferAPR(address,uint256)": {
            "params": {
              "lender": "The address of the lender",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the loan offer" }
          },
          "getLoanStatus(uint256)": {
            "params": { "positionId": "The ID of the position" },
            "returns": { "_0": "The loan status" }
          },
          "getPositionsCount()": {
            "returns": {
              "_0": "The count of debt positions and credit positions"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for selling credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for selling credit as a market order"
            }
          },
          "getSwapFee(uint256,uint256)": {
            "params": {
              "cash": "The cash amount",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The swap fee" }
          },
          "getUserCopyLimitOrders(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user copy limit orders" }
          },
          "getUserView(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user view" }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isCreditPositionId(uint256)": {
            "params": { "creditPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a credit position ID, false otherwise"
            }
          },
          "isDebtPositionId(uint256)": {
            "params": { "debtPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a debt position ID, false otherwise"
            }
          },
          "isDebtPositionLiquidatable(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "True if the debt position is liquidatable, false otherwise"
            }
          },
          "liquidate((uint256,uint256,uint256))": {
            "params": {
              "params": "LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)"
            },
            "returns": {
              "liquidatorProfitCollateralToken": "The amount of collateral tokens the the fee recipient received from the liquidation"
            }
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "details": "This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned",
            "params": {
              "params": "LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            },
            "returns": {
              "liquidatorProfitBorrowToken": "The amount of borrow tokens liquidator received from the liquidation",
              "liquidatorProfitCollateralToken": "The amount of collateral tokens liquidator received from the liquidation"
            }
          },
          "multicall(bytes[])": {
            "details": "This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.",
            "params": {
              "data": "An array of bytes encoded function calls to be executed in sequence."
            },
            "returns": {
              "results": "An array of bytes representing the return data from each function call executed."
            }
          },
          "oracle()": { "returns": { "_0": "The oracle parameters" } },
          "partialRepay((uint256,uint256,address))": {
            "details": "The partial repay amount should be less than the debt position future value",
            "params": {
              "params": "PartialRepayParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position with debt to repay     - uint256 amount: The amount of tokens to repay (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - address borrower: The address of the borrower"
            }
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "repay((uint256,address))": {
            "details": "The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim",
            "params": {
              "params": "RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "riskConfig()": {
            "returns": { "_0": "The risk configuration parameters" }
          },
          "selfLiquidate((uint256))": {
            "details": "The user is prevented to self liquidate if a regular liquidation would be profitable",
            "params": {
              "params": "SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate"
            }
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)"
            }
          },
          "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)"
            }
          },
          "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "details": "When emitting the `SwapData` event, the `recipient` parameter is left out. The reason is that `SwapData` emits only debt/credit recipients,      while `SellCreditMarket` emits both and also the cash recipient."
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "details": "By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.",
            "params": {
              "params": "SetUserConfigurationParams struct containing the following fields:     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions"
            }
          },
          "setVariablePoolBorrowRate(uint128)": {
            "details": "The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero",
            "params": { "borrowRate": "The new borrow rate" }
          },
          "sizeFactory()": { "returns": { "_0": "The size factory" } },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "updateConfig((string,uint256))": {
            "details": "For `address` parameters, the `value` is converted to `uint160` and then to `address`",
            "params": {
              "params": "UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update"
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "version()": {
            "returns": { "_0": "The version of the Size protocol" }
          },
          "withdraw((address,uint256,address))": {
            "details": "This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens",
            "params": {
              "params": "WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new loan offer in the orderbook"
          },
          "buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": {
            "notice": "Same as `buyCreditLimit` but `onBehalfOf`"
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Obtains credit via lending or buying existing credit"
          },
          "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "notice": "Same as `buyCreditMarket` but `onBehalfOf`"
          },
          "claim((uint256))": {
            "notice": "Claim the repayment of a loan with accrued interest from the Variable Pool"
          },
          "collateralRatio(address)": {
            "notice": "Get the collateral ratio of a user"
          },
          "compensateOnBehalfOf(((uint256,uint256,uint256),address))": {
            "notice": "Same as `compensate` but `onBehalfOf`"
          },
          "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "notice": "Copy limit orders from a user"
          },
          "copyLimitOrdersOnBehalfOf(((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))": {
            "notice": "Same as `copyLimitOrders` but `onBehalfOf`"
          },
          "data()": { "notice": "Get the data view" },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "notice": "Convert debt token amount to collateral token amount"
          },
          "deposit((address,uint256,address))": {
            "notice": "Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Variable Pool,         Collateral tokens are deposited into the Size contract through the DepositTokenLibrary"
          },
          "depositOnBehalfOf(((address,uint256,address),address))": {
            "notice": "Same as `deposit` but `onBehalfOf`"
          },
          "feeConfig()": { "notice": "Get the fee configuration parameters" },
          "getBorrowOfferAPR(address,uint256)": {
            "notice": "Get the APR for a borrow offer"
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Gets the swap data for buying credit as a market order"
          },
          "getCreditPosition(uint256)": {
            "notice": "Get the details of a credit position"
          },
          "getDebtPosition(uint256)": {
            "notice": "Get the details of a debt position"
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "notice": "Get the assigned collateral for a debt position"
          },
          "getLoanOfferAPR(address,uint256)": {
            "notice": "Get the APR for a loan offer"
          },
          "getLoanStatus(uint256)": {
            "notice": "Get the loan status for a given position ID"
          },
          "getPositionsCount()": {
            "notice": "Get the count of debt and credit positions"
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Returns the swap data for selling credit as a market order"
          },
          "getSwapFee(uint256,uint256)": {
            "notice": "Get the swap fee for a given cash and tenor"
          },
          "getUserCopyLimitOrders(address)": {
            "notice": "Get the user copy limit orders for a given user"
          },
          "getUserView(address)": {
            "notice": "Get the user view for a given user"
          },
          "isCreditPositionId(uint256)": {
            "notice": "Check if a given ID is a credit position ID"
          },
          "isDebtPositionId(uint256)": {
            "notice": "Check if a given ID is a debt position ID"
          },
          "isDebtPositionLiquidatable(uint256)": {
            "notice": "Check if a debt position is liquidatable"
          },
          "liquidate((uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower"
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position with a replacement borrower"
          },
          "multicall(bytes[])": {
            "notice": "Executes multiple calls in a single transaction"
          },
          "oracle()": { "notice": "Get the oracle parameters" },
          "partialRepay((uint256,uint256,address))": {
            "notice": "Partial repay a debt position by selecting a specific CreditPosition"
          },
          "pause()": {
            "notice": "Pauses the protocol         Only callable by the PAUSER_ROLE"
          },
          "repay((uint256,address))": {
            "notice": "Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported"
          },
          "riskConfig()": { "notice": "Get the risk configuration parameters" },
          "selfLiquidate((uint256))": {
            "notice": "Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees"
          },
          "selfLiquidateOnBehalfOf(((uint256),address,address))": {
            "notice": "Same as `selfLiquidate` but `onBehalfOf`"
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new borrow offer in the orderbook"
          },
          "sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": {
            "notice": "Same as `sellCreditLimit` but `onBehalfOf`"
          },
          "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "notice": "Same as `sellCreditMarket` but `onBehalfOf`"
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "notice": "Set the credit positions for sale"
          },
          "setUserConfigurationOnBehalfOf(((uint256,bool,bool,uint256[]),address))": {
            "notice": "Same as `setUserConfiguration` but `onBehalfOf`"
          },
          "setVariablePoolBorrowRate(uint128)": {
            "notice": "Sets the variable borrow rate         Only callable by the BORROW_RATE_UPDATER_ROLE"
          },
          "sizeFactory()": { "notice": "Get the size factory" },
          "unpause()": {
            "notice": "Unpauses the protocol         Only callable by the UNPAUSER_ROLE"
          },
          "updateConfig((string,uint256))": {
            "notice": "Updates the configuration of the protocol         Only callable by the DEFAULT_ADMIN_ROLE"
          },
          "version()": { "notice": "Get the version of the Size protocol" },
          "withdraw((address,uint256,address))": {
            "notice": "Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Variable Pool         Collateral tokens are withdrawn from the Size contract through the DepositTokenLibrary"
          },
          "withdrawOnBehalfOf(((address,uint256,address),address))": {
            "notice": "Same as `withdraw` but `onBehalfOf`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=lib/aave-v3-core/contracts/",
        "@chainlink/=lib/chainlink/",
        "@chimera/=lib/chimera/src/",
        "@crytic/properties/=lib/properties/",
        "@deprecated/=deprecated/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@script/=script/",
        "@solady/=lib/solady/src/",
        "@src/=src/",
        "@test/=test/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "ERC4626/=lib/properties/lib/ERC4626/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "chainlink/=lib/chainlink/contracts/",
        "chimera/=lib/chimera/src/",
        "ds-test/=lib/solady/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "properties/=lib/properties/contracts/",
        "solady/=lib/solady/",
        "solmate/=lib/properties/lib/solmate/src/",
        "v3-core/=lib/v3-core/contracts/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/market/Size.sol": "Size" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
        "keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
        "urls": [
          "bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
          "dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAToken.sol": {
        "keccak256": "0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417",
        "urls": [
          "bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa",
          "dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol": {
        "keccak256": "0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd",
        "urls": [
          "bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0",
          "dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol": {
        "keccak256": "0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee",
        "urls": [
          "bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87",
          "dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPool.sol": {
        "keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
        "urls": [
          "bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
          "dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol": {
        "keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
        "urls": [
          "bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
          "dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol": {
        "keccak256": "0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4",
        "urls": [
          "bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d",
          "dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol": {
        "keccak256": "0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07",
        "urls": [
          "bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06",
          "dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol": {
        "keccak256": "0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88",
        "urls": [
          "bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828",
          "dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f",
        "urls": [
          "bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7",
          "dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53",
        "urls": [
          "bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930",
          "dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
        "keccak256": "0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97",
        "urls": [
          "bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007",
          "dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8",
        "urls": [
          "bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45",
          "dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3",
        "urls": [
          "bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da",
          "dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c",
        "urls": [
          "bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9",
          "dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65",
        "urls": [
          "bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a",
          "dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
        "urls": [
          "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
          "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160",
        "urls": [
          "bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260",
          "dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f",
        "urls": [
          "bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df",
          "dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/factory/interfaces/ISizeFactory.sol": {
        "keccak256": "0xebc4426038cc8d0b132bcb99fd436d8099035055535b05b5d34664f82ad876ed",
        "urls": [
          "bzz-raw://5a328aa6461e1804f26dc23809f417e67f44899ba37ec2b1b5714029d1e2aa5b",
          "dweb:/ipfs/QmTzGoJUGMTMbKqeoyioDt3uNZQnm7wRNg95bm24a6HB7b"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactoryOffchainGetters.sol": {
        "keccak256": "0x01193f70622dd06fa303e488c255bf9b86f4fd2150ded107df75eabb1c200403",
        "urls": [
          "bzz-raw://81f74325395f6f3c01d55991aa3e8b2e26c3bd8d80b3e061f3c3d90bea81603d",
          "dweb:/ipfs/QmWKW2CQdeYgK1x5L6i9k43wJVYxu9Qy6QUJD5aFoykQ8p"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactoryV1_7.sol": {
        "keccak256": "0x2cea6fa459a87abe5e964db97204841d3425b344cbb00ee83e5b98455ab67972",
        "urls": [
          "bzz-raw://f832221d6b28791cbe98bc832b452936b5acc0092817f1eaeed91fa7974c79b7",
          "dweb:/ipfs/QmXhdbhCm8eKnDbK6jztkPXy6JknGJS23EhF26Cy27ssdu"
        ],
        "license": "MIT"
      },
      "src/factory/libraries/Authorization.sol": {
        "keccak256": "0xf42a6c9392e33ad8d3be9045864c896a1552b4c3e4775198b990ea0b165f8908",
        "urls": [
          "bzz-raw://02603db5e7c1b4df6b1f474e24fbd3b82e33e46deb84de07d0222bb26d2781af",
          "dweb:/ipfs/QmaDuJawdoxgvVvMerZW8CMQZXKJPXhuH4RASMTfuMJX96"
        ],
        "license": "MIT"
      },
      "src/market/Size.sol": {
        "keccak256": "0xa8b5dbfd9416582916644462baf324b851ffb22e770f44b3c92802e16fc18583",
        "urls": [
          "bzz-raw://7087ea04a2898e8f7ede428c2e6bd78fd8f05f67f6a02becb973f1ca2d19d399",
          "dweb:/ipfs/QmYyNwLJgBdYkoHxdrZLfXa3hYUV3y883FVi1b3FHNC7pV"
        ],
        "license": "MIT"
      },
      "src/market/SizeStorage.sol": {
        "keccak256": "0x5761db233e84b406cc8e679ead486311f43996483785581180f1931f0ca796ba",
        "urls": [
          "bzz-raw://6ed922b076d2b8dc9b512cb9c1a3dc95ae4390fb9023c2d5f9da10be5302e386",
          "dweb:/ipfs/QmPavYUcHvkdBqTcZK6Ph6dwDKXg9258Y19KW772v9uM3i"
        ],
        "license": "MIT"
      },
      "src/market/SizeView.sol": {
        "keccak256": "0x9d184507cb8e498010122f0852ccc773b10ead57ce754068f6b03e4df16bb41f",
        "urls": [
          "bzz-raw://0661bff01b17b1043f57f8f149acc8e5dda2140106ab47c6dec788911484b28b",
          "dweb:/ipfs/QmQgCgbNarjZLKdjS66DYu98EtgZC9c7TK1PEophMNMPP6"
        ],
        "license": "MIT"
      },
      "src/market/SizeViewData.sol": {
        "keccak256": "0x06ad8df04416ffaf15415f3be0cdb4c4ac1213c0a7a6f8a869170c620149747b",
        "urls": [
          "bzz-raw://a0fc6d18dbf7eb2270bd70dd0bc10cde18e5968f9e037e2a57586b8bdc0d6f8f",
          "dweb:/ipfs/QmPH6e38WdmHMo9FyhJ4ELpmXFzH7GdreukXjZ5WjS4CVD"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/IMulticall.sol": {
        "keccak256": "0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41",
        "urls": [
          "bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989",
          "dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISize.sol": {
        "keccak256": "0x506b9707877f37a5c9d63084a3ec35e4fc8b7b131bf4663590d5a760a75ff5eb",
        "urls": [
          "bzz-raw://8de5c7f00281db9031a4623e28474b30f509b41d614769be81780257765eac1a",
          "dweb:/ipfs/QmcEwTS6b35nmPRuuxDbh2BPc1umihBcpyHdDySkvYzNPo"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISizeAdmin.sol": {
        "keccak256": "0x1f2fda9cf43a960e920186ce0414d596f0c73e20e0ab262a047ffcab5b8a4a9c",
        "urls": [
          "bzz-raw://092faa4adc6268f096580faebcf426c87def65e02525abfecd04aa1acfceaa88",
          "dweb:/ipfs/QmWtjocrjvMRqKH47XiP7GKPRPKPCX3ApnpgpFjt3X9eRf"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISizeView.sol": {
        "keccak256": "0x3255e2448b7d70f8e92a2a404211a309d1efff419e7d140479c1d327040f650f",
        "urls": [
          "bzz-raw://9f36c86c141e8f46710cf69b4b69b2a5c4b9fa49a9bf350dd56810bb173dc4bb",
          "dweb:/ipfs/QmcsXpr1jSaN5CEBemR1D4XTxdPdmCPQboDkb2yftv8LEz"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/IWETH.sol": {
        "keccak256": "0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c",
        "urls": [
          "bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e",
          "dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/v1.7/ISizeV1_7.sol": {
        "keccak256": "0x5be7f049ece5c38acc45e8230e13ceb1e77c835a3990a854456c7409209958d8",
        "urls": [
          "bzz-raw://8672c19394b2ad6e797614ca28e9341607dc0505ed09c6adfbb859a8c96dbb67",
          "dweb:/ipfs/QmXCeaqdKvnCwXDTkpe5PisAmwzmpq2zy9vtzNoAmHwPqQ"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/v1.7/ISizeViewV1_7.sol": {
        "keccak256": "0x1ae3e0e566182a39cea1e4a4b2f3ba8e47c9c5dc8aeed24fd5a90d35a5dd317e",
        "urls": [
          "bzz-raw://3c79e7a02e98992bca9e5bc5eb4513100b557f511b1cb0245f7838e12e87efeb",
          "dweb:/ipfs/QmPZDziwpJsReTqbzF7JiWntq4XitinnAJjDd393ePRB6T"
        ],
        "license": "MIT"
      },
      "src/market/libraries/AccountingLibrary.sol": {
        "keccak256": "0xaf63013204ceefcfea23c1843805dcbbdc3ca78f20075c50d1ff1e121b303ce6",
        "urls": [
          "bzz-raw://48e83453f178df9f745e91a408af5e51feb1a0c932c42052a6f2ada9be795225",
          "dweb:/ipfs/QmUxBEeqETbGSPTsZFttUxkiBGpJSqHr6LZJVuWWhH9giA"
        ],
        "license": "MIT"
      },
      "src/market/libraries/CapsLibrary.sol": {
        "keccak256": "0xbc9bb02b6d216723e2dc0ea7431e072c206a7318dab435d5b713c168c0aaaf09",
        "urls": [
          "bzz-raw://56837fc8e7df66ebc9b65790782d14a0bd14a096dea50d5f1d795bdb5cdfacc8",
          "dweb:/ipfs/QmXKaAPHzCnRsUAXuHKoJyR6cXQiRQ5dZtCdD4ZB2SthcP"
        ],
        "license": "MIT"
      },
      "src/market/libraries/DepositTokenLibrary.sol": {
        "keccak256": "0xe11c6f6c228fa1a8f10eb74f6db851e8b23f73664a4f92dd17da7cb0c349e7d1",
        "urls": [
          "bzz-raw://0bd0450b84ef1561454628afb863d3edd6248eea4d0deb2580de5fbb1728d34c",
          "dweb:/ipfs/QmakkuB6Pzahjo1SQ9Ybmic4ym96UaQ7e8iEb8btDVqEKv"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Errors.sol": {
        "keccak256": "0xb45510436b26e36c1e45c589203678bdbcfbfcf1ab44277c27234e20f9318b6f",
        "urls": [
          "bzz-raw://7df58668e11fb5e0108b20fe2db50fd44968001fa59d8a72edf7f9e69209f801",
          "dweb:/ipfs/QmVGKzAUywbQjXZLBosMHwjuu7HsNbfN1Qigb5NmUGYXp3"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Events.sol": {
        "keccak256": "0x381f68b7ee89897a3cd38f5b267a0bd7954aa6853283b6235b44fd1af2e24b0d",
        "urls": [
          "bzz-raw://b4930543bd6b4b90fe1f06f338cc05955b6d9cce34ef6c817afaebcb0cac4ea8",
          "dweb:/ipfs/QmPQXauGZ9BkhoUgEWKbzjkYr3wpxTpenYGR4K2BYYoKTH"
        ],
        "license": "MIT"
      },
      "src/market/libraries/LoanLibrary.sol": {
        "keccak256": "0x93d76a205f0dd0130d1bcf4657edf2c40921ca76b77d468d802c24e42ba9eccb",
        "urls": [
          "bzz-raw://7e10015fa9e6bc78c5a2ef23595c140aea8dd41e44adfa7bb24cb7551ae61cac",
          "dweb:/ipfs/QmP93Yb2WhDBPstvhDkNzTDyqXQsdLmhQd61oj9LFSVfJZ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Math.sol": {
        "keccak256": "0x445f0f8e7e74e16ce74d8563a083fa8c5a54142eb871f7e076f0569a5a940949",
        "urls": [
          "bzz-raw://9c34a2714a25dff091b872aa35056354c8a481112ff475204a31bc8db894eac3",
          "dweb:/ipfs/QmY5oew2GzqxaVA9f39hCr68V8tuhW5k4iB23kpXnPgx38"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Multicall.sol": {
        "keccak256": "0x557da60425f64fce42e25de2f1e5da989a01ac24e16bd587d1c8ea04c1bc4c03",
        "urls": [
          "bzz-raw://cf18600b85e8aa19b07f7e0abe082520ba2cebd190665d4a0b2ebe2395911d98",
          "dweb:/ipfs/Qmb3MEsVjEEciWNi3BfArzQbkcZ8aeQMAKVHp8E79GQrUd"
        ],
        "license": "MIT"
      },
      "src/market/libraries/OfferLibrary.sol": {
        "keccak256": "0x7926a94b1d39a8870808b0fbef5475f7b424589bde84f7edea97898e81bb13d8",
        "urls": [
          "bzz-raw://82d44cc7a629d0d74013efb9fe3980916571416e19f717132a3ef18be95e18a9",
          "dweb:/ipfs/QmNRPBYTT5t2sXFWVCcMjkZCXEmfU3hP4HMqgUHwzmX7Ys"
        ],
        "license": "MIT"
      },
      "src/market/libraries/RiskLibrary.sol": {
        "keccak256": "0x8fc54337eb367bfc09ab84a4a6bf7ccd4d2223d39d5b59acb9ba0ef6db920212",
        "urls": [
          "bzz-raw://d8956d37f6b33b13ad766774742be28f15b31444798eaddc5346743cea90578c",
          "dweb:/ipfs/QmefRwhFvL6XsLVL5h2xxn91qX4JxcFQbhnrd7f37J4yLR"
        ],
        "license": "MIT"
      },
      "src/market/libraries/YieldCurveLibrary.sol": {
        "keccak256": "0x8d4b1f45d67387169c3b38cc034305eba91ad306dac7021d4658e3b8bbc9a135",
        "urls": [
          "bzz-raw://438376203571e01cbb26ea58c192d3036a1e623c0c5897c52aeafaa90e281cd3",
          "dweb:/ipfs/QmcRNJKsudM9bZvCPCSEQWxPHvVEfQD1u2MPf8S33fh3o3"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "keccak256": "0xccb77182ce62b7ea147ee65ad7e32076f9e565a2605c18842087103e471f79f1",
        "urls": [
          "bzz-raw://571a3265ef2664d9fea268e229af1bc0e430f458efe6898a03532de799d959ef",
          "dweb:/ipfs/QmSA1hphKNeRdqKtKpbfM3yof9TTd13r9X5ei7jNiuhcwQ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "keccak256": "0xdcd1e28348e63db90f96e882221ddc4d44ca7f00840e26fb6ac4415b7912ef9b",
        "urls": [
          "bzz-raw://2c0b52e3901d79c80dd4a098f050ea9192488f71d585f41e9ba1bf10aabe9a50",
          "dweb:/ipfs/QmYvjvBtZVLivFpkw9UWbtW4YvgQNGiJVTJCW2PzcrEqvN"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Claim.sol": {
        "keccak256": "0xb71ab7b45ca738fcb802bf2ab29f9e6b37ae98d7463dbfdfa6a51361a1d4bcd6",
        "urls": [
          "bzz-raw://fc4357c1be3ccd8a37bb023d8cd8a8e346626423e54b93327e915be294c6de0c",
          "dweb:/ipfs/QmSvfKQ5xtJQmxQmPfyE8zqUaJLgDsxcGq55rQHxrWXftq"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Compensate.sol": {
        "keccak256": "0x5fa7ce8b74eeea09d12b78e3b31dbc7b37fca58b235299ad5d9f8e99ea400719",
        "urls": [
          "bzz-raw://4fbeff16ba76d1e3735f4d067ba16da7b0f35176ff9ea501a99f94063936bc5d",
          "dweb:/ipfs/QmYyogfmQmrpEksBc9uSjVQvYAWdaq31pJ3j6aAnc8D1rA"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/CopyLimitOrders.sol": {
        "keccak256": "0x7c0122a6757ea03a0e466ece6bfe1689804dbc67aa47bbe3959dbfbd9bdf5044",
        "urls": [
          "bzz-raw://5450e2ddb79dc482d93a34701e6559c972ba2247b6ce2fb2ce02c5ec15964bff",
          "dweb:/ipfs/QmdLeycgcqWjZ8gAvduxZpHRvsXGoa3BpvS9oJvhdH3QwZ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Deposit.sol": {
        "keccak256": "0xdb3dc341ad3b08322939d991f827a11be890163ce1b81bc8944e9da9f276593d",
        "urls": [
          "bzz-raw://146b20c28ee3528f60fe6c68e19e53c6d232d5bdb4341a54232921325ed02eb5",
          "dweb:/ipfs/QmZv7smGvYeHBsG2VMP6CiAeoLzHmcJpdNosRjRnZEQ8cn"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Initialize.sol": {
        "keccak256": "0xb48fd6e618d744052a68a6d963ca5b79c1375d929a5b3b11a38b89603ad8c9d6",
        "urls": [
          "bzz-raw://0f7bc6833318ebf3e19764140d1dac326ef602ad276bfae386a855a80e92b61e",
          "dweb:/ipfs/QmRuiU2RmFpqQZjtnJUiu2GaveK7Ykg85hKXrCBHHFxAQT"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "keccak256": "0xd3c46e7454dd7932f34149d28ec5a0b6ee4749a8903d78e722dc19163cf2732d",
        "urls": [
          "bzz-raw://ff03c519e678a0557d2a4954d917ae907d0d6a08aa8a7c3cd2be807930c5b9ff",
          "dweb:/ipfs/QmfYXxx4g1RFyg9is7EyuW2xBmd6w5t9s1HnArdqC7opAD"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "keccak256": "0xb93fd3da4105662549ce3044ae66cf658aed32e250acb6650df8e243e80d8c47",
        "urls": [
          "bzz-raw://0dc2b2170e792ee45f01e81b6f348c4a3d17b067b8b59015205969d6b08782ca",
          "dweb:/ipfs/QmUVMZeqRaVdVUkFe4LL5PYHXsxN5pmDS4wibsZHUXZXtk"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "keccak256": "0x18c3217aab5882299e55019dced21528174b2b395204f96e9a36004024f6ea93",
        "urls": [
          "bzz-raw://88f12e5b76e4d12c96236ca96058fe9faf979fc6de8bd0e68e4aa8eabc254b65",
          "dweb:/ipfs/QmSQx1eK9UDebvVWhTMfUfthvJ4GEpo3Uf9zyNJNuLurKW"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Repay.sol": {
        "keccak256": "0xe691e25d19c3c5ac9c6f8eb7a5d816b78fe34f859a21250b0ed5cb89511a928a",
        "urls": [
          "bzz-raw://9a6d6057553cd249aed266292e15db36afdabc572cf1b712e9c80a29260639da",
          "dweb:/ipfs/QmU8uMqjL2eDDS1hsMKhBmhDnXPcdB7b89xJDLtYUMrm6F"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "keccak256": "0x2d71cff942efc93fb7aa3a0a636e44562e0fa44ba4d503f323c6d08e7fdd8af3",
        "urls": [
          "bzz-raw://cdc43c74a42cffbf3844939df1d21a2b392ad3596ece8f1e9a6ebe08c2ec64be",
          "dweb:/ipfs/QmRUScCkvE4EADEUEvdwrsnzfLsq7xjFt1xsSZ4PZfs6J7"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "keccak256": "0xe8fe9ab69faccffa8539167973d13c5afe04ca8358316a092540171d084654b9",
        "urls": [
          "bzz-raw://0c626cb1ad9347b0eabd162f590c61175cdc687958bc6684843201713c5efa89",
          "dweb:/ipfs/QmNqZc3Zh2Nvj6exvG89XShBY4WtBJSh6iKWr7gZB8sQ3k"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "keccak256": "0x9eb93f5b5e2183e9dbef11967f23ff212cdf2e4850166173435425a6ac765664",
        "urls": [
          "bzz-raw://f8945337e751c520c47f46d708b996f23291e525bed22edaee2d86ee3a26edf8",
          "dweb:/ipfs/QmVmiy7nR5G1VhaXqs6wBVqeraRbET1mFdh6N5Mry51WGj"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "keccak256": "0x2616ee9d1e2a4e0e54e9dd320c6e7a77700c390f9fd03775f0f4318e5e18d3f7",
        "urls": [
          "bzz-raw://882e2fa2d69bdfea68718f7ae79db554f31b9503259a912ab59a4b4f3cbba360",
          "dweb:/ipfs/QmaSHBTBm4SNszTL3wbcTkyzbBDszFA1XgrPtGe2T98yj3"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "keccak256": "0x7e26d2d7ceb21fec0545a4f73e0b5e9c7edb6218b818003fac3b0ed48193b36c",
        "urls": [
          "bzz-raw://1b61c6604b0ea4a2b7aad3d397f51fb9684fa44117146eaec64e36d0382f4de8",
          "dweb:/ipfs/QmPfCFvb8DRLufZ5Ltgf28Rte4Y929APqvRi6LPHMGejzd"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "keccak256": "0x66c9620ed432ef9fb53ad41a967432f5c68cc1b48855743f04733ad9f4921d00",
        "urls": [
          "bzz-raw://b49ebd22fa2c2a4dd6644e87ca4cd2b4ff29978c6c149d0a6acf142d5ddf5e60",
          "dweb:/ipfs/QmUAbuDTEuSxewMbAZjkdnjQ7CG47C3PmyvWmKKeGXTbYz"
        ],
        "license": "MIT"
      },
      "src/market/token/NonTransferrableScaledTokenV1_5.sol": {
        "keccak256": "0xf97d987f52e49a11142ab9146ace9979d71feec057eff2d48304d73b57435c2c",
        "urls": [
          "bzz-raw://d5953d8df62fda44b6b67878e548eddedaf7e3e8f23671c9ed3216c8961dafe3",
          "dweb:/ipfs/QmWK1nKSm7rvEp4G376Pu6opEFSaoDAkNFGZhesxAwynA1"
        ],
        "license": "MIT"
      },
      "src/market/token/NonTransferrableToken.sol": {
        "keccak256": "0xf82118604ddbcd5d9ff708d739396e993d9621cff7b07f22a519141ca39a9e17",
        "urls": [
          "bzz-raw://4f371fb37a2ac76630302b1284d62e8657f038b504ce9884723574c2a3de32ec",
          "dweb:/ipfs/QmRsjmBirftC8Jih4jBG2BoJmpe4RRAAsEwsmtLjWicTVf"
        ],
        "license": "MIT"
      },
      "src/oracle/IPriceFeed.sol": {
        "keccak256": "0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90",
        "urls": [
          "bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48",
          "dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/PriceFeed.sol": {
        "keccak256": "0xc0bd99de76ee008df1be079de7efc852eb2ecd43a8f2c1d1d804165ff732ad9a",
        "urls": [
          "bzz-raw://b03ea6b0ea9a61a296cd29fb0d18de4911038a07b6ff3fea6d1ed46f4973fffa",
          "dweb:/ipfs/QmP6cY5rMkxePzRgEaVxyfJV9wx4QvLuB2LRHkReCoPYUu"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/adapters/ChainlinkPriceFeed.sol": {
        "keccak256": "0x71a4ccb7d9469f4d7a914a81c754b1278152a387f8154e0f9793e0e3d010a599",
        "urls": [
          "bzz-raw://d953653f6481b344d0d00a677a8301f3006a50c3b90744c39cd3eda6f508818b",
          "dweb:/ipfs/QmYR1RvdMboMpH9ykJN5WwuC3AabSvPS2JA4t4afxa7gyh"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/adapters/ChainlinkSequencerUptimeFeed.sol": {
        "keccak256": "0x3d200d7fcc7c457a201f2bb32a0b68ea13b2b697cb300bbd587828bff5ffe8b8",
        "urls": [
          "bzz-raw://d72923e346e73eb0d42d055437dc6df059c3a8f27b08ff5aacd7cf7fdf90eec5",
          "dweb:/ipfs/QmPYENtSCwseMxYtQeKAkVe8DuCJYzRGpFRxDgw85xf2g8"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/adapters/UniswapV3PriceFeed.sol": {
        "keccak256": "0xea95d62fd50c16d48014c11d4dad500b53406aca773ed4e0632290f696b5998f",
        "urls": [
          "bzz-raw://81373a8e7c054eaecc7017be89cd4ee7d7f09eab09df8d568c944b72ef7c1abe",
          "dweb:/ipfs/QmQc4gmAoq2oYdBmnTsimDCVWas1tnFAMfxLvykbSTb5kd"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 122
}
