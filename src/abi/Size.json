{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "buyCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ClaimParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "collateralRatio",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "compensate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CompensateParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "creditPositionToCompensateId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "data",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DataView",
          "components": [
            {
              "name": "nextDebtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nextCreditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "collateralToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "borrowAToken",
              "type": "address",
              "internalType": "contract NonTransferrableScaledTokenV1_5"
            },
            {
              "name": "debtToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "contract IPool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "debtTokenAmountToCollateralTokenAmount",
      "inputs": [
        {
          "name": "borrowATokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "feeConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBorrowOfferAPR",
      "inputs": [
        { "name": "borrower", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBuyCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCreditPosition",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct CreditPosition",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            { "name": "forSale", "type": "bool", "internalType": "bool" },
            { "name": "credit", "type": "uint256", "internalType": "uint256" },
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPosition",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DebtPosition",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "futureValue",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "dueDate", "type": "uint256", "internalType": "uint256" },
            {
              "name": "liquidityIndexAtRepayment",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPositionAssignedCollateral",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanOfferAPR",
      "inputs": [
        { "name": "lender", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanStatus",
      "inputs": [
        { "name": "positionId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "uint8", "internalType": "enum LoanStatus" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPositionsCount",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSellCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "creditAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSwapFee",
      "inputs": [
        { "name": "cash", "type": "uint256", "internalType": "uint256" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserView",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserView",
          "components": [
            {
              "name": "user",
              "type": "tuple",
              "internalType": "struct User",
              "components": [
                {
                  "name": "loanOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "borrowOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            { "name": "account", "type": "address", "internalType": "address" },
            {
              "name": "collateralTokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "debtBalance",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        {
          "name": "f",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "r",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowAToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenCap",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "o",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        },
        {
          "name": "d",
          "type": "tuple",
          "internalType": "struct InitializeDataParams",
          "components": [
            { "name": "weth", "type": "address", "internalType": "address" },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "borrowATokenV1_5",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isCreditPositionId",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionId",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionLiquidatable",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isUserUnderwater",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "deadline", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "liquidateWithReplacement",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateWithReplacementParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "liquidatorProfitBorrowToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multicall",
      "inputs": [
        { "name": "_data", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [
        { "name": "results", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "oracle",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct RepayParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "riskConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowAToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenCap",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "selfLiquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SelfLiquidateParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfiguration",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationParams",
          "components": [
            {
              "name": "openingLimitBorrowCR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allCreditPositionsForSaleDisabled",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIdsForSale",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setVariablePoolBorrowRate",
      "inputs": [
        { "name": "borrowRate", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateConfig",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct UpdateConfigParams",
          "components": [
            { "name": "key", "type": "string", "internalType": "string" },
            { "name": "value", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct WithdrawParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VariablePoolBorrowRateUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "newBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AccessControlBadConfirmation", "inputs": [] },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "neededRole", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "EnforcedPause", "inputs": [] },
    { "type": "error", "name": "ExpectedPause", "inputs": [] },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    { "type": "error", "name": "NULL_OFFER", "inputs": [] },
    { "type": "error", "name": "NULL_TENOR", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    {
      "type": "error",
      "name": "USER_IS_UNDERWATER",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "cr", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516151c2620001005f395f81816132a1015281816132ca015261340b01526151c25ff3fe6080604052600436106102f3575f3560e01c80635cbc51eb11610189578063ad3cb1cc116100d8578063d8d933a511610092578063f45bf01c1161006d578063f45bf01c14610a5f578063f731a57a14610a72578063f85c3cd414610a91578063fd17174a14610ab0575f80fd5b8063d8d933a514610a1a578063e05001f514610a2d578063e5af06ce14610a40575f80fd5b8063ad3cb1cc1461094e578063b5ec74871461097e578063ca40742c146109aa578063ccc96815146109c9578063ccd8d4d1146109e8578063d547741f146109fb575f80fd5b80637dc0d1d0116101435780638e5727761161011e5780638e572776146108e957806391d14854146108fc578063a217fddf1461091b578063ac9650d81461092e575f80fd5b80637dc0d1d0146108815780637f417c06146108c25780638456cb59146108d5575f80fd5b80635cbc51eb1461066857806361a10df21461069457806364eb0a71146106b357806373d4a13a146106d257806376c1b82f146107f65780637c90a6ca14610822575f80fd5b80632ed28ba2116102455780633f4ba83a116101ff57806352d1902d116101da57806352d1902d146105dd57806354137c7e146105f157806354fd4d50146106105780635c975abb14610645575f80fd5b80633f4ba83a146105975780634cbd882c146105ab5780634f1ef286146105ca575f80fd5b80632ed28ba2146104db5780632f2ff15d1461050757806336568abe146105265780633746f8581461054557806337501921146105585780633e3c119b14610584575f80fd5b80631ca3b0cb116102b05780632b4c9a201161028b5780632b4c9a20146104775780632c60185c1461048a5780632cc884c5146104a95780632e106f21146104c8575f80fd5b80631ca3b0cb146103cb5780631e5eb1d0146103f4578063248a9ca314610458575f80fd5b806301ffc9a7146102f75780630317b9df1461032b5780630cf8542f1461034c5780631970e5ea1461035f57806319a7359b1461038c5780631c4fd41c1461039f575b5f80fd5b348015610302575f80fd5b50610316610311366004613c96565b610ac3565b60405190151581526020015b60405180910390f35b348015610336575f80fd5b5061034a610345366004613cd3565b610af9565b005b61034a61035a366004613d14565b610bd1565b34801561036a575f80fd5b5061037e610379366004613d2e565b610ca6565b604051908152602001610322565b61034a61039a366004613d45565b610cb1565b3480156103aa575f80fd5b506103be6103b9366004613d2e565b610e67565b6040516103229190613d55565b3480156103d6575f80fd5b506103df610ee2565b60408051928352602083019190915201610322565b3480156103ff575f80fd5b50610408610f15565b6040516103229190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b348015610463575f80fd5b5061037e610472366004613d2e565b610fc7565b61034a610485366004613d14565b610fe7565b348015610495575f80fd5b5061037e6104a4366004613d7b565b61108d565b3480156104b4575f80fd5b5061037e6104c3366004613daf565b6110c0565b61034a6104d6366004613dd9565b61126e565b3480156104e6575f80fd5b506104fa6104f5366004613f1e565b611314565b6040516103229190613f66565b348015610512575f80fd5b5061034a610521366004613fc5565b611395565b348015610531575f80fd5b5061034a610540366004613fc5565b6113b7565b61034a610553366004613cd3565b6113ef565b348015610563575f80fd5b50610577610572366004613f1e565b611495565b6040516103229190613ff3565b6103df61059236600461404f565b611516565b3480156105a2575f80fd5b5061034a611787565b3480156105b6575f80fd5b5061034a6105c5366004614069565b6117bc565b61034a6105d836600461408f565b61185b565b3480156105e8575f80fd5b5061037e61187a565b3480156105fc575f80fd5b5061037e61060b366004613d2e565b611895565b34801561061b575f80fd5b506040805180820190915260048152633b18971b60e11b60208201525b604051610322919061417d565b348015610650575f80fd5b505f8051602061516d8339815191525460ff16610316565b348015610673575f80fd5b5061068761068236600461418f565b6119c0565b6040516103229190614278565b34801561069f575f80fd5b5061034a6106ae36600461432a565b611dd2565b3480156106be575f80fd5b506103166106cd366004613d2e565b612057565b3480156106dd575f80fd5b5061078560408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e0928301519091169181019190915261010001610322565b348015610801575f80fd5b50610815610810366004613d2e565b612063565b6040516103229190614394565b34801561082d575f80fd5b50610836612129565b60405161032291905f60c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b34801561088c575f80fd5b506108956121cd565b6040805182516001600160a01b031681526020928301516001600160401b03169281019290925201610322565b61034a6108d03660046143a2565b612250565b3480156108e0575f80fd5b5061034a6122f4565b61034a6108f7366004613d14565b612326565b348015610907575f80fd5b50610316610916366004613fc5565b6125aa565b348015610926575f80fd5b5061037e5f81565b61094161093c3660046143bc565b6125e0565b604051610322919061442a565b348015610959575f80fd5b50610638604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610989575f80fd5b5061099d610998366004613d2e565b6125f5565b604051610322919061448c565b3480156109b5575f80fd5b5061037e6109c436600461418f565b6126db565b3480156109d4575f80fd5b506103166109e3366004613d2e565b61275e565b61034a6109f6366004613cd3565b612769565b348015610a06575f80fd5b5061034a610a15366004613fc5565b61280f565b61034a610a28366004613f1e565b61282b565b61037e610a3b366004613d14565b61295d565b348015610a4b575f80fd5b50610316610a5a366004613d2e565b612ab2565b61034a610a6d3660046144d0565b612b2e565b348015610a7d575f80fd5b50610316610a8c36600461418f565b612bd9565b348015610a9c575f80fd5b5061037e610aab366004613daf565b612c22565b61034a610abe3660046144d0565b612d61565b5f6001600160e01b03198216637965db0b60e01b1480610af357506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f610b0381612e0c565b60405163e57980dd60e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063e57980dd90610b3c905f9086906004016144ea565b5f6040518083038186803b158015610b52575f80fd5b505af4158015610b64573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9250634752b3b39150610ba1905f9086906004016144ea565b5f6040518083038186803b158015610bb7575f80fd5b505af4158015610bc9573d5f803e3d5ffd5b505050505050565b610bd9612e16565b604051638046123560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__90638046123590610c12905f9085906004016145ad565b5f6040518083038186803b158015610c28575f80fd5b505af4158015610c3a573d5f803e3d5ffd5b50506040516387e2411560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__92506387e241159150610c77905f9085906004016145ad565b5f6040518083038186803b158015610c8d575f80fd5b505af4158015610c9f573d5f803e3d5ffd5b5050505050565b5f610af38183612e48565b610cb9612e16565b604051631621030760e01b815273__$40338b66eef5a4814456f5e5d0057a85cb$__90631621030790610cf2905f9085906004016145c1565b5f6040518083038186803b158015610d08575f80fd5b505af4158015610d1a573d5f803e3d5ffd5b505060405163b71df57f60e01b81525f925073__$40338b66eef5a4814456f5e5d0057a85cb$__915063b71df57f90610d5990849086906004016145c1565b602060405180830381865af4158015610d74573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d989190614633565b90505f19826020013503610e295773__$54339234670bed530be64a2569bfcff861$__632d77afb65f610dce602086018661418f565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015b5f6040518083038186803b158015610e12575f80fd5b505af4158015610e24573d5f803e3d5ffd5b505050505b60405163bfbfe8ab60e01b81525f60048201526024810182905273__$5e1dc6026664d540c986e6d76069f97e44$__9063bfbfe8ab90604401610ba1565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$137de846162d19becd7adae071bc6b8643$__90637d62a7e090604401602060405180830381865af4158015610ebe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af3919061464a565b6011545f908190610ef490829061467c565b610f0060025f1961468f565b601254610f0d919061467c565b915091509091565b610f516040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__906386617e779060240160c060405180830381865af4158015610f9e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc291906146ae565b905090565b5f9081525f8051602061514d833981519152602052604090206001015490565b610fef612e16565b60405163010cc09b60e21b815273__$d7ed34c1233366b4d2093a06a83503a127$__90630433026c90611028905f9085906004016145ad565b5f6040518083038186803b15801561103e575f80fd5b505af4158015611050573d5f803e3d5ffd5b505060405163b8359e9760e01b815273__$d7ed34c1233366b4d2093a06a83503a127$__925063b8359e979150610c77905f9085906004016145ad565b5f815f036110ae576040516301c85f6760e71b815260040160405180910390fd5b6110b95f8484613048565b9392505050565b6001600160a01b0382165f908152600e60209081526040808320815180830183528154815282516001830180546080818802840181019096526060830181815288979496948701948492849184018282801561113957602002820191905f5260205f20905b815481526020019060010190808311611125575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561118f57602002820191905f5260205f20905b81548152602001906001019080831161117b575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156111e557602002820191905f5260205f20905b8154815260200190600101908083116111d1575b5050505050815250508152505090506111fd81613065565b1561121b5760405163309f293760e21b815260040160405180910390fd5b60408051606081018252600d546001600160801b03811682526001600160401b03600160801b820481166020840152600160c01b90910416918101919091526112669082908561307e565b949350505050565b611276612e16565b60405163603ed05b60e01b815273__$522109956a60eeb242799fac64155e2c7d$__9063603ed05b906112af905f908590600401614787565b5f6040518083038186803b1580156112c5575f80fd5b505af41580156112d7573d5f803e3d5ffd5b505060405163153f43e560e31b815273__$522109956a60eeb242799fac64155e2c7d$__925063a9fa1f289150610c77905f908590600401614787565b61131c613b43565b604051631c81982560e11b815273__$40338b66eef5a4814456f5e5d0057a85cb$__90633903304a90611355905f9086906004016147ef565b61014060405180830381865af4158015611371573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af391906148c2565b61139e82610fc7565b6113a781612e0c565b6113b1838361311d565b50505050565b6001600160a01b03811633146113e05760405163334bd91960e11b815260040160405180910390fd5b6113ea82826131be565b505050565b6113f7612e16565b604051634cf319b960e11b815273__$bb87e4d06c905b2a40fd4eb630d02af12b$__906399e6337290611430905f9085906004016149f6565b5f6040518083038186803b158015611446575f80fd5b505af4158015611458573d5f803e3d5ffd5b505060405163339bb63160e01b815273__$bb87e4d06c905b2a40fd4eb630d02af12b$__925063339bb6319150610c77905f9085906004016149f6565b61149d613b89565b60405163301d1d1560e21b815273__$6a70d15ccab52e60961e0e6eac4956e318$__9063c0747454906114d6905f9086906004016147ef565b61012060405180830381865af41580156114f2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af39190614a0e565b5f80611520612e16565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab61154a81612e0c565b604051639f53ee0f60e01b815273__$083884a3186f9b2b23885dfeba78ff7244$__90639f53ee0f90611583905f908890600401614aaf565b5f6040518083038186803b158015611599575f80fd5b505af41580156115ab573d5f803e3d5ffd5b505060405163647a4b7560e11b81525f925073__$083884a3186f9b2b23885dfeba78ff7244$__915063c8f496ea906115ea9084908990600401614aaf565b606060405180830381865af4158015611605573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116299190614ac3565b9095509350905073__$54339234670bed530be64a2569bfcff861$__632d77afb65f61165b6040890160208a0161418f565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b15801561169e575f80fd5b505af41580156116b0573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$083884a3186f9b2b23885dfeba78ff7244$__9250636e6595c191506116ef905f9089908990600401614aee565b5f6040518083038186803b158015611705575f80fd5b505af4158015611717573d5f803e3d5ffd5b505060405163bfbfe8ab60e01b81525f60048201526024810184905273__$5e1dc6026664d540c986e6d76069f97e44$__925063bfbfe8ab91506044015f6040518083038186803b15801561176a575f80fd5b505af415801561177c573d5f803e3d5ffd5b505050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6117b181612e0c565b6117b9613237565b50565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240386117e681612e0c565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611863613296565b61186c8261333a565b6118768282613344565b5050565b5f611883613400565b505f8051602061512d83398151915290565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$137de846162d19becd7adae071bc6b8643$__90639930537e90604401602060405180830381865af41580156118ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119129190614633565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$137de846162d19becd7adae071bc6b8643$__906345ffd36d90611981905f908590600401614b10565b602060405180830381865af415801561199c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110b99190614633565b6119c8613bc0565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611a5a57602002820191905f5260205f20905b815481526020019060010190808311611a46575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611ab057602002820191905f5260205f20905b815481526020019060010190808311611a9c575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611b0657602002820191905f5260205f20905b815481526020019060010190808311611af2575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015611b8c57602002820191905f5260205f20905b815481526020019060010190808311611b78575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611be257602002820191905f5260205f20905b815481526020019060010190808311611bce575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611c3857602002820191905f5260205f20905b815481526020019060010190808311611c24575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa158015611cbe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ce29190614633565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611d32573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d569190614633565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611da6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dca9190614633565b905292915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f81158015611e165750825b90505f826001600160401b03166001148015611e315750303b155b905081158015611e3f575080155b15611e5d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611e8757845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__906369777eb990611ec8905f908e908e908e908e908e90600401614c61565b5f6040518083038186803b158015611ede575f80fd5b505af4158015611ef0573d5f803e3d5ffd5b50505050611efc613449565b611f04613451565b611f0c613449565b604051632ffdac7160e21b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063bff6b1c490611f4b905f908d908d908d908d90600401614ceb565b5f6040518083038186803b158015611f61575f80fd5b505af4158015611f73573d5f803e3d5ffd5b50505050611f835f801b8b61311d565b50611fae7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b61311d565b50611fd97ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b61311d565b506120047f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b61311d565b50831561204b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6011545f908210610af3565b61206b613bfa565b604051633978289f60e01b81525f60048201526024810183905273__$137de846162d19becd7adae071bc6b8643$__90633978289f90604401602060405180830381865af41580156120bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120e39190614633565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b61215c6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063dd378fd69060240160c060405180830381865af41580156121a9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc29190614d5a565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063d72f4008906024016040805180830381865af415801561222c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc29190614db2565b612258612e16565b6040516210aa0b60e31b815273__$7dc37f9f4797eb854780a74171eb2f4993$__90628550589061228f905f908590600401614e0e565b5f6040518083038186803b1580156122a5575f80fd5b505af41580156122b7573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$7dc37f9f4797eb854780a74171eb2f4993$__92506364140a839150610c77905f908590600401614e0e565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61231e81612e0c565b6117b9613461565b61232e612e16565b604051634ec6ce5b60e11b81525f600482018190523360248301529073__$54339234670bed530be64a2569bfcff861$__90639d8d9cb690604401602060405180830381865af4158015612384573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123a89190614e46565b604051634bc1120160e01b815290915073__$ef4190de80c3c7f10088bb7cf8a0baddca$__90634bc11201906123e4905f908690600401614e61565b5f6040518083038186803b1580156123fa575f80fd5b505af415801561240c573d5f803e3d5ffd5b50506040516332f4053b60e01b815273__$ef4190de80c3c7f10088bb7cf8a0baddca$__92506332f4053b9150612449905f908690600401614e61565b5f6040518083038186803b15801561245f575f80fd5b505af4158015612471573d5f803e3d5ffd5b5050604051634ec6ce5b60e11b81525f60048201819052336024830152925073__$54339234670bed530be64a2569bfcff861$__9150639d8d9cb690604401602060405180830381865af41580156124cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906124ef9190614e46565b9050811580156124fc5750805b156113ea5760405163046dbd1360e11b81525f600482015233602482018190529073__$54339234670bed530be64a2569bfcff861$__906308db7a2690604401602060405180830381865af4158015612557573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061257b9190614633565b60405163092ceea960e31b81526001600160a01b03909216600483015260248201526044015b60405180910390fd5b5f9182525f8051602061514d833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606125ea612e16565b6110b95f84846134a9565b61262560405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$137de846162d19becd7adae071bc6b8643$__90639930537e90604401602060405180830381865af4158015612679573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061269d9190614633565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$54339234670bed530be64a2569bfcff861$__906308db7a2690604401602060405180830381865af415801561273a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af39190614633565b5f610af38183613810565b612771612e16565b6040516329de607960e01b815273__$872edea7acf8ea04327f178ae369cb7d23$__906329de6079906127aa905f9085906004016149f6565b5f6040518083038186803b1580156127c0575f80fd5b505af41580156127d2573d5f803e3d5ffd5b50506040516309f18b1960e11b815273__$872edea7acf8ea04327f178ae369cb7d23$__92506313e316329150610c77905f9085906004016149f6565b61281882610fc7565b61282181612e0c565b6113b183836131be565b612833612e16565b604051630dd8fb6560e21b815273__$6a70d15ccab52e60961e0e6eac4956e318$__90633763ed949061286c905f9085906004016147ef565b5f6040518083038186803b158015612882575f80fd5b505af4158015612894573d5f803e3d5ffd5b505060405163d73654eb60e01b81525f925073__$6a70d15ccab52e60961e0e6eac4956e318$__915063d73654eb906128d390849086906004016147ef565b602060405180830381865af41580156128ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129129190614633565b90505f19826020015103610e29576040516316bbd7db60e11b81525f600482015233602482015273__$54339234670bed530be64a2569bfcff861$__90632d77afb690604401610dfc565b5f612966612e16565b6040516320b5435f60e11b815273__$bd78b82d3691bf7d290be9fb9bf4abf7be$__9063416a86be9061299f905f908690600401614e61565b5f6040518083038186803b1580156129b5575f80fd5b505af41580156129c7573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$bd78b82d3691bf7d290be9fb9bf4abf7be$__925063341a672c9150612a04905f908690600401614e61565b602060405180830381865af4158015612a1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612a439190614633565b60405163489d188160e01b815290915073__$bd78b82d3691bf7d290be9fb9bf4abf7be$__9063489d188190612a81905f9086908690600401614e89565b5f6040518083038186803b158015612a97575f80fd5b505af4158015612aa9573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$54339234670bed530be64a2569bfcff861$__9063325191d2906044015b602060405180830381865af4158015612b0a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af39190614e46565b612b36612e16565b604051635792057f60e11b81525f60048201528135602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__9063af240afe906044015f6040518083038186803b158015612b85575f80fd5b505af4158015612b97573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__92506341d373f29150604401610c77565b604051634ec6ce5b60e11b81525f600482018190526001600160a01b03831660248301529073__$54339234670bed530be64a2569bfcff861$__90639d8d9cb690604401612aef565b6001600160a01b0382165f908152600e602090815260408083208151808301835260048201805482528351600590930180546080818802860181019096526060850181815288979496939594870194938492849184018282801561113957602002820191905f5260205f209081548152602001906001019080831161112557505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561118f57602002820191905f5260205f209081548152602001906001019080831161117b5750505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156111e557602002820191905f5260205f20908154815260200190600101908083116111d1575050505050815250508152505090506111fd81613065565b612d69612e16565b6040516306241a0160e51b81525f60048201528135602482015273__$20b01ba837bb61c0f81e8afe21d5ca6650$__9063c4834020906044015f6040518083038186803b158015612db8575f80fd5b505af4158015612dca573d5f803e3d5ffd5b5050604051632981ae3960e21b81525f60048201528335602482015273__$20b01ba837bb61c0f81e8afe21d5ca6650$__925063a606b8e49150604401610c77565b6117b98133613833565b5f8051602061516d8339815191525460ff1615612e465760405163d93c066560e01b815260040160405180910390fd5b565b5f6110b983600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ea0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ec49190614633565b612ecf90600a614f9f565b612ed99084614faa565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015612f23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f479190614fc1565b612f5290600a614fe1565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015612f9c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612fc09190614fc1565b612fcb90600a614fe1565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa158015613015573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130399190614633565b6130439190614faa565b61386c565b5f611266836130578685613878565b670de0b6b3a764000061386c565b80515f90158015610af35750610af3826020015161388b565b5f815f0361309f576040516301c85f6760e71b815260040160405180910390fd5b60208401516040516315c6891560e11b815273__$30cdd3af314c0847e81c95388f79c2a65a$__91632b8d122a916130de919087908790600401614fef565b602060405180830381865af41580156130f9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112669190614633565b5f5f8051602061514d83398151915261313684846125aa565b6131b5575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561316b3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610af3565b5f915050610af3565b5f5f8051602061514d8339815191526131d784846125aa565b156131b5575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610af3565b61323f6138b1565b5f8051602061516d833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061331c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166133105f8051602061512d833981519152546001600160a01b031690565b6001600160a01b031614155b15612e465760405163703e46dd60e11b815260040160405180910390fd5b5f61187681612e0c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561339e575060408051601f3d908101601f1916820190925261339b91810190614633565b60015b6133c657604051634c9c8ce360e01b81526001600160a01b03831660048201526024016125a1565b5f8051602061512d83398151915281146133f657604051632a87526960e21b8152600481018290526024016125a1565b6113ea83836138e0565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612e465760405163703e46dd60e11b815260040160405180910390fd5b612e46613935565b613459613935565b612e4661397e565b613469612e16565b5f8051602061516d833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833613278565b60198301805460ff60a01b1916600160a01b179055601a830154604080516318160ddd60e01b815290516060925f926001600160a01b03909116916318160ddd916004808201926020929091908290030181865afa15801561350d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135319190614633565b90505f85600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613589573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135ad9190614633565b9050836001600160401b038111156135c7576135c7613e0f565b6040519080825280602002602001820160405280156135fa57816020015b60608152602001906001900390816135e55790505b5092505f5b8481101561368d576136683087878481811061361d5761361d6150bb565b905060200281019061362f91906150cf565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061399e92505050565b84828151811061367a5761367a6150bb565b60209081029190910101526001016135ff565b50601a860154604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156136d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136fb9190614633565b90505f87600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613753573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906137779190614633565b60405163111a6a5d60e31b8152600481018a90526024810186905260448101859052606481018490526084810182905290915073__$5e1dc6026664d540c986e6d76069f97e44$__906388d352e89060a4015f6040518083038186803b1580156137df575f80fd5b505af41580156137f1573d5f803e3d5ffd5b5050506019909801805460ff60a01b1916905550929695505050505050565b5f61381d60025f1961468f565b82101580156110b9575050601291909101541190565b61383d82826125aa565b6118765760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016125a1565b5f611266848484613a10565b81545f906110b990836301e1338061386c565b8051515f901580156138a05750602082015151155b8015610af357505060400151511590565b5f8051602061516d8339815191525460ff16612e4657604051638dfc202b60e01b815260040160405180910390fd5b6138e982613a3c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561392d576113ea828261399e565b611876613a9f565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16612e4657604051631afcd79f60e31b815260040160405180910390fd5b613986613935565b5f8051602061516d833981519152805460ff19169055565b60605f80846001600160a01b0316846040516139ba9190615111565b5f60405180830381855af49150503d805f81146139f2576040519150601f19603f3d011682016040523d82523d5f602084013e6139f7565b606091505b5091509150613a07858383613abe565b95945050505050565b5f825f190484118302158202613a2d5763ad251c275f526004601cfd5b50910281810615159190040190565b806001600160a01b03163b5f03613a7157604051634c9c8ce360e01b81526001600160a01b03821660048201526024016125a1565b5f8051602061512d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b3415612e465760405163b398979f60e01b815260040160405180910390fd5b606082613ad357613ace82613b1a565b6110b9565b8151158015613aea57506001600160a01b0384163b155b15613b1357604051639996b31560e01b81526001600160a01b03851660048201526024016125a1565b50806110b9565b805115613b2a5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060e00160405280613b56613bfa565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060c00160405280613b9c613bfa565b81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060a00160405280613bd3613c29565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81525090565b60405180608001604052805f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b6040518060800160405280613c3c613c5c565b8152602001613c49613c5c565b81525f6020820181905260409091015290565b60405180604001604052805f8152602001613c9160405180606001604052806060815260200160608152602001606081525090565b905290565b5f60208284031215613ca6575f80fd5b81356001600160e01b0319811681146110b9575f80fd5b5f60408284031215613ccd575f80fd5b50919050565b5f60208284031215613ce3575f80fd5b81356001600160401b03811115613cf8575f80fd5b61126684828501613cbd565b5f60608284031215613ccd575f80fd5b5f60608284031215613d24575f80fd5b6110b98383613d04565b5f60208284031215613d3e575f80fd5b5035919050565b5f60e08284031215613ccd575f80fd5b6020810160038310613d7557634e487b7160e01b5f52602160045260245ffd5b91905290565b5f8060408385031215613d8c575f80fd5b50508035926020909101359150565b6001600160a01b03811681146117b9575f80fd5b5f8060408385031215613dc0575f80fd5b8235613dcb81613d9b565b946020939093013593505050565b5f60208284031215613de9575f80fd5b81356001600160401b03811115613dfe575f80fd5b8201608081850312156110b9575f80fd5b634e487b7160e01b5f52604160045260245ffd5b60405160e081016001600160401b0381118282101715613e4557613e45613e0f565b60405290565b60405160c081016001600160401b0381118282101715613e4557613e45613e0f565b604051601f8201601f191681016001600160401b0381118282101715613e9557613e95613e0f565b604052919050565b80151581146117b9575f80fd5b5f60e08284031215613eba575f80fd5b613ec2613e23565b90508135613ecf81613d9b565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c0820135613f1381613e9d565b60c082015292915050565b5f60e08284031215613f2e575f80fd5b6110b98383613eaa565b80516001600160a01b0316825260208082015115159083015260408082015190830152606090810151910152565b5f61014082019050613f79828451613f38565b60018060a01b036020840151166080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015260c083015161012083015292915050565b5f8060408385031215613fd6575f80fd5b823591506020830135613fe881613d9b565b809150509250929050565b5f61012082019050614006828451613f38565b60208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015292915050565b5f60a08284031215613ccd575f80fd5b5f60a0828403121561405f575f80fd5b6110b9838361403f565b5f60208284031215614079575f80fd5b81356001600160801b03811681146110b9575f80fd5b5f80604083850312156140a0575f80fd5b82356140ab81613d9b565b91506020838101356001600160401b03808211156140c7575f80fd5b818601915086601f8301126140da575f80fd5b8135818111156140ec576140ec613e0f565b6140fe601f8201601f19168501613e6d565b91508082528784828501011115614113575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f5b8381101561414a578181015183820152602001614132565b50505f910152565b5f8151808452614169816020860160208601614130565b601f01601f19169290920160200192915050565b602081525f6110b96020830184614152565b5f6020828403121561419f575f80fd5b81356110b981613d9b565b5f815180845260208085019450602084015f5b838110156141d9578151875295820195908201906001016141bd565b509495945050505050565b805182525f60208083015160408286015280516060604087015261420b60a08701826141aa565b83830151603f19888303810160608a0152815180845291860193505f929091908601905b8084101561424f578451825293860193600193909301929086019061422f565b5060408501519550818982030160808a015261426b81876141aa565b9998505050505050505050565b602081525f825160a060208401528051608060c085015261429d6101408501826141e4565b9050602082015160bf198583030160e08601526142ba82826141e4565b915050604082015161010085015260608201511515610120850152602085015191506142f160408501836001600160a01b03169052565b6040850151606085015260608501516080850152608085015160a0850152809250505092915050565b5f60c08284031215613ccd575f80fd5b5f805f805f610280868803121561433f575f80fd5b853561434a81613d9b565b9450614359876020880161431a565b93506143688760e0880161431a565b9250614378876101a08801613cbd565b9150614388876101e0880161403f565b90509295509295909350565b60808101610af38284613f38565b5f604082840312156143b2575f80fd5b6110b98383613cbd565b5f80602083850312156143cd575f80fd5b82356001600160401b03808211156143e3575f80fd5b818501915085601f8301126143f6575f80fd5b813581811115614404575f80fd5b8660208260051b8501011115614418575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561447f57603f1988860301845261446d858351614152565b94509285019290850190600101614451565b5092979650505050505050565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015260808101610af3565b5f60208284031215613ccd575f80fd5b5f602082840312156144e0575f80fd5b6110b983836144c0565b828152604060208201525f8235601e19843603018112614508575f80fd5b83016020810190356001600160401b03811115614523575f80fd5b803603821315614531575f80fd5b604080850152806080850152808260a08601375f60a082860101526020850135606085015260a0601f19601f830116850101925050509392505050565b803561457981613d9b565b6001600160a01b0390811683526020828101359084015260408201359061459f82613d9b565b808216604085015250505050565b828152608081016110b9602083018461456e565b828152610100810182356145d481613d9b565b60018060a01b038116602084015250602083013560408301526040830135606083015260608301356080830152608083013560a083015260a083013560c083015260c083013561462381613e9d565b80151560e0840152509392505050565b5f60208284031215614643575f80fd5b5051919050565b5f6020828403121561465a575f80fd5b8151600381106110b9575f80fd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610af357610af3614668565b5f826146a957634e487b7160e01b5f52601260045260245ffd5b500490565b5f60c082840312156146be575f80fd5b6146c6613e4b565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015161470081613d9b565b60a08201529392505050565b5f808335601e19843603018112614721575f80fd5b83016020810192503590506001600160401b0381111561473f575f80fd5b8060051b3603821315614750575f80fd5b9250929050565b8183525f6001600160fb1b0383111561476e575f80fd5b8260051b80836020870137939093016020019392505050565b82815260406020820152813560408201525f60208301356147a781613e9d565b1515606083015260408301356147bc81613e9d565b151560808301526147d0606084018461470c565b608060a08501526147e560c085018284614757565b9695505050505050565b82815261010081016110b9602083018480516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a0818101519083015260c0908101511515910152565b5f6080828403121561485b575f80fd5b604051608081018181106001600160401b038211171561487d5761487d613e0f565b8060405250809150825161489081613d9b565b815260208301516148a081613e9d565b8060208301525060408301516040820152606083015160608201525092915050565b5f61014082840312156148d3575f80fd5b6148db613e23565b6148e5848461484b565b815260808301516148f581613d9b565b8060208301525060a0830151604082015260c0830151606082015260e0830151608082015261010083015160a082015261012083015160c08201528091505092915050565b803582525f602080830135605e19843603018112614956575f80fd5b6040858301528301614968818061470c565b6060604088015261497d60a088018284614757565b91505061498c8383018361470c565b603f19888403810160608a015281845291925f929086015b828410156149c25784358152938601936001939093019286016149a4565b6149cf604087018761470c565b97509550818a82030160808b01526149e8818888614757565b9a9950505050505050505050565b828152604060208201525f611266604083018461493a565b5f6101208284031215614a1f575f80fd5b614a27613e4b565b614a31848461484b565b81526080830151602082015260a0830151604082015260c0830151606082015260e0830151608082015261010083015160a08201528091505092915050565b803582526020810135614a8281613d9b565b6001600160a01b031660208301526040818101359083015260608082013590830152608090810135910152565b82815260c081016110b96020830184614a70565b5f805f60608486031215614ad5575f80fd5b8351925060208401519150604084015190509250925092565b83815260e08101614b026020830185614a70565b8260c0830152949350505050565b82815260a081016110b9602083018480516001600160a01b031682526020808201519083015260408082015190830152606090810151910152565b803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a0810135614b8581613d9b565b6001600160a01b031660a0929092019190915250565b6001600160401b03811681146117b9575f80fd5b8035614bba81613d9b565b6001600160a01b031682526020810135614bd381614b9b565b6001600160401b0381166020840152505050565b8035614bf281613d9b565b6001600160a01b039081168352602082013590614c0e82613d9b565b9081166020840152604082013590614c2582613d9b565b9081166040840152606082013590614c3c82613d9b565b9081166060840152608082013590614c5382613d9b565b808216608085015250505050565b8681526001600160a01b03861660208201526102a08101614c856040830187614b4b565b8435610100830152602085013561012083015260408501356101408301526060850135610160830152608085013561018083015260a08501356101a0830152614cd26101c0830185614baf565b614ce0610200830184614be7565b979650505050505050565b8581526102808101614d006020830187614b4b565b843560e0830152602085013561010083015260408501356101208301526060850135610140830152608085013561016083015260a0850135610180830152614d4c6101a0830185614baf565b6147e56101e0830184614be7565b5f60c08284031215614d6a575f80fd5b614d72613e4b565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b5f60408284031215614dc2575f80fd5b604051604081018181106001600160401b0382111715614de457614de4613e0f565b6040528251614df281613d9b565b81526020830151614e0281614b9b565b60208201529392505050565b5f606082019050838252823560208301526020830135614e2d81613d9b565b6001600160a01b03166040929092019190915292915050565b5f60208284031215614e56575f80fd5b81516110b981613e9d565b828152608081016110b960208301848035825260208082013590830152604090810135910152565b83815260a08101614eb160208301858035825260208082013590830152604090810135910152565b826080830152949350505050565b600181815b80851115614ef957815f1904821115614edf57614edf614668565b80851615614eec57918102915b93841c9390800290614ec4565b509250929050565b5f82614f0f57506001610af3565b81614f1b57505f610af3565b8160018114614f315760028114614f3b57614f57565b6001915050610af3565b60ff841115614f4c57614f4c614668565b50506001821b610af3565b5060208310610133831016604e8410600b8410161715614f7a575081810a610af3565b614f848383614ebf565b805f1904821115614f9757614f97614668565b029392505050565b5f6110b98383614f01565b8082028115828204841417610af357610af3614668565b5f60208284031215614fd1575f80fd5b815160ff811681146110b9575f80fd5b5f6110b960ff841683614f01565b60a081525f8451606060a084015261500b6101008401826141aa565b602087810151609f19868403810160c08801528151808552918301945091925f9291908401905b808410156150525785518252948401946001939093019290840190615032565b5060408a01519450818782030160e088015261506e81866141aa565b95505050506150ab8185018780516001600160801b031682526020808201516001600160401b039081169184019190915260409182015116910152565b5050826080830152949350505050565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e198436030181126150e4575f80fd5b8301803591506001600160401b038211156150fd575f80fd5b602001915036819003821315614750575f80fd5b5f8251615122818460208701614130565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220ad14a364d54f06d618898a82c02986732e1a143268ab9be8e9a92c88b372618664736f6c63430008170033",
    "sourceMap": "2900:7592:108:-:0;;;1171:4:59;1128:48;;3682:53:108;;;;;;;;;-1:-1:-1;3706:22:108;:20;:22::i;:::-;2900:7592;;7711:422:58;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:58;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:58;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:58;-1:-1:-1;;;;;8035:33:58;;;;;8087:29;;158:50:174;;;8087:29:58;;146:2:174;131:18;8087:29:58;;;;;;;7981:146;7760:373;7711:422::o;14:200:174:-;2900:7592:108;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/libraries/CapsLibrary.sol": {
        "CapsLibrary": [
          { "start": 3909, "length": 20 },
          { "start": 6197, "length": 20 },
          { "start": 14508, "length": 20 }
        ]
      },
      "src/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 3974, "length": 20 },
          { "start": 6582, "length": 20 },
          { "start": 6743, "length": 20 },
          { "start": 8583, "length": 20 },
          { "start": 10049, "length": 20 }
        ]
      },
      "src/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 3752, "length": 20 },
          { "start": 5938, "length": 20 },
          { "start": 9292, "length": 20 },
          { "start": 9618, "length": 20 },
          { "start": 9759, "length": 20 },
          { "start": 10242, "length": 20 },
          { "start": 10811, "length": 20 },
          { "start": 11217, "length": 20 },
          { "start": 11520, "length": 20 }
        ]
      },
      "src/libraries/YieldCurveLibrary.sol": {
        "YieldCurveLibrary": [{ "start": 12723, "length": 20 }]
      },
      "src/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 5382, "length": 20 },
          { "start": 5481, "length": 20 }
        ]
      },
      "src/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 3528, "length": 20 },
          { "start": 3630, "length": 20 },
          { "start": 5163, "length": 20 }
        ]
      },
      "src/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 11346, "length": 20 },
          { "start": 11445, "length": 20 }
        ]
      },
      "src/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 9402, "length": 20 },
          { "start": 9501, "length": 20 }
        ]
      },
      "src/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 3304, "length": 20 },
          { "start": 3403, "length": 20 }
        ]
      },
      "src/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 8086, "length": 20 },
          { "start": 8219, "length": 20 }
        ]
      },
      "src/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 10869, "length": 20 },
          { "start": 10968, "length": 20 },
          { "start": 11093, "length": 20 }
        ]
      },
      "src/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 5721, "length": 20 },
          { "start": 5823, "length": 20 },
          { "start": 6081, "length": 20 }
        ]
      },
      "src/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 9062, "length": 20 },
          { "start": 9160, "length": 20 }
        ]
      },
      "src/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 11909, "length": 20 },
          { "start": 12008, "length": 20 }
        ]
      },
      "src/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 10368, "length": 20 },
          { "start": 10467, "length": 20 }
        ]
      },
      "src/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5548, "length": 20 },
          { "start": 10562, "length": 20 },
          { "start": 10664, "length": 20 }
        ]
      },
      "src/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 4997, "length": 20 },
          { "start": 5096, "length": 20 }
        ]
      },
      "src/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3090, "length": 20 },
          { "start": 3189, "length": 20 },
          { "start": 4198, "length": 20 },
          { "start": 8817, "length": 20 },
          { "start": 8949, "length": 20 }
        ]
      },
      "src/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 4350, "length": 20 },
          { "start": 4449, "length": 20 }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102f3575f3560e01c80635cbc51eb11610189578063ad3cb1cc116100d8578063d8d933a511610092578063f45bf01c1161006d578063f45bf01c14610a5f578063f731a57a14610a72578063f85c3cd414610a91578063fd17174a14610ab0575f80fd5b8063d8d933a514610a1a578063e05001f514610a2d578063e5af06ce14610a40575f80fd5b8063ad3cb1cc1461094e578063b5ec74871461097e578063ca40742c146109aa578063ccc96815146109c9578063ccd8d4d1146109e8578063d547741f146109fb575f80fd5b80637dc0d1d0116101435780638e5727761161011e5780638e572776146108e957806391d14854146108fc578063a217fddf1461091b578063ac9650d81461092e575f80fd5b80637dc0d1d0146108815780637f417c06146108c25780638456cb59146108d5575f80fd5b80635cbc51eb1461066857806361a10df21461069457806364eb0a71146106b357806373d4a13a146106d257806376c1b82f146107f65780637c90a6ca14610822575f80fd5b80632ed28ba2116102455780633f4ba83a116101ff57806352d1902d116101da57806352d1902d146105dd57806354137c7e146105f157806354fd4d50146106105780635c975abb14610645575f80fd5b80633f4ba83a146105975780634cbd882c146105ab5780634f1ef286146105ca575f80fd5b80632ed28ba2146104db5780632f2ff15d1461050757806336568abe146105265780633746f8581461054557806337501921146105585780633e3c119b14610584575f80fd5b80631ca3b0cb116102b05780632b4c9a201161028b5780632b4c9a20146104775780632c60185c1461048a5780632cc884c5146104a95780632e106f21146104c8575f80fd5b80631ca3b0cb146103cb5780631e5eb1d0146103f4578063248a9ca314610458575f80fd5b806301ffc9a7146102f75780630317b9df1461032b5780630cf8542f1461034c5780631970e5ea1461035f57806319a7359b1461038c5780631c4fd41c1461039f575b5f80fd5b348015610302575f80fd5b50610316610311366004613c96565b610ac3565b60405190151581526020015b60405180910390f35b348015610336575f80fd5b5061034a610345366004613cd3565b610af9565b005b61034a61035a366004613d14565b610bd1565b34801561036a575f80fd5b5061037e610379366004613d2e565b610ca6565b604051908152602001610322565b61034a61039a366004613d45565b610cb1565b3480156103aa575f80fd5b506103be6103b9366004613d2e565b610e67565b6040516103229190613d55565b3480156103d6575f80fd5b506103df610ee2565b60408051928352602083019190915201610322565b3480156103ff575f80fd5b50610408610f15565b6040516103229190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b348015610463575f80fd5b5061037e610472366004613d2e565b610fc7565b61034a610485366004613d14565b610fe7565b348015610495575f80fd5b5061037e6104a4366004613d7b565b61108d565b3480156104b4575f80fd5b5061037e6104c3366004613daf565b6110c0565b61034a6104d6366004613dd9565b61126e565b3480156104e6575f80fd5b506104fa6104f5366004613f1e565b611314565b6040516103229190613f66565b348015610512575f80fd5b5061034a610521366004613fc5565b611395565b348015610531575f80fd5b5061034a610540366004613fc5565b6113b7565b61034a610553366004613cd3565b6113ef565b348015610563575f80fd5b50610577610572366004613f1e565b611495565b6040516103229190613ff3565b6103df61059236600461404f565b611516565b3480156105a2575f80fd5b5061034a611787565b3480156105b6575f80fd5b5061034a6105c5366004614069565b6117bc565b61034a6105d836600461408f565b61185b565b3480156105e8575f80fd5b5061037e61187a565b3480156105fc575f80fd5b5061037e61060b366004613d2e565b611895565b34801561061b575f80fd5b506040805180820190915260048152633b18971b60e11b60208201525b604051610322919061417d565b348015610650575f80fd5b505f8051602061516d8339815191525460ff16610316565b348015610673575f80fd5b5061068761068236600461418f565b6119c0565b6040516103229190614278565b34801561069f575f80fd5b5061034a6106ae36600461432a565b611dd2565b3480156106be575f80fd5b506103166106cd366004613d2e565b612057565b3480156106dd575f80fd5b5061078560408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e0928301519091169181019190915261010001610322565b348015610801575f80fd5b50610815610810366004613d2e565b612063565b6040516103229190614394565b34801561082d575f80fd5b50610836612129565b60405161032291905f60c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b34801561088c575f80fd5b506108956121cd565b6040805182516001600160a01b031681526020928301516001600160401b03169281019290925201610322565b61034a6108d03660046143a2565b612250565b3480156108e0575f80fd5b5061034a6122f4565b61034a6108f7366004613d14565b612326565b348015610907575f80fd5b50610316610916366004613fc5565b6125aa565b348015610926575f80fd5b5061037e5f81565b61094161093c3660046143bc565b6125e0565b604051610322919061442a565b348015610959575f80fd5b50610638604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610989575f80fd5b5061099d610998366004613d2e565b6125f5565b604051610322919061448c565b3480156109b5575f80fd5b5061037e6109c436600461418f565b6126db565b3480156109d4575f80fd5b506103166109e3366004613d2e565b61275e565b61034a6109f6366004613cd3565b612769565b348015610a06575f80fd5b5061034a610a15366004613fc5565b61280f565b61034a610a28366004613f1e565b61282b565b61037e610a3b366004613d14565b61295d565b348015610a4b575f80fd5b50610316610a5a366004613d2e565b612ab2565b61034a610a6d3660046144d0565b612b2e565b348015610a7d575f80fd5b50610316610a8c36600461418f565b612bd9565b348015610a9c575f80fd5b5061037e610aab366004613daf565b612c22565b61034a610abe3660046144d0565b612d61565b5f6001600160e01b03198216637965db0b60e01b1480610af357506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f610b0381612e0c565b60405163e57980dd60e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063e57980dd90610b3c905f9086906004016144ea565b5f6040518083038186803b158015610b52575f80fd5b505af4158015610b64573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9250634752b3b39150610ba1905f9086906004016144ea565b5f6040518083038186803b158015610bb7575f80fd5b505af4158015610bc9573d5f803e3d5ffd5b505050505050565b610bd9612e16565b604051638046123560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__90638046123590610c12905f9085906004016145ad565b5f6040518083038186803b158015610c28575f80fd5b505af4158015610c3a573d5f803e3d5ffd5b50506040516387e2411560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__92506387e241159150610c77905f9085906004016145ad565b5f6040518083038186803b158015610c8d575f80fd5b505af4158015610c9f573d5f803e3d5ffd5b5050505050565b5f610af38183612e48565b610cb9612e16565b604051631621030760e01b815273__$40338b66eef5a4814456f5e5d0057a85cb$__90631621030790610cf2905f9085906004016145c1565b5f6040518083038186803b158015610d08575f80fd5b505af4158015610d1a573d5f803e3d5ffd5b505060405163b71df57f60e01b81525f925073__$40338b66eef5a4814456f5e5d0057a85cb$__915063b71df57f90610d5990849086906004016145c1565b602060405180830381865af4158015610d74573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d989190614633565b90505f19826020013503610e295773__$54339234670bed530be64a2569bfcff861$__632d77afb65f610dce602086018661418f565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015b5f6040518083038186803b158015610e12575f80fd5b505af4158015610e24573d5f803e3d5ffd5b505050505b60405163bfbfe8ab60e01b81525f60048201526024810182905273__$5e1dc6026664d540c986e6d76069f97e44$__9063bfbfe8ab90604401610ba1565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$137de846162d19becd7adae071bc6b8643$__90637d62a7e090604401602060405180830381865af4158015610ebe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af3919061464a565b6011545f908190610ef490829061467c565b610f0060025f1961468f565b601254610f0d919061467c565b915091509091565b610f516040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__906386617e779060240160c060405180830381865af4158015610f9e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc291906146ae565b905090565b5f9081525f8051602061514d833981519152602052604090206001015490565b610fef612e16565b60405163010cc09b60e21b815273__$d7ed34c1233366b4d2093a06a83503a127$__90630433026c90611028905f9085906004016145ad565b5f6040518083038186803b15801561103e575f80fd5b505af4158015611050573d5f803e3d5ffd5b505060405163b8359e9760e01b815273__$d7ed34c1233366b4d2093a06a83503a127$__925063b8359e979150610c77905f9085906004016145ad565b5f815f036110ae576040516301c85f6760e71b815260040160405180910390fd5b6110b95f8484613048565b9392505050565b6001600160a01b0382165f908152600e60209081526040808320815180830183528154815282516001830180546080818802840181019096526060830181815288979496948701948492849184018282801561113957602002820191905f5260205f20905b815481526020019060010190808311611125575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561118f57602002820191905f5260205f20905b81548152602001906001019080831161117b575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156111e557602002820191905f5260205f20905b8154815260200190600101908083116111d1575b5050505050815250508152505090506111fd81613065565b1561121b5760405163309f293760e21b815260040160405180910390fd5b60408051606081018252600d546001600160801b03811682526001600160401b03600160801b820481166020840152600160c01b90910416918101919091526112669082908561307e565b949350505050565b611276612e16565b60405163603ed05b60e01b815273__$522109956a60eeb242799fac64155e2c7d$__9063603ed05b906112af905f908590600401614787565b5f6040518083038186803b1580156112c5575f80fd5b505af41580156112d7573d5f803e3d5ffd5b505060405163153f43e560e31b815273__$522109956a60eeb242799fac64155e2c7d$__925063a9fa1f289150610c77905f908590600401614787565b61131c613b43565b604051631c81982560e11b815273__$40338b66eef5a4814456f5e5d0057a85cb$__90633903304a90611355905f9086906004016147ef565b61014060405180830381865af4158015611371573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af391906148c2565b61139e82610fc7565b6113a781612e0c565b6113b1838361311d565b50505050565b6001600160a01b03811633146113e05760405163334bd91960e11b815260040160405180910390fd5b6113ea82826131be565b505050565b6113f7612e16565b604051634cf319b960e11b815273__$bb87e4d06c905b2a40fd4eb630d02af12b$__906399e6337290611430905f9085906004016149f6565b5f6040518083038186803b158015611446575f80fd5b505af4158015611458573d5f803e3d5ffd5b505060405163339bb63160e01b815273__$bb87e4d06c905b2a40fd4eb630d02af12b$__925063339bb6319150610c77905f9085906004016149f6565b61149d613b89565b60405163301d1d1560e21b815273__$6a70d15ccab52e60961e0e6eac4956e318$__9063c0747454906114d6905f9086906004016147ef565b61012060405180830381865af41580156114f2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af39190614a0e565b5f80611520612e16565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab61154a81612e0c565b604051639f53ee0f60e01b815273__$083884a3186f9b2b23885dfeba78ff7244$__90639f53ee0f90611583905f908890600401614aaf565b5f6040518083038186803b158015611599575f80fd5b505af41580156115ab573d5f803e3d5ffd5b505060405163647a4b7560e11b81525f925073__$083884a3186f9b2b23885dfeba78ff7244$__915063c8f496ea906115ea9084908990600401614aaf565b606060405180830381865af4158015611605573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116299190614ac3565b9095509350905073__$54339234670bed530be64a2569bfcff861$__632d77afb65f61165b6040890160208a0161418f565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b15801561169e575f80fd5b505af41580156116b0573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$083884a3186f9b2b23885dfeba78ff7244$__9250636e6595c191506116ef905f9089908990600401614aee565b5f6040518083038186803b158015611705575f80fd5b505af4158015611717573d5f803e3d5ffd5b505060405163bfbfe8ab60e01b81525f60048201526024810184905273__$5e1dc6026664d540c986e6d76069f97e44$__925063bfbfe8ab91506044015f6040518083038186803b15801561176a575f80fd5b505af415801561177c573d5f803e3d5ffd5b505050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6117b181612e0c565b6117b9613237565b50565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240386117e681612e0c565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611863613296565b61186c8261333a565b6118768282613344565b5050565b5f611883613400565b505f8051602061512d83398151915290565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$137de846162d19becd7adae071bc6b8643$__90639930537e90604401602060405180830381865af41580156118ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119129190614633565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$137de846162d19becd7adae071bc6b8643$__906345ffd36d90611981905f908590600401614b10565b602060405180830381865af415801561199c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110b99190614633565b6119c8613bc0565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611a5a57602002820191905f5260205f20905b815481526020019060010190808311611a46575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611ab057602002820191905f5260205f20905b815481526020019060010190808311611a9c575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611b0657602002820191905f5260205f20905b815481526020019060010190808311611af2575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015611b8c57602002820191905f5260205f20905b815481526020019060010190808311611b78575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611be257602002820191905f5260205f20905b815481526020019060010190808311611bce575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611c3857602002820191905f5260205f20905b815481526020019060010190808311611c24575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa158015611cbe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ce29190614633565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611d32573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d569190614633565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611da6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dca9190614633565b905292915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f81158015611e165750825b90505f826001600160401b03166001148015611e315750303b155b905081158015611e3f575080155b15611e5d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611e8757845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__906369777eb990611ec8905f908e908e908e908e908e90600401614c61565b5f6040518083038186803b158015611ede575f80fd5b505af4158015611ef0573d5f803e3d5ffd5b50505050611efc613449565b611f04613451565b611f0c613449565b604051632ffdac7160e21b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063bff6b1c490611f4b905f908d908d908d908d90600401614ceb565b5f6040518083038186803b158015611f61575f80fd5b505af4158015611f73573d5f803e3d5ffd5b50505050611f835f801b8b61311d565b50611fae7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b61311d565b50611fd97ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b61311d565b506120047f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b61311d565b50831561204b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6011545f908210610af3565b61206b613bfa565b604051633978289f60e01b81525f60048201526024810183905273__$137de846162d19becd7adae071bc6b8643$__90633978289f90604401602060405180830381865af41580156120bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120e39190614633565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b61215c6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063dd378fd69060240160c060405180830381865af41580156121a9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc29190614d5a565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063d72f4008906024016040805180830381865af415801561222c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc29190614db2565b612258612e16565b6040516210aa0b60e31b815273__$7dc37f9f4797eb854780a74171eb2f4993$__90628550589061228f905f908590600401614e0e565b5f6040518083038186803b1580156122a5575f80fd5b505af41580156122b7573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$7dc37f9f4797eb854780a74171eb2f4993$__92506364140a839150610c77905f908590600401614e0e565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61231e81612e0c565b6117b9613461565b61232e612e16565b604051634ec6ce5b60e11b81525f600482018190523360248301529073__$54339234670bed530be64a2569bfcff861$__90639d8d9cb690604401602060405180830381865af4158015612384573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123a89190614e46565b604051634bc1120160e01b815290915073__$ef4190de80c3c7f10088bb7cf8a0baddca$__90634bc11201906123e4905f908690600401614e61565b5f6040518083038186803b1580156123fa575f80fd5b505af415801561240c573d5f803e3d5ffd5b50506040516332f4053b60e01b815273__$ef4190de80c3c7f10088bb7cf8a0baddca$__92506332f4053b9150612449905f908690600401614e61565b5f6040518083038186803b15801561245f575f80fd5b505af4158015612471573d5f803e3d5ffd5b5050604051634ec6ce5b60e11b81525f60048201819052336024830152925073__$54339234670bed530be64a2569bfcff861$__9150639d8d9cb690604401602060405180830381865af41580156124cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906124ef9190614e46565b9050811580156124fc5750805b156113ea5760405163046dbd1360e11b81525f600482015233602482018190529073__$54339234670bed530be64a2569bfcff861$__906308db7a2690604401602060405180830381865af4158015612557573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061257b9190614633565b60405163092ceea960e31b81526001600160a01b03909216600483015260248201526044015b60405180910390fd5b5f9182525f8051602061514d833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606125ea612e16565b6110b95f84846134a9565b61262560405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$137de846162d19becd7adae071bc6b8643$__90639930537e90604401602060405180830381865af4158015612679573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061269d9190614633565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$54339234670bed530be64a2569bfcff861$__906308db7a2690604401602060405180830381865af415801561273a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af39190614633565b5f610af38183613810565b612771612e16565b6040516329de607960e01b815273__$872edea7acf8ea04327f178ae369cb7d23$__906329de6079906127aa905f9085906004016149f6565b5f6040518083038186803b1580156127c0575f80fd5b505af41580156127d2573d5f803e3d5ffd5b50506040516309f18b1960e11b815273__$872edea7acf8ea04327f178ae369cb7d23$__92506313e316329150610c77905f9085906004016149f6565b61281882610fc7565b61282181612e0c565b6113b183836131be565b612833612e16565b604051630dd8fb6560e21b815273__$6a70d15ccab52e60961e0e6eac4956e318$__90633763ed949061286c905f9085906004016147ef565b5f6040518083038186803b158015612882575f80fd5b505af4158015612894573d5f803e3d5ffd5b505060405163d73654eb60e01b81525f925073__$6a70d15ccab52e60961e0e6eac4956e318$__915063d73654eb906128d390849086906004016147ef565b602060405180830381865af41580156128ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129129190614633565b90505f19826020015103610e29576040516316bbd7db60e11b81525f600482015233602482015273__$54339234670bed530be64a2569bfcff861$__90632d77afb690604401610dfc565b5f612966612e16565b6040516320b5435f60e11b815273__$bd78b82d3691bf7d290be9fb9bf4abf7be$__9063416a86be9061299f905f908690600401614e61565b5f6040518083038186803b1580156129b5575f80fd5b505af41580156129c7573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$bd78b82d3691bf7d290be9fb9bf4abf7be$__925063341a672c9150612a04905f908690600401614e61565b602060405180830381865af4158015612a1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612a439190614633565b60405163489d188160e01b815290915073__$bd78b82d3691bf7d290be9fb9bf4abf7be$__9063489d188190612a81905f9086908690600401614e89565b5f6040518083038186803b158015612a97575f80fd5b505af4158015612aa9573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$54339234670bed530be64a2569bfcff861$__9063325191d2906044015b602060405180830381865af4158015612b0a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af39190614e46565b612b36612e16565b604051635792057f60e11b81525f60048201528135602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__9063af240afe906044015f6040518083038186803b158015612b85575f80fd5b505af4158015612b97573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__92506341d373f29150604401610c77565b604051634ec6ce5b60e11b81525f600482018190526001600160a01b03831660248301529073__$54339234670bed530be64a2569bfcff861$__90639d8d9cb690604401612aef565b6001600160a01b0382165f908152600e602090815260408083208151808301835260048201805482528351600590930180546080818802860181019096526060850181815288979496939594870194938492849184018282801561113957602002820191905f5260205f209081548152602001906001019080831161112557505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561118f57602002820191905f5260205f209081548152602001906001019080831161117b5750505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156111e557602002820191905f5260205f20908154815260200190600101908083116111d1575050505050815250508152505090506111fd81613065565b612d69612e16565b6040516306241a0160e51b81525f60048201528135602482015273__$20b01ba837bb61c0f81e8afe21d5ca6650$__9063c4834020906044015f6040518083038186803b158015612db8575f80fd5b505af4158015612dca573d5f803e3d5ffd5b5050604051632981ae3960e21b81525f60048201528335602482015273__$20b01ba837bb61c0f81e8afe21d5ca6650$__925063a606b8e49150604401610c77565b6117b98133613833565b5f8051602061516d8339815191525460ff1615612e465760405163d93c066560e01b815260040160405180910390fd5b565b5f6110b983600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ea0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ec49190614633565b612ecf90600a614f9f565b612ed99084614faa565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015612f23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f479190614fc1565b612f5290600a614fe1565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015612f9c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612fc09190614fc1565b612fcb90600a614fe1565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa158015613015573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130399190614633565b6130439190614faa565b61386c565b5f611266836130578685613878565b670de0b6b3a764000061386c565b80515f90158015610af35750610af3826020015161388b565b5f815f0361309f576040516301c85f6760e71b815260040160405180910390fd5b60208401516040516315c6891560e11b815273__$30cdd3af314c0847e81c95388f79c2a65a$__91632b8d122a916130de919087908790600401614fef565b602060405180830381865af41580156130f9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112669190614633565b5f5f8051602061514d83398151915261313684846125aa565b6131b5575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561316b3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610af3565b5f915050610af3565b5f5f8051602061514d8339815191526131d784846125aa565b156131b5575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610af3565b61323f6138b1565b5f8051602061516d833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061331c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166133105f8051602061512d833981519152546001600160a01b031690565b6001600160a01b031614155b15612e465760405163703e46dd60e11b815260040160405180910390fd5b5f61187681612e0c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561339e575060408051601f3d908101601f1916820190925261339b91810190614633565b60015b6133c657604051634c9c8ce360e01b81526001600160a01b03831660048201526024016125a1565b5f8051602061512d83398151915281146133f657604051632a87526960e21b8152600481018290526024016125a1565b6113ea83836138e0565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612e465760405163703e46dd60e11b815260040160405180910390fd5b612e46613935565b613459613935565b612e4661397e565b613469612e16565b5f8051602061516d833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833613278565b60198301805460ff60a01b1916600160a01b179055601a830154604080516318160ddd60e01b815290516060925f926001600160a01b03909116916318160ddd916004808201926020929091908290030181865afa15801561350d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135319190614633565b90505f85600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613589573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135ad9190614633565b9050836001600160401b038111156135c7576135c7613e0f565b6040519080825280602002602001820160405280156135fa57816020015b60608152602001906001900390816135e55790505b5092505f5b8481101561368d576136683087878481811061361d5761361d6150bb565b905060200281019061362f91906150cf565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061399e92505050565b84828151811061367a5761367a6150bb565b60209081029190910101526001016135ff565b50601a860154604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156136d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136fb9190614633565b90505f87600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613753573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906137779190614633565b60405163111a6a5d60e31b8152600481018a90526024810186905260448101859052606481018490526084810182905290915073__$5e1dc6026664d540c986e6d76069f97e44$__906388d352e89060a4015f6040518083038186803b1580156137df575f80fd5b505af41580156137f1573d5f803e3d5ffd5b5050506019909801805460ff60a01b1916905550929695505050505050565b5f61381d60025f1961468f565b82101580156110b9575050601291909101541190565b61383d82826125aa565b6118765760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016125a1565b5f611266848484613a10565b81545f906110b990836301e1338061386c565b8051515f901580156138a05750602082015151155b8015610af357505060400151511590565b5f8051602061516d8339815191525460ff16612e4657604051638dfc202b60e01b815260040160405180910390fd5b6138e982613a3c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561392d576113ea828261399e565b611876613a9f565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16612e4657604051631afcd79f60e31b815260040160405180910390fd5b613986613935565b5f8051602061516d833981519152805460ff19169055565b60605f80846001600160a01b0316846040516139ba9190615111565b5f60405180830381855af49150503d805f81146139f2576040519150601f19603f3d011682016040523d82523d5f602084013e6139f7565b606091505b5091509150613a07858383613abe565b95945050505050565b5f825f190484118302158202613a2d5763ad251c275f526004601cfd5b50910281810615159190040190565b806001600160a01b03163b5f03613a7157604051634c9c8ce360e01b81526001600160a01b03821660048201526024016125a1565b5f8051602061512d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b3415612e465760405163b398979f60e01b815260040160405180910390fd5b606082613ad357613ace82613b1a565b6110b9565b8151158015613aea57506001600160a01b0384163b155b15613b1357604051639996b31560e01b81526001600160a01b03851660048201526024016125a1565b50806110b9565b805115613b2a5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060e00160405280613b56613bfa565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060c00160405280613b9c613bfa565b81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060a00160405280613bd3613c29565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81525090565b60405180608001604052805f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b6040518060800160405280613c3c613c5c565b8152602001613c49613c5c565b81525f6020820181905260409091015290565b60405180604001604052805f8152602001613c9160405180606001604052806060815260200160608152602001606081525090565b905290565b5f60208284031215613ca6575f80fd5b81356001600160e01b0319811681146110b9575f80fd5b5f60408284031215613ccd575f80fd5b50919050565b5f60208284031215613ce3575f80fd5b81356001600160401b03811115613cf8575f80fd5b61126684828501613cbd565b5f60608284031215613ccd575f80fd5b5f60608284031215613d24575f80fd5b6110b98383613d04565b5f60208284031215613d3e575f80fd5b5035919050565b5f60e08284031215613ccd575f80fd5b6020810160038310613d7557634e487b7160e01b5f52602160045260245ffd5b91905290565b5f8060408385031215613d8c575f80fd5b50508035926020909101359150565b6001600160a01b03811681146117b9575f80fd5b5f8060408385031215613dc0575f80fd5b8235613dcb81613d9b565b946020939093013593505050565b5f60208284031215613de9575f80fd5b81356001600160401b03811115613dfe575f80fd5b8201608081850312156110b9575f80fd5b634e487b7160e01b5f52604160045260245ffd5b60405160e081016001600160401b0381118282101715613e4557613e45613e0f565b60405290565b60405160c081016001600160401b0381118282101715613e4557613e45613e0f565b604051601f8201601f191681016001600160401b0381118282101715613e9557613e95613e0f565b604052919050565b80151581146117b9575f80fd5b5f60e08284031215613eba575f80fd5b613ec2613e23565b90508135613ecf81613d9b565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c0820135613f1381613e9d565b60c082015292915050565b5f60e08284031215613f2e575f80fd5b6110b98383613eaa565b80516001600160a01b0316825260208082015115159083015260408082015190830152606090810151910152565b5f61014082019050613f79828451613f38565b60018060a01b036020840151166080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015260c083015161012083015292915050565b5f8060408385031215613fd6575f80fd5b823591506020830135613fe881613d9b565b809150509250929050565b5f61012082019050614006828451613f38565b60208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015292915050565b5f60a08284031215613ccd575f80fd5b5f60a0828403121561405f575f80fd5b6110b9838361403f565b5f60208284031215614079575f80fd5b81356001600160801b03811681146110b9575f80fd5b5f80604083850312156140a0575f80fd5b82356140ab81613d9b565b91506020838101356001600160401b03808211156140c7575f80fd5b818601915086601f8301126140da575f80fd5b8135818111156140ec576140ec613e0f565b6140fe601f8201601f19168501613e6d565b91508082528784828501011115614113575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f5b8381101561414a578181015183820152602001614132565b50505f910152565b5f8151808452614169816020860160208601614130565b601f01601f19169290920160200192915050565b602081525f6110b96020830184614152565b5f6020828403121561419f575f80fd5b81356110b981613d9b565b5f815180845260208085019450602084015f5b838110156141d9578151875295820195908201906001016141bd565b509495945050505050565b805182525f60208083015160408286015280516060604087015261420b60a08701826141aa565b83830151603f19888303810160608a0152815180845291860193505f929091908601905b8084101561424f578451825293860193600193909301929086019061422f565b5060408501519550818982030160808a015261426b81876141aa565b9998505050505050505050565b602081525f825160a060208401528051608060c085015261429d6101408501826141e4565b9050602082015160bf198583030160e08601526142ba82826141e4565b915050604082015161010085015260608201511515610120850152602085015191506142f160408501836001600160a01b03169052565b6040850151606085015260608501516080850152608085015160a0850152809250505092915050565b5f60c08284031215613ccd575f80fd5b5f805f805f610280868803121561433f575f80fd5b853561434a81613d9b565b9450614359876020880161431a565b93506143688760e0880161431a565b9250614378876101a08801613cbd565b9150614388876101e0880161403f565b90509295509295909350565b60808101610af38284613f38565b5f604082840312156143b2575f80fd5b6110b98383613cbd565b5f80602083850312156143cd575f80fd5b82356001600160401b03808211156143e3575f80fd5b818501915085601f8301126143f6575f80fd5b813581811115614404575f80fd5b8660208260051b8501011115614418575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561447f57603f1988860301845261446d858351614152565b94509285019290850190600101614451565b5092979650505050505050565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015260808101610af3565b5f60208284031215613ccd575f80fd5b5f602082840312156144e0575f80fd5b6110b983836144c0565b828152604060208201525f8235601e19843603018112614508575f80fd5b83016020810190356001600160401b03811115614523575f80fd5b803603821315614531575f80fd5b604080850152806080850152808260a08601375f60a082860101526020850135606085015260a0601f19601f830116850101925050509392505050565b803561457981613d9b565b6001600160a01b0390811683526020828101359084015260408201359061459f82613d9b565b808216604085015250505050565b828152608081016110b9602083018461456e565b828152610100810182356145d481613d9b565b60018060a01b038116602084015250602083013560408301526040830135606083015260608301356080830152608083013560a083015260a083013560c083015260c083013561462381613e9d565b80151560e0840152509392505050565b5f60208284031215614643575f80fd5b5051919050565b5f6020828403121561465a575f80fd5b8151600381106110b9575f80fd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610af357610af3614668565b5f826146a957634e487b7160e01b5f52601260045260245ffd5b500490565b5f60c082840312156146be575f80fd5b6146c6613e4b565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015161470081613d9b565b60a08201529392505050565b5f808335601e19843603018112614721575f80fd5b83016020810192503590506001600160401b0381111561473f575f80fd5b8060051b3603821315614750575f80fd5b9250929050565b8183525f6001600160fb1b0383111561476e575f80fd5b8260051b80836020870137939093016020019392505050565b82815260406020820152813560408201525f60208301356147a781613e9d565b1515606083015260408301356147bc81613e9d565b151560808301526147d0606084018461470c565b608060a08501526147e560c085018284614757565b9695505050505050565b82815261010081016110b9602083018480516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a0818101519083015260c0908101511515910152565b5f6080828403121561485b575f80fd5b604051608081018181106001600160401b038211171561487d5761487d613e0f565b8060405250809150825161489081613d9b565b815260208301516148a081613e9d565b8060208301525060408301516040820152606083015160608201525092915050565b5f61014082840312156148d3575f80fd5b6148db613e23565b6148e5848461484b565b815260808301516148f581613d9b565b8060208301525060a0830151604082015260c0830151606082015260e0830151608082015261010083015160a082015261012083015160c08201528091505092915050565b803582525f602080830135605e19843603018112614956575f80fd5b6040858301528301614968818061470c565b6060604088015261497d60a088018284614757565b91505061498c8383018361470c565b603f19888403810160608a015281845291925f929086015b828410156149c25784358152938601936001939093019286016149a4565b6149cf604087018761470c565b97509550818a82030160808b01526149e8818888614757565b9a9950505050505050505050565b828152604060208201525f611266604083018461493a565b5f6101208284031215614a1f575f80fd5b614a27613e4b565b614a31848461484b565b81526080830151602082015260a0830151604082015260c0830151606082015260e0830151608082015261010083015160a08201528091505092915050565b803582526020810135614a8281613d9b565b6001600160a01b031660208301526040818101359083015260608082013590830152608090810135910152565b82815260c081016110b96020830184614a70565b5f805f60608486031215614ad5575f80fd5b8351925060208401519150604084015190509250925092565b83815260e08101614b026020830185614a70565b8260c0830152949350505050565b82815260a081016110b9602083018480516001600160a01b031682526020808201519083015260408082015190830152606090810151910152565b803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a0810135614b8581613d9b565b6001600160a01b031660a0929092019190915250565b6001600160401b03811681146117b9575f80fd5b8035614bba81613d9b565b6001600160a01b031682526020810135614bd381614b9b565b6001600160401b0381166020840152505050565b8035614bf281613d9b565b6001600160a01b039081168352602082013590614c0e82613d9b565b9081166020840152604082013590614c2582613d9b565b9081166040840152606082013590614c3c82613d9b565b9081166060840152608082013590614c5382613d9b565b808216608085015250505050565b8681526001600160a01b03861660208201526102a08101614c856040830187614b4b565b8435610100830152602085013561012083015260408501356101408301526060850135610160830152608085013561018083015260a08501356101a0830152614cd26101c0830185614baf565b614ce0610200830184614be7565b979650505050505050565b8581526102808101614d006020830187614b4b565b843560e0830152602085013561010083015260408501356101208301526060850135610140830152608085013561016083015260a0850135610180830152614d4c6101a0830185614baf565b6147e56101e0830184614be7565b5f60c08284031215614d6a575f80fd5b614d72613e4b565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b5f60408284031215614dc2575f80fd5b604051604081018181106001600160401b0382111715614de457614de4613e0f565b6040528251614df281613d9b565b81526020830151614e0281614b9b565b60208201529392505050565b5f606082019050838252823560208301526020830135614e2d81613d9b565b6001600160a01b03166040929092019190915292915050565b5f60208284031215614e56575f80fd5b81516110b981613e9d565b828152608081016110b960208301848035825260208082013590830152604090810135910152565b83815260a08101614eb160208301858035825260208082013590830152604090810135910152565b826080830152949350505050565b600181815b80851115614ef957815f1904821115614edf57614edf614668565b80851615614eec57918102915b93841c9390800290614ec4565b509250929050565b5f82614f0f57506001610af3565b81614f1b57505f610af3565b8160018114614f315760028114614f3b57614f57565b6001915050610af3565b60ff841115614f4c57614f4c614668565b50506001821b610af3565b5060208310610133831016604e8410600b8410161715614f7a575081810a610af3565b614f848383614ebf565b805f1904821115614f9757614f97614668565b029392505050565b5f6110b98383614f01565b8082028115828204841417610af357610af3614668565b5f60208284031215614fd1575f80fd5b815160ff811681146110b9575f80fd5b5f6110b960ff841683614f01565b60a081525f8451606060a084015261500b6101008401826141aa565b602087810151609f19868403810160c08801528151808552918301945091925f9291908401905b808410156150525785518252948401946001939093019290840190615032565b5060408a01519450818782030160e088015261506e81866141aa565b95505050506150ab8185018780516001600160801b031682526020808201516001600160401b039081169184019190915260409182015116910152565b5050826080830152949350505050565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e198436030181126150e4575f80fd5b8301803591506001600160401b038211156150fd575f80fd5b602001915036819003821315614750575f80fd5b5f8251615122818460208701614130565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220ad14a364d54f06d618898a82c02986732e1a143268ab9be8e9a92c88b372618664736f6c63430008170033",
    "sourceMap": "2900:7592:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:55;;;;;;;;;;-1:-1:-1;3443:202:55;;;;;:::i;:::-;;:::i;:::-;;;470:14:174;;463:22;445:41;;433:2;418:18;3443:202:55;;;;;;;;4970:239:108;;;;;;;;;;-1:-1:-1;4970:239:108;;;;;:::i;:::-;;:::i;:::-;;6248:177;;;;;;:::i;:::-;;:::i;2290:196:110:-;;;;;;;;;;-1:-1:-1;2290:196:110;;;;;:::i;:::-;;:::i;:::-;;;1805:25:174;;;1793:2;1778:18;2290:196:110;1659:177:174;7154:433:108;;;;;;:::i;:::-;;:::i;4816:133:110:-;;;;;;;;;;-1:-1:-1;4816:133:110;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4985:244::-;;;;;;;;;;;;;:::i;:::-;;;;2578:25:174;;;2634:2;2619:18;;2612:34;;;;2551:18;4985:244:110;2404:248:174;2522:125:110;;;;;;;;;;;;;:::i;:::-;;;;;;3019:13:174;;3001:32;;3089:4;3077:17;;;3071:24;3049:20;;;3042:54;3152:4;3140:17;;;3134:24;3112:20;;;3105:54;3215:4;3203:17;;;3197:24;3175:20;;;3168:54;3278:4;3266:17;;;3260:24;3238:20;;;3231:54;3361:3;3333:17;;;3327:24;-1:-1:-1;;;;;3323:50:174;3301:20;;;3294:80;;;;2988:3;2973:19;;2766:614;4759:191:55;;;;;;;;;;-1:-1:-1;4759:191:55;;;;;:::i;:::-;;:::i;6457:183:108:-;;;;;;:::i;:::-;;:::i;6941:208:110:-;;;;;;;;;;-1:-1:-1;6941:208:110;;;;;:::i;:::-;;:::i;5960:651::-;;;;;;;;;;-1:-1:-1;5960:651:110;;;;;:::i;:::-;;:::i;10223:267:108:-;;;;;;:::i;:::-;;:::i;7185:238:110:-;;;;;;;;;;-1:-1:-1;7185:238:110;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5246:136:55:-;;;;;;;;;;-1:-1:-1;5246:136:55;;;;;:::i;:::-;;:::i;6348:245::-;;;;;;;;;;-1:-1:-1;6348:245:55;;;;;:::i;:::-;;:::i;6672:207:108:-;;;;;;:::i;:::-;;:::i;7459:243:110:-;;;;;;;;;;-1:-1:-1;7459:243:110;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9157:742:108:-;;;;;;:::i;:::-;;:::i;5864:96::-;;;;;;;;;;;;;:::i;5246:452::-;;;;;;;;;;-1:-1:-1;5246:452:108;;;;;:::i;:::-;;:::i;4158:214:59:-;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;6647:258:110:-;;;;;;;;;;-1:-1:-1;6647:258:110;;;;;:::i;:::-;;:::i;7738:86::-;;;;;;;;;;-1:-1:-1;7810:7:110;;;;;;;;;;;;-1:-1:-1;;;7810:7:110;;;;7738:86;;;;;;;:::i;2692:145:61:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:61;;;2692:145;;3619:409:110;;;;;;;;;;-1:-1:-1;3619:409:110;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3741:627:108:-;;;;;;;;;;-1:-1:-1;3741:627:108;;;;;:::i;:::-;;:::i;4064:141:110:-;;;;;;;;;;-1:-1:-1;4064:141:110;;;;;:::i;:::-;;:::i;2999:584::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3072:504:110;;;;;;;;3115:29;;3072:504;;3180:31;;3072:504;;;;3252:36;;-1:-1:-1;;;;;3252:36:110;;;3072:504;;;;;;;3325:32;;;;3072:504;;;;3439:26;;;;3072:504;;;;3493:27;;;;3072:504;;;;3545:20;;;;3072:504;;;;3385:23;;;;;3072:504;;;;;2999:584;;;;;16530:13:174;;16512:32;;16600:4;16588:17;;;16582:24;16560:20;;;16553:54;16642:17;;;16636:24;-1:-1:-1;;;;;16736:21:174;;;16714:20;;;16707:51;;;;16818:4;16806:17;;;16800:24;16796:33;;16774:20;;;16767:63;16890:4;16878:17;;;16872:24;16868:33;;16846:20;;;16839:63;16687:3;16950:17;;;16944:24;16940:33;;16918:20;;;16911:63;17034:4;17022:17;;;17016:24;17012:33;;16990:20;;;16983:63;17106:4;17094:17;;;17088:24;17084:33;;;17062:20;;;17055:63;;;;16499:3;16484:19;2999:584:110;16311:813:174;4616:164:110;;;;;;;;;;-1:-1:-1;4616:164:110;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2683:128::-;;;;;;;;;;;;;:::i;:::-;;;;;;17586:4:174;17628:3;17617:9;17613:19;17605:27;;17665:6;17659:13;17648:9;17641:32;17729:4;17721:6;17717:17;17711:24;17704:4;17693:9;17689:20;17682:54;17792:4;17784:6;17780:17;17774:24;17767:4;17756:9;17752:20;17745:54;17855:4;17847:6;17843:17;17837:24;17830:4;17819:9;17815:20;17808:54;17918:4;17910:6;17906:17;17900:24;17893:4;17882:9;17878:20;17871:54;17981:4;17973:6;17969:17;17963:24;17956:4;17945:9;17941:20;17934:54;17404:590;;;;;2847:116:110;;;;;;;;;;;;;:::i;:::-;;;;18249:13:174;;-1:-1:-1;;;;;18245:39:174;18227:58;;18345:4;18333:17;;;18327:24;-1:-1:-1;;;;;18323:49:174;18301:20;;;18294:79;;;;18200:18;2847:116:110;17999:380:174;8081:171:108;;;;;;:::i;:::-;;:::i;5735:92::-;;;;;;;;;;;;;:::i;9931:260::-;;;;;;:::i;:::-;;:::i;3732:207:55:-;;;;;;;;;;-1:-1:-1;3732:207:55;;;;;:::i;:::-;;:::i;2317:49::-;;;;;;;;;;-1:-1:-1;2317:49:55;2362:4;2317:49;;5997:219:108;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1819:58:59:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:59;;;;;4426:154:110;;;;;;;;;;-1:-1:-1;4426:154:110;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1778:122::-;;;;;;;;;;-1:-1:-1;1778:122:110;;;;;:::i;:::-;;:::i;4241:149::-;;;;;;;;;;-1:-1:-1;4241:149:110;;;;;:::i;:::-;;:::i;6911:211:108:-;;;;;;:::i;:::-;;:::i;5662:138:55:-;;;;;;;;;;-1:-1:-1;5662:138:55;;;;;:::i;:::-;;:::i;7619:430:108:-;;;;;;:::i;:::-;;:::i;8487:403::-;;;;;;:::i;:::-;;:::i;2093:161:110:-;;;;;;;;;;-1:-1:-1;2093:161:110;;;;;:::i;:::-;;:::i;8284:171:108:-;;;;;;:::i;:::-;;:::i;1936:121:110:-;;;;;;;;;;-1:-1:-1;1936:121:110;;;;;:::i;:::-;;:::i;5265:659::-;;;;;;;;;;-1:-1:-1;5265:659:110;;;;;:::i;:::-;;:::i;8922:203:108:-;;;;;;:::i;:::-;;:::i;3443:202:55:-;3528:4;-1:-1:-1;;;;;;3551:47:55;;-1:-1:-1;;;3551:47:55;;:87;;-1:-1:-1;;;;;;;;;;1133:40:62;;;3602:36:55;3544:94;3443:202;-1:-1:-1;;3443:202:55:o;4970:239:108:-;2362:4:55;3191:16;2362:4;3191:10;:16::i;:::-;5125:34:108::1;::::0;-1:-1:-1;;;5125:34:108;;:26:::1;::::0;::::1;::::0;:34:::1;::::0;:5:::1;::::0;5152:6;;5125:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5169:33:108::1;::::0;-1:-1:-1;;;5169:33:108;;:25:::1;::::0;-1:-1:-1;5169:25:108::1;::::0;-1:-1:-1;5169:33:108::1;::::0;:5:::1;::::0;5195:6;;5169:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4970:239:::0;;:::o;6248:177::-;2316:19:61;:17;:19::i;:::-;6351:29:108::1;::::0;-1:-1:-1;;;6351:29:108;;:21:::1;::::0;::::1;::::0;:29:::1;::::0;:5:::1;::::0;6373:6;;6351:29:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6390:28:108::1;::::0;-1:-1:-1;;;6390:28:108;;:20:::1;::::0;-1:-1:-1;6390:20:108::1;::::0;-1:-1:-1;6390:28:108::1;::::0;:5:::1;::::0;6411:6;;6390:28:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6248:177:::0;:::o;2290:196:110:-;2389:7;2415:64;2389:7;2460:18;2415:44;:64::i;7154:433:108:-;2316:19:61;:17;:19::i;:::-;7275:37:108::1;::::0;-1:-1:-1;;;7275:37:108;;:29:::1;::::0;::::1;::::0;:37:::1;::::0;:5:::1;::::0;7305:6;;7275:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7339:36:108::1;::::0;-1:-1:-1;;;7339:36:108;;7322:14:::1;::::0;-1:-1:-1;7339:28:108::1;::::0;-1:-1:-1;7339:28:108::1;::::0;:36:::1;::::0;7322:14;;7368:6;;7339:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7322:53;;-1:-1:-1::0;;7389:6:108::1;:23;;;:38:::0;7385:134:::1;;7443:48;;:5;7492:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;7443:65;::::0;-1:-1:-1;;;;;;7443:65:108::1;::::0;;;;;;::::1;::::0;::::1;25495:25:174::0;;;;-1:-1:-1;;;;;25556:32:174;25536:18;;;25529:60;25468:18;;7443:65:108::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7385:134;7528:52;::::0;-1:-1:-1;;;7528:52:108;;:5:::1;:52;::::0;::::1;2578:25:174::0;2619:18;;;2612:34;;;7528:44:108::1;::::0;::::1;::::0;2551:18:174;;7528:52:108::1;2404:248:174::0;4816:133:110;4911:31;;-1:-1:-1;;;4911:31:110;;4882:10;4911:31;;;2578:25:174;;;2619:18;;;2612:34;;;4882:10:110;4911:19;;;;2551:18:174;;4911:31:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4985:244::-;5086:29;;5037:7;;;;5086:54;;5037:7;;5086:54;:::i;:::-;360:21:123;380:1;-1:-1:-1;;360:21:123;:::i;:::-;5154:31:110;;:58;;;;:::i;:::-;5065:157;;;;4985:244;;:::o;2522:125::-;2566:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2566:32:110;2617:23;;-1:-1:-1;;;2617:23:110;;:5;:23;;;1805:25:174;2617:21:110;;;;1778:18:174;;2617:23:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2610:30;;2522:125;:::o;4759:191:55:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:55;;;;;:24;;;;4759:191::o;6457:183:108:-;2316:19:61;:17;:19::i;:::-;6564:30:108::1;::::0;-1:-1:-1;;;6564:30:108;;:22:::1;::::0;::::1;::::0;:30:::1;::::0;:5:::1;::::0;6587:6;;6564:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6604:29:108::1;::::0;-1:-1:-1;;;6604:29:108;;:21:::1;::::0;-1:-1:-1;6604:21:108::1;::::0;-1:-1:-1;6604:29:108::1;::::0;:5:::1;::::0;6626:6;;6604:29:::1;;;:::i;6941:208:110:-:0;7011:7;7034:5;7043:1;7034:10;7030:67;;7067:19;;-1:-1:-1;;;7067:19:110;;;;;;;;;;;7030:67;7113:29;:5;7130:4;7136:5;7113:16;:29::i;:::-;7106:36;6941:208;-1:-1:-1;;;6941:208:110:o;5960:651::-;-1:-1:-1;;;;;6084:24:110;;6039:7;6084:24;;;:10;:24;;;;;;;;6058:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6039:7;;6058:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6132:14;:5;:12;:14::i;:::-;6128:71;;;6169:19;;-1:-1:-1;;;6169:19:110;;;;;;;;;;;6128:71;6248:327;;;;;;;;6319:35;;-1:-1:-1;;;;;6319:35:110;;6248:327;;-1:-1:-1;;;;;;;;6405:44:110;;;;6248:327;;;;-1:-1:-1;;;6508:52:110;;;;6248:327;;;;;;;6215:389;;:5;;6589;6215:19;:389::i;:::-;6208:396;5960:651;-1:-1:-1;;;;5960:651:110:o;10223:267:108:-;2316:19:61;:17;:19::i;:::-;10390:42:108::1;::::0;-1:-1:-1;;;10390:42:108;;:34:::1;::::0;::::1;::::0;:42:::1;::::0;:5:::1;::::0;10425:6;;10390:42:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10442:41:108::1;::::0;-1:-1:-1;;;10442:41:108;;:33:::1;::::0;-1:-1:-1;10442:33:108::1;::::0;-1:-1:-1;10442:41:108::1;::::0;:5:::1;::::0;10476:6;;10442:41:::1;;;:::i;7185:238:110:-:0;7305:46;;:::i;:::-;7374:42;;-1:-1:-1;;;7374:42:110;;:15;;:27;;:42;;7402:5;;7409:6;;7374:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5246:136:55:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:55;;966:10:60;6441:34:55;6437:102;;6498:30;;-1:-1:-1;;;6498:30:55;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;6672:207:108:-;2316:19:61;:17;:19::i;:::-;6791:36:108::1;::::0;-1:-1:-1;;;6791:36:108;;:28:::1;::::0;::::1;::::0;:36:::1;::::0;:5:::1;::::0;6820:6;;6791:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6837:35:108::1;::::0;-1:-1:-1;;;6837:35:108;;:27:::1;::::0;-1:-1:-1;6837:27:108::1;::::0;-1:-1:-1;6837:35:108::1;::::0;:5:::1;::::0;6865:6;;6837:35:::1;;;:::i;7459:243:110:-:0;7581:48;;:::i;:::-;7652:43;;-1:-1:-1;;;7652:43:110;;:16;;:28;;:43;;7681:5;;7688:6;;7652:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9157:742:108:-;9365:39;9406:35;2316:19:61;:17;:19::i;:::-;2581:24:108::1;3191:16:55;3202:4;3191:10;:16::i;:::-;9457:46:108::2;::::0;-1:-1:-1;;;9457:46:108;;:38:::2;::::0;::::2;::::0;:46:::2;::::0;:5:::2;::::0;9496:6;;9457:46:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;9622:45:108::2;::::0;-1:-1:-1;;;9622:45:108;;9513:14:::2;::::0;-1:-1:-1;9622:37:108::2;::::0;-1:-1:-1;9622:37:108::2;::::0;:45:::2;::::0;9513:14;;9660:6;;9622:45:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9537:130:::0;;-1:-1:-1;9537:130:108;-1:-1:-1;9537:130:108;-1:-1:-1;9677:48:108::2;;:5;9726:15;::::0;;;::::2;::::0;::::2;;:::i;:::-;9677:65;::::0;-1:-1:-1;;;;;;9677:65:108::2;::::0;;;;;;::::2;::::0;::::2;25495:25:174::0;;;;-1:-1:-1;;;;;25556:32:174;25536:18;;;25529:60;25468:18;;9677:65:108::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;9752:78:108::2;::::0;-1:-1:-1;;;9752:78:108;;:37:::2;::::0;-1:-1:-1;9752:37:108::2;::::0;-1:-1:-1;9752:78:108::2;::::0;:5:::2;::::0;9790:6;;9798:31;;9752:78:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;9840:52:108::2;::::0;-1:-1:-1;;;9840:52:108;;:5:::2;:52;::::0;::::2;2578:25:174::0;2619:18;;;2612:34;;;9840:44:108::2;::::0;-1:-1:-1;9840:44:108::2;::::0;-1:-1:-1;2551:18:174;;9840:52:108::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;9447:452;2345:1:61::1;9157:742:108::0;;;:::o;5864:96::-;2638:24;3191:16:55;3202:4;3191:10;:16::i;:::-;5943:10:108::1;:8;:10::i;:::-;5864:96:::0;:::o;5246:452::-;2708:37;3191:16:55;3202:4;3191:10;:16::i;:::-;5428:35:108;;;-1:-1:-1;;;;;5473:48:108;;::::1;-1:-1:-1::0;;;;;;5531:70:108;;;;-1:-1:-1;;;5585:15:108::1;-1:-1:-1::0;;;;;5531:70:108::1;;;::::0;;;5616:75:::1;::::0;;5428:35;;;::::1;37051:34:174::0;;;37116:2;37101:18;;37094:43;;;;5653:10:108::1;::::0;5616:75:::1;::::0;36971:18:174;5616:75:108::1;;;;;;;5394:304;5246:452:::0;;:::o;4158:214:59:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:59;:::o;6647:258:110:-;6791:37;;-1:-1:-1;;;6791:37:110;;6737:7;6791:37;;;2578:25:174;;;2619:18;;;2612:34;;;6737:7:110;;;6791:21;;;;2551:18:174;;6791:37:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6756:72;;;;;;;;;;-1:-1:-1;;;;;6756:72:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;6845:53;-1:-1:-1;;;6845:53:110;;6756:72;;-1:-1:-1;6845:39:110;;;;:53;;-1:-1:-1;;6756:72:110;;6845:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3619:409::-;3677:15;;:::i;:::-;3711:310;;;-1:-1:-1;;;;;3740:22:110;;-1:-1:-1;3740:22:110;;;:10;:22;;;;;;;;3711:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3740:22;;3711:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3711:310:110;;;;-1:-1:-1;;;3711:310:110;;-1:-1:-1;3711:310:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3711:310:110;;;;;;;;;3827:26;;:42;;-1:-1:-1;;;3827:42:110;;;;;37888:51:174;;;;3711:310:110;;;;;3827:26;;;;:36;;37861:18:174;;3827:42:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3711:310;;3904:27;;:43;;-1:-1:-1;;;3904:43:110;;-1:-1:-1;;;;;37906:32:174;;;3904:43:110;;;37888:51:174;3711:310:110;;;;;3904:27;;;;:37;;37861:18:174;;3904:43:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3711:310;;3974:20;;:36;;-1:-1:-1;;;3974:36:110;;-1:-1:-1;;;;;37906:32:174;;;3974:36:110;;;37888:51:174;3711:310:110;;;;;3974:20;;;;:30;;37861:18:174;;3974:36:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3711:310;;3704:317;3619:409;-1:-1:-1;;3619:409:110:o;3741:627:108:-;8870:21:58;4302:15;;-1:-1:-1;;;4302:15:58;;;;4301:16;;-1:-1:-1;;;;;4348:14:58;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;-1:-1:-1;;;;;4790:16:58;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:58;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:58;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:58;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:58;-1:-1:-1;;;5013:22:58;;;4979:67;3998:43:108::1;::::0;-1:-1:-1;;;3998:43:108;;:24:::1;::::0;::::1;::::0;:43:::1;::::0;:5:::1;::::0;4023;;4030:1;;4033;;4036;;4039;;3998:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4052:22;:20;:22::i;:::-;4084:17;:15;:17::i;:::-;4111:24;:22;:24::i;:::-;4146:35;::::0;-1:-1:-1;;;4146:35:108;;:23:::1;::::0;::::1;::::0;:35:::1;::::0;:5:::1;::::0;4170:1;;4173;;4176;;4179;;4146:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4191:37;2362:4:55;4202:18:108::0;::::1;4222:5;4191:10;:37::i;:::-;;4238:30;2638:24;4262:5;4238:10;:30::i;:::-;;4278;2581:24;4302:5;4278:10;:30::i;:::-;;4318:43;2708:37;4355:5;4318:10;:43::i;:::-;;5070:14:58::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:58;;;5142:14;;-1:-1:-1;42591:50:174;;5142:14:58;;42579:2:174;42564:18;5142:14:58;;;;;;;5066:101;4092:1081;;;;;3741:627:108;;;;;:::o;4064:141:110:-;2270:29:123;;4137:4:110;;-1:-1:-1;;4160:38:110;2104:202:123;4616:164:110;4692:21;;:::i;:::-;4732:41;;-1:-1:-1;;;4732:41:110;;:5;:41;;;2578:25:174;2619:18;;;2612:34;;;4732:23:110;;;;2551:18:174;;4732:41:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4725:48;;;;;;;;;;-1:-1:-1;;;;;4725:48:110;;;;-1:-1:-1;;;4725:48:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4616:164:110:o;2683:128::-;2728:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2728:33:110;2780:24;;-1:-1:-1;;;2780:24:110;;:5;:24;;;1805:25:174;2780:22:110;;;;1778:18:174;;2780:24:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2847:116::-;-1:-1:-1;;;;;;;;;;;;;;;;;2936:20:110;;-1:-1:-1;;;2936:20:110;;:5;:20;;;1805:25:174;2936:18:110;;;;1778::174;;2936:20:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8081:171:108:-;2316:19:61;:17;:19::i;:::-;8182:27:108::1;::::0;-1:-1:-1;;;8182:27:108;;:19:::1;::::0;::::1;::::0;:27:::1;::::0;:5:::1;::::0;8202:6;;8182:27:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8219:26:108::1;::::0;-1:-1:-1;;;8219:26:108;;:18:::1;::::0;-1:-1:-1;8219:18:108::1;::::0;-1:-1:-1;8219:26:108::1;::::0;:5:::1;::::0;8238:6;;8219:26:::1;;;:::i;5735:92::-:0;2638:24;3191:16:55;3202:4;3191:10;:16::i;:::-;5812:8:108::1;:6;:8::i;9931:260::-:0;2316:19:61;:17;:19::i;:::-;4641:34:108::1;::::0;-1:-1:-1;;;4641:34:108;;4611:27:::1;4641:34;::::0;::::1;25495:25:174::0;;;4664:10:108::1;25536:18:174::0;;;25529:60;4611:27:108;4641:22:::1;::::0;::::1;::::0;25468:18:174;;4641:34:108::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10111:32:::2;::::0;-1:-1:-1;;;10111:32:108;;4611:64;;-1:-1:-1;10111:24:108::2;::::0;::::2;::::0;:32:::2;::::0;:5:::2;::::0;10136:6;;10111:32:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;10153:31:108::2;::::0;-1:-1:-1;;;10153:31:108;;:23:::2;::::0;-1:-1:-1;10153:23:108::2;::::0;-1:-1:-1;10153:31:108::2;::::0;:5:::2;::::0;10177:6;;10153:31:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;4725:34:108::1;::::0;-1:-1:-1;;;4725:34:108;;4696:26:::1;4725:34;::::0;::::1;25495:25:174::0;;;4748:10:108::1;25536:18:174::0;;;25529:60;4696:26:108;-1:-1:-1;4725:22:108::1;::::0;-1:-1:-1;4725:22:108::1;::::0;25468:18:174;;4725:34:108::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4696:63;;4774:22;4773:23;:48;;;;;4800:21;4773:48;4769:158;;;4882:33;::::0;-1:-1:-1;;;4882:33:108;;:5:::1;:33;::::0;::::1;25495:25:174::0;4870:10:108::1;25536:18:174::0;;;25529:60;;;4870:10:108;4882:21:::1;::::0;::::1;::::0;25468:18:174;;4882:33:108::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4844:72;::::0;-1:-1:-1;;;4844:72:108;;-1:-1:-1;;;;;45745:32:174;;;4844:72:108::1;::::0;::::1;45727:51:174::0;45794:18;;;45787:34;45700:18;;4844:72:108::1;;;;;;;;3732:207:55::0;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:55;;;;;;;;-1:-1:-1;;;;;3901:31:55;;;;;;;;;;;;;;;3732:207::o;5997:219:108:-;6139:22;2316:19:61;:17;:19::i;:::-;6187:22:108::1;:5;6203::::0;;6187:15:::1;:22::i;4426:154:110:-:0;4498:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4498:19:110;4536:37;;-1:-1:-1;;;4536:37:110;;:5;:37;;;2578:25:174;2619:18;;;2612:34;;;4536:21:110;;;;2551:18:174;;4536:37:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4529:44;;;;;;;;;;-1:-1:-1;;;;;4529:44:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4426:154;-1:-1:-1;;4426:154:110:o;1778:122::-;1866:27;;-1:-1:-1;;;1866:27:110;;1840:7;1866:27;;;25495:25:174;;;-1:-1:-1;;;;;25556:32:174;;25536:18;;;25529:60;1840:7:110;1866:21;;;;25468:18:174;;1866:27:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4241:149::-;4318:4;4341:42;4318:4;4366:16;4341:24;:42::i;6911:211:108:-;2316:19:61;:17;:19::i;:::-;7032:37:108::1;::::0;-1:-1:-1;;;7032:37:108;;:29:::1;::::0;::::1;::::0;:37:::1;::::0;:5:::1;::::0;7062:6;;7032:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7079:36:108::1;::::0;-1:-1:-1;;;7079:36:108;;:28:::1;::::0;-1:-1:-1;7079:28:108::1;::::0;-1:-1:-1;7079:36:108::1;::::0;:5:::1;::::0;7108:6;;7079:36:::1;;;:::i;5662:138:55:-:0;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;7619:430:108:-:0;2316:19:61;:17;:19::i;:::-;7740:38:108::1;::::0;-1:-1:-1;;;7740:38:108;;:30:::1;::::0;::::1;::::0;:38:::1;::::0;:5:::1;::::0;7771:6;;7740:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7805:37:108::1;::::0;-1:-1:-1;;;7805:37:108;;7788:14:::1;::::0;-1:-1:-1;7805:29:108::1;::::0;-1:-1:-1;7805:29:108::1;::::0;:37:::1;::::0;7788:14;;7835:6;;7805:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7788:54;;-1:-1:-1::0;;7856:6:108::1;:23;;;:38:::0;7852:129:::1;;7910:60;::::0;-1:-1:-1;;;7910:60:108;;:5:::1;:60;::::0;::::1;25495:25:174::0;7959:10:108::1;25536:18:174::0;;;25529:60;7910:48:108::1;::::0;::::1;::::0;25468:18:174;;7910:60:108::1;25288:307:174::0;8487:403:108;8635:39;2316:19:61;:17;:19::i;:::-;8690:31:108::1;::::0;-1:-1:-1;;;8690:31:108;;:23:::1;::::0;::::1;::::0;:31:::1;::::0;:5:::1;::::0;8714:6;;8690:31:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8765:30:108::1;::::0;-1:-1:-1;;;8765:30:108;;:22:::1;::::0;-1:-1:-1;8765:22:108::1;::::0;-1:-1:-1;8765:30:108::1;::::0;:5:::1;::::0;8788:6;;8765:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8805:78;::::0;-1:-1:-1;;;8805:78:108;;8731:64;;-1:-1:-1;8805:37:108::1;::::0;::::1;::::0;:78:::1;::::0;:5:::1;::::0;8843:6;;8731:64;;8805:78:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8487:403:::0;;;:::o;2093:161:110:-;2199:48;;-1:-1:-1;;;2199:48:110;;2176:4;2199:48;;;2578:25:174;;;2619:18;;;2612:34;;;2176:4:110;2199:32;;;;2551:18:174;;2199:48:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8284:171:108:-;2316:19:61;:17;:19::i;:::-;8385:27:108::1;::::0;-1:-1:-1;;;8385:27:108;;:5:::1;:27;::::0;::::1;47784:25:174::0;47845:20;;47825:18;;;47818:48;8385:19:108::1;::::0;::::1;::::0;47757:18:174;;8385:27:108::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8422:26:108::1;::::0;-1:-1:-1;;;8422:26:108;;:5:::1;:26;::::0;::::1;47784:25:174::0;47845:20;;47825:18;;;47818:48;8422:18:108::1;::::0;-1:-1:-1;8422:18:108::1;::::0;-1:-1:-1;47757:18:174;;8422:26:108::1;47515:357:174::0;1936:121:110;2022:28;;-1:-1:-1;;;2022:28:110;;1999:4;2022:28;;;25495:25:174;;;-1:-1:-1;;;;;25556:32:174;;25536:18;;;25529:60;1999:4:110;2022:22;;;;25468:18:174;;2022:28:110;25288:307:174;5265:659:110;-1:-1:-1;;;;;5393:26:110;;5348:7;5393:26;;;:10;:26;;;;;;;;5367:64;;;;;;;5393:38;;;5367:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5348:7;;5367:64;;5393:38;;5367:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:14;:5;:12;:14::i;8922:203:108:-;2316:19:61;:17;:19::i;:::-;9039:35:108::1;::::0;-1:-1:-1;;;9039:35:108;;:5:::1;:35;::::0;::::1;47784:25:174::0;47845:20;;47825:18;;;47818:48;9039:27:108::1;::::0;::::1;::::0;47757:18:174;;9039:35:108::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9084:34:108::1;::::0;-1:-1:-1;;;9084:34:108;;:5:::1;:34;::::0;::::1;47784:25:174::0;47845:20;;47825:18;;;47818:48;9084:26:108::1;::::0;-1:-1:-1;9084:26:108::1;::::0;-1:-1:-1;47757:18:174;;9084:34:108::1;47515:357:174::0;4148:103:55;4214:30;4225:4;966:10:60;4214::55;:30::i;2905:128:61:-;-1:-1:-1;;;;;;;;;;;2821:9:61;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:61;;;;;;;;;;;2966:61;2905:128::o;971:477:118:-;1112:29;1181:260;1232:5;:12;;:22;;;;;;;;;;-1:-1:-1;;;;;1232:22:118;-1:-1:-1;;;;;1232:31:118;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1226:39;;:2;:39;:::i;:::-;1208:57;;:15;:57;:::i;:::-;1285:36;;;;:47;;;-1:-1:-1;;;1285:47:118;;;;-1:-1:-1;;;;;1285:36:118;;;;:45;;:47;;;;;;;;;;;;;;;:36;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1279:53;;:2;:53;:::i;:::-;1388:32;;;;:43;;;-1:-1:-1;;;1388:43:118;;;;-1:-1:-1;;;;;1388:32:118;;;;:41;;:43;;;;;;;;;;;;;;;:32;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1382:49;;:2;:49;:::i;:::-;1346:12;;;:22;:33;;;-1:-1:-1;;;1346:33:118;;;;-1:-1:-1;;;;;1346:22:118;;;;:31;;:33;;;;;;;;;;;;;;;:22;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;1181:13;:260::i;8626:187::-;8719:7;8745:61;8759:4;8765:31;8783:5;8790;8765:17;:31::i;:::-;179:4:124;8745:13:118;:61::i;926:148:126:-;1012:15;;989:4;;1012:20;:55;;;;;1036:31;:4;:22;;;:29;:31::i;1945:305::-;2098:7;2125:5;2134:1;2125:10;2121:42;;2144:19;;-1:-1:-1;;;2144:19:126;;;;;;;;;;;2121:42;2205:22;;;;2180:63;;-1:-1:-1;;;2180:63:126;;:17;;:24;;:63;;2205:22;2229:6;;2237:5;;2180:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7270:387:55:-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:55;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:55;;;;;;;;;:38;;-1:-1:-1;;7475:38:55;7509:4;7475:38;;;7559:12;966:10:60;;887:96;7559:12:55;-1:-1:-1;;;;;7532:40:55;7550:7;-1:-1:-1;;;;;7532:40:55;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7892:388;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:55;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:55;;;;;;;;;;:39;;-1:-1:-1;;8097:39:55;;;8155:40;966:10:60;;8097:14:55;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;3674:178:61;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:61;;-1:-1:-1;;3791:17:61::1;::::0;;3823:22:::1;966:10:60::0;3832:12:61::1;3823:22;::::0;-1:-1:-1;;;;;37906:32:174;;;37888:51;;37876:2;37861:18;3823:22:61::1;;;;;;;3722:130;3674:178::o:0;4599:312:59:-;4679:4;-1:-1:-1;;;;;4688:6:59;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:59;:32;-1:-1:-1;;;;;;;;;;;2035:53:69;-1:-1:-1;;;;;2035:53:69;;1957:138;4749:32:59;-1:-1:-1;;;;;4749:42:59;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:59;;;;;;;;;;;4374:103:108;2362:4:55;3191:16;2362:4;3191:10;:16::i;6052:538:59:-;6169:17;-1:-1:-1;;;;;6151:50:59;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:59;;;;;;;;-1:-1:-1;;6151:52:59;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:59;;-1:-1:-1;;;;;37906:32:174;;6513:60:59;;;37888:51:174;37861:18;;6513:60:59;37742:203:174;6147:437:59;-1:-1:-1;;;;;;;;;;;6245:40:59;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:59;;;;;1805:25:174;;;1778:18;;6312:34:59;1659:177:174;6241:120:59;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:59;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:59;;;;;;;;;;;3231:65:55;6931:20:58;:18;:20::i;1836:97:61:-;6931:20:58;:18;:20::i;:::-;1899:27:61::1;:25;:27::i;3366:176::-:0;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:61;;-1:-1:-1;;3484:16:61::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:60::0;3522:12:61::1;887:96:60::0;1356:885:125;1471:22;;;:29;;-1:-1:-1;;;;1471:29:125;-1:-1:-1;;;1471:29:125;;;1546:27;;;;:41;;;-1:-1:-1;;;1546:41:125;;;;1437:22;;1471:29;;-1:-1:-1;;;;;1546:27:125;;;;:39;;:41;;;;;;;;;;;;;;;:27;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1511:76;;1597:29;1629:5;:10;;:20;;;;;;;;;;-1:-1:-1;;;;;1629:20:125;-1:-1:-1;;;;;1629:32:125;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1597:66;-1:-1:-1;1696:4:125;-1:-1:-1;;;;;1684:24:125;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:34;;1723:9;1718:132;1738:15;;;1718:132;;;1787:52;1824:4;1831;;1836:1;1831:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1787:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1787:28:125;;-1:-1:-1;;;1787:52:125:i;:::-;1774:7;1782:1;1774:10;;;;;;;;:::i;:::-;;;;;;;;;;:65;1755:3;;1718:132;;;-1:-1:-1;1894:27:125;;;;:41;;;-1:-1:-1;;;1894:41:125;;;;1860:31;;-1:-1:-1;;;;;1894:27:125;;:39;;:41;;;;;;;;;;;;;;:27;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1860:75;;1945:28;1976:5;:10;;:20;;;;;;;;;;-1:-1:-1;;;;;1976:20:125;-1:-1:-1;;;;;1976:32:125;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2021:172;;-1:-1:-1;;;2021:172:125;;;;;53560:25:174;;;53601:18;;;53594:34;;;53644:18;;;53637:34;;;53687:18;;;53680:34;;;53730:19;;;53723:35;;;1945:65:125;;-1:-1:-1;2021:54:125;;;;53532:19:174;;2021:172:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2204:22:125;;;;:30;;-1:-1:-1;;;;2204:30:125;;;-1:-1:-1;1356:885:125;;;-1:-1:-1;;;;;;1356:885:125:o;2531:208:123:-;2623:4;360:21;380:1;-1:-1:-1;;360:21:123;:::i;:::-;2646:10;:38;;:86;;;;-1:-1:-1;;2701:31:123;;;;;;-1:-1:-1;2688:44:123;2531:208::o;4381:197:55:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:55;;-1:-1:-1;;;;;45745:32:174;;4514:47:55;;;45727:51:174;45794:18;;;45787:34;;;45700:18;;4514:47:55;45553:274:174;614:142:124;688:7;714:35;741:1;744;747;714:26;:35::i;8000:173:118:-;8126:26;;8086:7;;8112:54;;8154:5;230:8:124;8112:13:118;:54::i;1481:183:128:-;1567:11;;:18;1544:4;;1567:23;:48;;;;-1:-1:-1;1594:9:128;;;;:16;:21;1567:48;:90;;;;-1:-1:-1;;1619:26:128;;;:33;:38;;1481:183::o;3105:126:61:-;-1:-1:-1;;;;;;;;;;;2821:9:61;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:61;;;;;;;;;;;2779:335:69;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:69;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:58:-;8870:21;8560:40;-1:-1:-1;;;8560:40:58;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:58;;;;;;;;;;;1939:156:61;6931:20:58;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:61;;-1:-1:-1;;2071:17:61::1;::::0;;1939:156::o;4106:253:77:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:77;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:77:o;25271:508:91:-;25345:9;25568:1;25564;25560:6;25556:14;25553:1;25550:21;25547:1;25543:29;25536:37;25533:1;25529:45;25519:169;;25607:10;25601:4;25594:24;25669:4;25663;25656:18;25519:169;-1:-1:-1;25749:9:91;;25724:17;;;25717:25;25710:33;25745:17;;;25706:57;;25271:508::o;2186:281:69:-;2263:17;-1:-1:-1;;;;;2263:29:69;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:69;;-1:-1:-1;;;;;37906:32:174;;2320:47:69;;;37888:51:174;37861:18;;2320:47:69;37742:203:174;2259:119:69;-1:-1:-1;;;;;;;;;;;2387:73:69;;-1:-1:-1;;;;;;2387:73:69;-1:-1:-1;;;;;2387:73:69;;;;;;;;;;2186:281::o;6598:122::-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:69;;;;;;;;;;;4625:582:77;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:77;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:77;;-1:-1:-1;;;;;37906:32:174;;5121:24:77;;;37888:51:174;37861:18;;5121:24:77;37742:203:174;5041:119:77;-1:-1:-1;5180:10:77;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:77;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:174:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:174;;209:43;;199:71;;266:1;263;256:12;497:166;568:5;613:2;604:6;599:3;595:16;591:25;588:45;;;629:1;626;619:12;588:45;-1:-1:-1;651:6:174;497:166;-1:-1:-1;497:166:174:o;668:379::-;766:6;819:2;807:9;798:7;794:23;790:32;787:52;;;835:1;832;825:12;787:52;875:9;862:23;-1:-1:-1;;;;;900:6:174;897:30;894:50;;;940:1;937;930:12;894:50;963:78;1033:7;1024:6;1013:9;1009:22;963:78;:::i;1052:161::-;1118:5;1163:2;1154:6;1149:3;1145:16;1141:25;1138:45;;;1179:1;1176;1169:12;1218:251;1311:6;1364:2;1352:9;1343:7;1339:23;1335:32;1332:52;;;1380:1;1377;1370:12;1332:52;1403:60;1455:7;1444:9;1403:60;:::i;1474:180::-;1533:6;1586:2;1574:9;1565:7;1561:23;1557:32;1554:52;;;1602:1;1599;1592:12;1554:52;-1:-1:-1;1625:23:174;;1474:180;-1:-1:-1;1474:180:174:o;1841:209::-;1942:6;1995:3;1983:9;1974:7;1970:23;1966:33;1963:53;;;2012:1;2009;2002:12;2055:344;2203:2;2188:18;;2236:1;2225:13;;2215:144;;2281:10;2276:3;2272:20;2269:1;2262:31;2316:4;2313:1;2306:15;2344:4;2341:1;2334:15;2215:144;2368:25;;;2055:344;:::o;4009:248::-;4077:6;4085;4138:2;4126:9;4117:7;4113:23;4109:32;4106:52;;;4154:1;4151;4144:12;4106:52;-1:-1:-1;;4177:23:174;;;4247:2;4232:18;;;4219:32;;-1:-1:-1;4009:248:174:o;4262:131::-;-1:-1:-1;;;;;4337:31:174;;4327:42;;4317:70;;4383:1;4380;4373:12;4398:315;4466:6;4474;4527:2;4515:9;4506:7;4502:23;4498:32;4495:52;;;4543:1;4540;4533:12;4495:52;4582:9;4569:23;4601:31;4626:5;4601:31;:::i;:::-;4651:5;4703:2;4688:18;;;;4675:32;;-1:-1:-1;;;4398:315:174:o;4718:407::-;4824:6;4877:2;4865:9;4856:7;4852:23;4848:32;4845:52;;;4893:1;4890;4883:12;4845:52;4933:9;4920:23;-1:-1:-1;;;;;4958:6:174;4955:30;4952:50;;;4998:1;4995;4988:12;4952:50;5021:22;;5077:3;5059:16;;;5055:26;5052:46;;;5094:1;5091;5084:12;5130:127;5191:10;5186:3;5182:20;5179:1;5172:31;5222:4;5219:1;5212:15;5246:4;5243:1;5236:15;5262:253;5334:2;5328:9;5376:4;5364:17;;-1:-1:-1;;;;;5396:34:174;;5432:22;;;5393:62;5390:88;;;5458:18;;:::i;:::-;5494:2;5487:22;5262:253;:::o;5520:252::-;5592:2;5586:9;5634:3;5622:16;;-1:-1:-1;;;;;5653:34:174;;5689:22;;;5650:62;5647:88;;;5715:18;;:::i;5777:275::-;5848:2;5842:9;5913:2;5894:13;;-1:-1:-1;;5890:27:174;5878:40;;-1:-1:-1;;;;;5933:34:174;;5969:22;;;5930:62;5927:88;;;5995:18;;:::i;:::-;6031:2;6024:22;5777:275;;-1:-1:-1;5777:275:174:o;6057:118::-;6143:5;6136:13;6129:21;6122:5;6119:32;6109:60;;6165:1;6162;6155:12;6180:770;6248:5;6296:4;6284:9;6279:3;6275:19;6271:30;6268:50;;;6314:1;6311;6304:12;6268:50;6336:22;;:::i;:::-;6327:31;;6395:9;6382:23;6414:33;6439:7;6414:33;:::i;:::-;6470:7;6463:5;6456:22;;6538:2;6527:9;6523:18;6510:32;6505:2;6498:5;6494:14;6487:56;6603:2;6592:9;6588:18;6575:32;6570:2;6563:5;6559:14;6552:56;6668:2;6657:9;6653:18;6640:32;6635:2;6628:5;6624:14;6617:56;6734:3;6723:9;6719:19;6706:33;6700:3;6693:5;6689:15;6682:58;6801:3;6790:9;6786:19;6773:33;6767:3;6760:5;6756:15;6749:58;6859:3;6848:9;6844:19;6831:33;6873:30;6895:7;6873:30;:::i;:::-;6930:3;6919:15;;6912:32;6923:5;6180:770;-1:-1:-1;;6180:770:174:o;6955:257::-;7054:6;7107:3;7095:9;7086:7;7082:23;7078:33;7075:53;;;7124:1;7121;7114:12;7075:53;7147:59;7198:7;7187:9;7147:59;:::i;7217:309::-;7301:12;;-1:-1:-1;;;;;7297:38:174;7285:51;;7399:4;7388:16;;;7382:23;7375:31;7368:39;7352:14;;;7345:63;7457:4;7446:16;;;7440:23;7424:14;;;7417:47;7513:4;7502:16;;;7496:23;7480:14;;7473:47;7217:309::o;7531:703::-;7707:4;7749:3;7738:9;7734:19;7726:27;;7762:58;7810:9;7801:6;7795:13;7762:58;:::i;:::-;7905:1;7901;7896:3;7892:11;7888:19;7880:4;7872:6;7868:17;7862:24;7858:50;7851:4;7840:9;7836:20;7829:80;7965:4;7957:6;7953:17;7947:24;7940:4;7929:9;7925:20;7918:54;8028:4;8020:6;8016:17;8010:24;8003:4;7992:9;7988:20;7981:54;8091:4;8083:6;8079:17;8073:24;8066:4;8055:9;8051:20;8044:54;8156:4;8148:6;8144:17;8138:24;8129:6;8118:9;8114:22;8107:56;8221:4;8213:6;8209:17;8203:24;8194:6;8183:9;8179:22;8172:56;7531:703;;;;:::o;8239:315::-;8307:6;8315;8368:2;8356:9;8347:7;8343:23;8339:32;8336:52;;;8384:1;8381;8374:12;8336:52;8420:9;8407:23;8397:33;;8480:2;8469:9;8465:18;8452:32;8493:31;8518:5;8493:31;:::i;:::-;8543:5;8533:15;;;8239:315;;;;;:::o;9208:614::-;9386:4;9428:3;9417:9;9413:19;9405:27;;9441:58;9489:9;9480:6;9474:13;9441:58;:::i;:::-;9555:4;9547:6;9543:17;9537:24;9530:4;9519:9;9515:20;9508:54;9618:4;9610:6;9606:17;9600:24;9593:4;9582:9;9578:20;9571:54;9681:4;9673:6;9669:17;9663:24;9656:4;9645:9;9641:20;9634:54;9744:4;9736:6;9732:17;9726:24;9719:4;9708:9;9704:20;9697:54;9809:4;9801:6;9797:17;9791:24;9782:6;9771:9;9767:22;9760:56;9208:614;;;;:::o;9827:179::-;9910:5;9955:3;9946:6;9941:3;9937:16;9933:26;9930:46;;;9972:1;9969;9962:12;10011:286;10121:6;10174:3;10162:9;10153:7;10149:23;10145:33;10142:53;;;10191:1;10188;10181:12;10142:53;10214:77;10283:7;10272:9;10214:77;:::i;10302:301::-;10361:6;10414:2;10402:9;10393:7;10389:23;10385:32;10382:52;;;10430:1;10427;10420:12;10382:52;10469:9;10456:23;-1:-1:-1;;;;;10512:5:174;10508:46;10501:5;10498:57;10488:85;;10569:1;10566;10559:12;10608:898;10685:6;10693;10746:2;10734:9;10725:7;10721:23;10717:32;10714:52;;;10762:1;10759;10752:12;10714:52;10801:9;10788:23;10820:31;10845:5;10820:31;:::i;:::-;10870:5;-1:-1:-1;10894:2:174;10932:18;;;10919:32;-1:-1:-1;;;;;11000:14:174;;;10997:34;;;11027:1;11024;11017:12;10997:34;11065:6;11054:9;11050:22;11040:32;;11110:7;11103:4;11099:2;11095:13;11091:27;11081:55;;11132:1;11129;11122:12;11081:55;11168:2;11155:16;11190:2;11186;11183:10;11180:36;;;11196:18;;:::i;:::-;11238:53;11281:2;11262:13;;-1:-1:-1;;11258:27:174;11254:36;;11238:53;:::i;:::-;11225:66;;11314:2;11307:5;11300:17;11354:7;11349:2;11344;11340;11336:11;11332:20;11329:33;11326:53;;;11375:1;11372;11365:12;11326:53;11430:2;11425;11421;11417:11;11412:2;11405:5;11401:14;11388:45;11474:1;11469:2;11464;11457:5;11453:14;11449:23;11442:34;;11495:5;11485:15;;;;;10608:898;;;;;:::o;11511:250::-;11596:1;11606:113;11620:6;11617:1;11614:13;11606:113;;;11696:11;;;11690:18;11677:11;;;11670:39;11642:2;11635:10;11606:113;;;-1:-1:-1;;11753:1:174;11735:16;;11728:27;11511:250::o;11766:271::-;11808:3;11846:5;11840:12;11873:6;11868:3;11861:19;11889:76;11958:6;11951:4;11946:3;11942:14;11935:4;11928:5;11924:16;11889:76;:::i;:::-;12019:2;11998:15;-1:-1:-1;;11994:29:174;11985:39;;;;12026:4;11981:50;;11766:271;-1:-1:-1;;11766:271:174:o;12042:220::-;12191:2;12180:9;12173:21;12154:4;12211:45;12252:2;12241:9;12237:18;12229:6;12211:45;:::i;12267:247::-;12326:6;12379:2;12367:9;12358:7;12354:23;12350:32;12347:52;;;12395:1;12392;12385:12;12347:52;12434:9;12421:23;12453:31;12478:5;12453:31;:::i;12519:450::-;12583:3;12621:5;12615:12;12648:6;12643:3;12636:19;12674:4;12703;12698:3;12694:14;12687:21;;12742:4;12735:5;12731:16;12765:1;12775:169;12789:6;12786:1;12783:13;12775:169;;;12850:13;;12838:26;;12884:12;;;;12919:15;;;;12811:1;12804:9;12775:169;;;-1:-1:-1;12960:3:174;;12519:450;-1:-1:-1;;;;;12519:450:174:o;12974:1103::-;13063:5;13057:12;13052:3;13045:25;13027:3;13089:4;13139:2;13132:5;13128:14;13122:21;13173:4;13168:2;13163:3;13159:12;13152:26;13215:12;13209:19;13260:4;13253;13248:3;13244:14;13237:28;13286:70;13351:3;13346;13342:13;13326:14;13286:70;:::i;:::-;13393:21;;;13387:28;-1:-1:-1;;13477:14:174;;;13473:23;;13466:4;13457:14;;13450:47;13546:21;;13576:20;;;13650:23;;;;-1:-1:-1;13691:1:174;;13434:7;;13614:13;;;;13701:175;13715:6;13712:1;13709:13;13701:175;;;13778:13;;13764:28;;13851:15;;;;13737:1;13730:9;;;;;13814:14;;;;13701:175;;;13705:3;13931:4;13917:12;13913:23;13907:30;13885:52;;13989:2;13983:3;13976:5;13972:15;13968:24;13962:3;13957;13953:13;13946:47;14009:62;14065:5;14049:14;14009:62;:::i;:::-;14002:69;12974:1103;-1:-1:-1;;;;;;;;;12974:1103:174:o;14082:1146::-;14265:2;14254:9;14247:21;14228:4;14303:6;14297:13;14346:4;14341:2;14330:9;14326:18;14319:32;14388:12;14382:19;14438:4;14432:3;14421:9;14417:19;14410:33;14466:65;14526:3;14515:9;14511:19;14495:14;14466:65;:::i;:::-;14452:79;;14586:2;14572:12;14568:21;14562:28;14659:3;14655:8;14643:9;14635:6;14631:22;14627:37;14621:3;14610:9;14606:19;14599:66;14688:52;14733:6;14717:14;14688:52;:::i;:::-;14674:66;;;14801:4;14787:12;14783:23;14777:30;14771:3;14760:9;14756:19;14749:59;14883:4;14869:12;14865:23;14859:30;14852:38;14845:46;14839:3;14828:9;14824:19;14817:75;14941:2;14933:6;14929:15;14923:22;14901:44;;14954:56;15004:4;14993:9;14989:20;14973:14;-1:-1:-1;;;;;2723:31:174;2711:44;;2657:104;14954:56;15066:4;15058:6;15054:17;15048:24;15041:4;15030:9;15026:20;15019:54;15129:4;15121:6;15117:17;15111:24;15104:4;15093:9;15089:20;15082:54;15192:4;15184:6;15180:17;15174:24;15167:4;15156:9;15152:20;15145:54;15216:6;15208:14;;;;14082:1146;;;;:::o;15233:174::-;15311:5;15356:3;15347:6;15342:3;15338:16;15334:26;15331:46;;;15373:1;15370;15363:12;15412:894;15684:6;15692;15700;15708;15716;15769:3;15757:9;15748:7;15744:23;15740:33;15737:53;;;15786:1;15783;15776:12;15737:53;15825:9;15812:23;15844:31;15869:5;15844:31;:::i;:::-;15894:5;-1:-1:-1;15918:81:174;15991:7;15986:2;15971:18;;15918:81;:::i;:::-;15908:91;;16018:82;16092:7;16086:3;16075:9;16071:19;16018:82;:::i;:::-;16008:92;;16119:75;16186:7;16180:3;16169:9;16165:19;16119:75;:::i;:::-;16109:85;;16213:87;16292:7;16286:3;16275:9;16271:19;16213:87;:::i;:::-;16203:97;;15412:894;;;;;;;;:::o;17129:270::-;17329:3;17314:19;;17342:51;17318:9;17375:6;17342:51;:::i;18384:254::-;18475:6;18528:2;18516:9;18507:7;18503:23;18499:32;18496:52;;;18544:1;18541;18534:12;18496:52;18567:65;18624:7;18613:9;18567:65;:::i;18902:626::-;18999:6;19007;19060:2;19048:9;19039:7;19035:23;19031:32;19028:52;;;19076:1;19073;19066:12;19028:52;19116:9;19103:23;-1:-1:-1;;;;;19186:2:174;19178:6;19175:14;19172:34;;;19202:1;19199;19192:12;19172:34;19240:6;19229:9;19225:22;19215:32;;19285:7;19278:4;19274:2;19270:13;19266:27;19256:55;;19307:1;19304;19297:12;19256:55;19347:2;19334:16;19373:2;19365:6;19362:14;19359:34;;;19389:1;19386;19379:12;19359:34;19442:7;19437:2;19427:6;19424:1;19420:14;19416:2;19412:23;19408:32;19405:45;19402:65;;;19463:1;19460;19453:12;19402:65;19494:2;19486:11;;;;;19516:6;;-1:-1:-1;18902:626:174;;-1:-1:-1;;;;18902:626:174:o;19533:801::-;19693:4;19722:2;19762;19751:9;19747:18;19792:2;19781:9;19774:21;19815:6;19850;19844:13;19881:6;19873;19866:22;19919:2;19908:9;19904:18;19897:25;;19981:2;19971:6;19968:1;19964:14;19953:9;19949:30;19945:39;19931:53;;20019:2;20011:6;20007:15;20040:1;20050:255;20064:6;20061:1;20058:13;20050:255;;;20157:2;20153:7;20141:9;20133:6;20129:22;20125:36;20120:3;20113:49;20185:40;20218:6;20209;20203:13;20185:40;:::i;:::-;20175:50;-1:-1:-1;20283:12:174;;;;20248:15;;;;20086:1;20079:9;20050:255;;;-1:-1:-1;20322:6:174;;19533:801;-1:-1:-1;;;;;;;19533:801:174:o;20635:264::-;20421:12;;-1:-1:-1;;;;;20417:38:174;20405:51;;20505:4;20494:16;;;20488:23;20472:14;;;20465:47;20561:4;20550:16;;;20544:23;20528:14;;;20521:47;20617:4;20606:16;;;20600:23;20584:14;;;20577:47;20831:3;20816:19;;20844:49;20339:291;21549:159;21613:5;21658:2;21649:6;21644:3;21640:16;21636:25;21633:45;;;21674:1;21671;21664:12;21713:247;21804:6;21857:2;21845:9;21836:7;21832:23;21828:32;21825:52;;;21873:1;21870;21863:12;21825:52;21896:58;21946:7;21935:9;21896:58;:::i;22225:1070::-;22491:6;22480:9;22473:25;22534:2;22529;22518:9;22514:18;22507:30;22454:4;22585:6;22572:20;22672:2;22668:7;22659:6;22643:14;22639:27;22635:41;22615:18;22611:66;22601:94;;22691:1;22688;22681:12;22601:94;22717:31;;22825:2;22814:14;;;22771:19;-1:-1:-1;;;;;22840:30:174;;22837:50;;;22883:1;22880;22873:12;22837:50;22932:6;22916:14;22912:27;22903:7;22899:41;22896:61;;;22953:1;22950;22943:12;22896:61;22993:2;22988;22977:9;22973:18;22966:30;23033:6;23027:3;23016:9;23012:19;23005:35;23092:6;23083:7;23077:3;23066:9;23062:19;23049:50;23149:1;23143:3;23134:6;23123:9;23119:22;23115:32;23108:43;23212:2;23204:6;23200:15;23187:29;23182:2;23171:9;23167:18;23160:57;23285:3;23278:2;23274:7;23269:2;23261:6;23257:15;23253:29;23242:9;23238:45;23234:55;23226:63;;;;22225:1070;;;;;:::o;23300:442::-;23404:5;23391:19;23419:33;23444:7;23419:33;:::i;:::-;-1:-1:-1;;;;;23511:16:174;;;23499:29;;23584:4;23573:16;;;23560:30;23544:14;;;23537:54;23639:4;23628:16;;23615:30;;23654:33;23615:30;23654:33;:::i;:::-;23732:2;23723:7;23719:16;23712:4;23707:3;23703:14;23696:40;;;23300:442;;:::o;23747:382::-;24021:25;;;24008:3;23993:19;;24055:68;24119:2;24104:18;;24096:6;24055:68;:::i;24134:960::-;24424:25;;;24411:3;24396:19;;24471:20;;24500:31;24471:20;24500:31;:::i;:::-;24595:1;24591;24586:3;24582:11;24578:19;24571:5;24567:31;24562:2;24551:9;24547:18;24540:59;;24660:2;24652:6;24648:15;24635:29;24630:2;24619:9;24615:18;24608:57;24726:2;24718:6;24714:15;24701:29;24696:2;24685:9;24681:18;24674:57;24793:2;24785:6;24781:15;24768:29;24762:3;24751:9;24747:19;24740:58;24860:3;24852:6;24848:16;24835:30;24829:3;24818:9;24814:19;24807:59;24928:3;24920:6;24916:16;24903:30;24897:3;24886:9;24882:19;24875:59;24983:3;24975:6;24971:16;24958:30;24997;25019:7;24997:30;:::i;:::-;25078:7;25071:15;25064:23;25058:3;25047:9;25043:19;25036:52;;24134:960;;;;;:::o;25099:184::-;25169:6;25222:2;25210:9;25201:7;25197:23;25193:32;25190:52;;;25238:1;25235;25228:12;25190:52;-1:-1:-1;25261:16:174;;25099:184;-1:-1:-1;25099:184:174:o;25886:276::-;25972:6;26025:2;26013:9;26004:7;26000:23;25996:32;25993:52;;;26041:1;26038;26031:12;25993:52;26073:9;26067:16;26112:1;26105:5;26102:12;26092:40;;26128:1;26125;26118:12;26167:127;26228:10;26223:3;26219:20;26216:1;26209:31;26259:4;26256:1;26249:15;26283:4;26280:1;26273:15;26299:128;26366:9;;;26387:11;;;26384:37;;;26401:18;;:::i;26432:217::-;26472:1;26498;26488:132;;26542:10;26537:3;26533:20;26530:1;26523:31;26577:4;26574:1;26567:15;26605:4;26602:1;26595:15;26488:132;-1:-1:-1;26634:9:174;;26432:217::o;26869:669::-;26983:6;27036:3;27024:9;27015:7;27011:23;27007:33;27004:53;;;27053:1;27050;27043:12;27004:53;27079:22;;:::i;:::-;27130:9;27124:16;27117:5;27110:31;27194:2;27183:9;27179:18;27173:25;27168:2;27161:5;27157:14;27150:49;27252:2;27241:9;27237:18;27231:25;27226:2;27219:5;27215:14;27208:49;27310:2;27299:9;27295:18;27289:25;27284:2;27277:5;27273:14;27266:49;27369:3;27358:9;27354:19;27348:26;27342:3;27335:5;27331:15;27324:51;27420:3;27409:9;27405:19;27399:26;27434:33;27459:7;27434:33;:::i;:::-;27494:3;27483:15;;27476:32;27487:5;26869:669;-1:-1:-1;;;26869:669:174:o;27932:520::-;28002:5;28009:6;28069:3;28056:17;28155:2;28151:7;28140:8;28124:14;28120:29;28116:43;28096:18;28092:68;28082:96;;28174:1;28171;28164:12;28082:96;28202:33;;28306:4;28293:18;;;-1:-1:-1;28254:21:174;;-1:-1:-1;;;;;;28323:30:174;;28320:50;;;28366:1;28363;28356:12;28320:50;28420:6;28417:1;28413:14;28397;28393:35;28386:5;28382:47;28379:67;;;28442:1;28439;28432:12;28379:67;27932:520;;;;;:::o;28457:311::-;28545:19;;;28527:3;-1:-1:-1;;;;;28576:31:174;;28573:51;;;28620:1;28617;28610:12;28573:51;28656:6;28653:1;28649:14;28708:8;28701:5;28694:4;28689:3;28685:14;28672:45;28737:18;;;;28757:4;28733:29;;28457:311;-1:-1:-1;;;28457:311:174:o;28773:946::-;29055:6;29044:9;29037:25;29098:2;29093;29082:9;29078:18;29071:30;29150:6;29137:20;29132:2;29121:9;29117:18;29110:48;29018:4;29205:2;29197:6;29193:15;29180:29;29218:28;29240:5;29218:28;:::i;:::-;29289:13;29282:21;29277:2;29262:18;;29255:49;29353:2;29341:15;;29328:29;29366:30;29328:29;29366:30;:::i;:::-;29441:15;29434:23;29427:4;29412:20;;29405:53;29501:67;29564:2;29552:15;;29556:6;29501:67;:::i;:::-;29605:4;29599:3;29588:9;29584:19;29577:33;29627:86;29708:3;29697:9;29693:19;29679:12;29665;29627:86;:::i;:::-;29619:94;28773:946;-1:-1:-1;;;;;;28773:946:174:o;30213:391::-;30497:25;;;30484:3;30469:19;;30531:67;30594:2;30579:18;;30571:6;29815:12;;-1:-1:-1;;;;;29811:38:174;29799:51;;29899:4;29888:16;;;29882:23;29866:14;;;29859:47;29955:4;29944:16;;;29938:23;29922:14;;;29915:47;30011:4;30000:16;;;29994:23;29978:14;;;29971:47;30067:4;30056:16;;;30050:23;30034:14;;;30027:47;29837:3;30112:16;;;30106:23;30090:14;;;30083:47;30193:4;30182:16;;;30176:23;30169:31;30162:39;30146:14;;30139:63;29724:484;30609:737;30681:5;30729:4;30717:9;30712:3;30708:19;30704:30;30701:50;;;30747:1;30744;30737:12;30701:50;30780:2;30774:9;30822:4;30814:6;30810:17;30893:6;30881:10;30878:22;-1:-1:-1;;;;;30845:10:174;30842:34;30839:62;30836:88;;;30904:18;;:::i;:::-;30944:10;30940:2;30933:22;;30973:6;30964:15;;31009:9;31003:16;31028:33;31053:7;31028:33;:::i;:::-;31070:23;;31138:2;31123:18;;31117:25;31151:30;31117:25;31151:30;:::i;:::-;31214:7;31209:2;31201:6;31197:15;31190:32;;31276:2;31265:9;31261:18;31255:25;31250:2;31242:6;31238:15;31231:50;31335:2;31324:9;31320:18;31314:25;31309:2;31301:6;31297:15;31290:50;;30609:737;;;;:::o;31351:784::-;31463:6;31516:3;31504:9;31495:7;31491:23;31487:33;31484:53;;;31533:1;31530;31523:12;31484:53;31559:22;;:::i;:::-;31604:63;31659:7;31648:9;31604:63;:::i;:::-;31597:5;31590:78;31713:3;31702:9;31698:19;31692:26;31727:33;31752:7;31727:33;:::i;:::-;31794:7;31787:4;31780:5;31776:16;31769:33;;31857:3;31846:9;31842:19;31836:26;31829:4;31822:5;31818:16;31811:52;31918:3;31907:9;31903:19;31897:26;31890:4;31883:5;31879:16;31872:52;31978:4;31967:9;31963:20;31957:27;31951:3;31944:5;31940:15;31933:52;32039:3;32028:9;32024:19;32018:26;32012:3;32005:5;32001:15;31994:51;32099:3;32088:9;32084:19;32078:26;32072:3;32065:5;32061:15;32054:51;32124:5;32114:15;;;31351:784;;;;:::o;32140:1459::-;32255:5;32242:19;32237:3;32230:32;32212:3;32281:4;32344:2;32337:5;32333:14;32320:28;32427:2;32423:7;32415:5;32399:14;32395:26;32391:40;32371:18;32367:65;32357:93;;32446:1;32443;32436:12;32357:93;32534:4;32520:12;;;32513:26;32474:30;;32582:60;32474:30;;32582:60;:::i;:::-;32674:4;32667;32662:3;32658:14;32651:28;32700:80;32775:3;32770;32766:13;32752:12;32738;32700:80;:::i;:::-;32688:92;;;32827:69;32892:2;32883:7;32879:16;32870:7;32827:69;:::i;:::-;-1:-1:-1;;32958:14:174;;;32954:23;;32947:4;32938:14;;32931:47;33013:28;;;33095:14;;33127:1;;32915:7;33059:13;;33137:190;33151:14;33148:1;33145:21;33137:190;;;33222:20;;33208:35;;33302:15;;;;33181:1;33174:9;;;;;33265:14;;33137:190;;;33374:71;33439:4;33430:7;33426:18;33417:7;33374:71;:::i;:::-;33336:109;;;;33497:2;33491:3;33484:5;33480:15;33476:24;33470:3;33465;33461:13;33454:47;33517:76;33587:5;33571:14;33555;33517:76;:::i;:::-;33510:83;32140:1459;-1:-1:-1;;;;;;;;;;32140:1459:174:o;33604:414::-;33874:6;33863:9;33856:25;33917:2;33912;33901:9;33897:18;33890:30;33837:4;33937:75;34008:2;33997:9;33993:18;33985:6;33937:75;:::i;34421:652::-;34534:6;34587:3;34575:9;34566:7;34562:23;34558:33;34555:53;;;34604:1;34601;34594:12;34555:53;34630:22;;:::i;:::-;34675:63;34730:7;34719:9;34675:63;:::i;:::-;34668:5;34661:78;34794:3;34783:9;34779:19;34773:26;34766:4;34759:5;34755:16;34748:52;34855:3;34844:9;34840:19;34834:26;34827:4;34820:5;34816:16;34809:52;34916:4;34905:9;34901:20;34895:27;34888:4;34881:5;34877:16;34870:53;34977:3;34966:9;34962:19;34956:26;34950:3;34943:5;34939:15;34932:51;35037:3;35026:9;35022:19;35016:26;35010:3;35003:5;34999:15;34992:51;35062:5;35052:15;;;34421:652;;;;:::o;35078:482::-;35196:5;35183:19;35178:3;35171:32;35251:4;35244:5;35240:16;35227:30;35266:33;35291:7;35266:33;:::i;:::-;-1:-1:-1;;;;;35331:33:174;35324:4;35315:14;;35308:57;35421:4;35410:16;;;35397:30;35381:14;;;35374:54;35484:4;35473:16;;;35460:30;35444:14;;;35437:54;35547:4;35536:16;;;35523:30;35507:14;;35500:54;35078:482::o;35565:433::-;35873:25;;;35860:3;35845:19;;35907:85;35988:2;35973:18;;35965:6;35907:85;:::i;36003:306::-;36091:6;36099;36107;36160:2;36148:9;36139:7;36135:23;36131:32;36128:52;;;36176:1;36173;36166:12;36128:52;36205:9;36199:16;36189:26;;36255:2;36244:9;36240:18;36234:25;36224:35;;36299:2;36288:9;36284:18;36278:25;36268:35;;36003:306;;;;;:::o;36314:505::-;36650:25;;;36637:3;36622:19;;36684:85;36765:2;36750:18;;36742:6;36684:85;:::i;:::-;36806:6;36800:3;36789:9;36785:19;36778:35;36314:505;;;;;;:::o;37369:368::-;37639:25;;;37626:3;37611:19;;37673:58;37727:2;37712:18;;37704:6;20421:12;;-1:-1:-1;;;;;20417:38:174;20405:51;;20505:4;20494:16;;;20488:23;20472:14;;;20465:47;20561:4;20550:16;;;20544:23;20528:14;;;20521:47;20617:4;20606:16;;;20600:23;20584:14;;20577:47;20339:291;37950:540;38063:5;38050:19;38045:3;38038:32;38126:4;38119:5;38115:16;38102:30;38095:4;38090:3;38086:14;38079:54;38189:4;38182:5;38178:16;38165:30;38158:4;38153:3;38149:14;38142:54;38252:4;38245:5;38241:16;38228:30;38221:4;38216:3;38212:14;38205:54;38315:4;38308:5;38304:16;38291:30;38284:4;38279:3;38275:14;38268:54;38370:4;38363:5;38359:16;38346:30;38385:33;38410:7;38385:33;:::i;:::-;-1:-1:-1;;;;;38450:33:174;38471:3;38434:14;;;;38427:57;;;;-1:-1:-1;37950:540:174:o;38942:129::-;-1:-1:-1;;;;;39020:5:174;39016:30;39009:5;39006:41;38996:69;;39061:1;39058;39051:12;39076:382;39189:5;39176:19;39204:33;39229:7;39204:33;:::i;:::-;-1:-1:-1;;;;;39258:33:174;39246:46;;39340:4;39329:16;;39316:30;39355:32;39316:30;39355:32;:::i;:::-;-1:-1:-1;;;;;39423:7:174;39419:32;39412:4;39407:3;39403:14;39396:56;;39076:382;;:::o;39463:821::-;39574:5;39561:19;39589:33;39614:7;39589:33;:::i;:::-;-1:-1:-1;;;;;39681:16:174;;;39669:29;;39746:4;39735:16;;39722:30;;39761:33;39722:30;39761:33;:::i;:::-;39826:16;;;39819:4;39810:14;;39803:40;39891:4;39880:16;;39867:30;;39906:33;39867:30;39906:33;:::i;:::-;39971:16;;;39964:4;39955:14;;39948:40;40036:4;40025:16;;40012:30;;40051:33;40012:30;40051:33;:::i;:::-;40116:16;;;40109:4;40100:14;;40093:40;40181:4;40170:16;;40157:30;;40196:33;40157:30;40196:33;:::i;:::-;40274:2;40265:7;40261:16;40254:4;40249:3;40245:14;40238:40;;;39463:821;;:::o;40289:1118::-;40955:25;;;-1:-1:-1;;;;;41016:32:174;;41011:2;40996:18;;40989:60;40942:3;40927:19;;41058:80;41134:2;41119:18;;41111:6;41058:80;:::i;:::-;38596:19;;41224:3;41209:19;;38584:32;38672:4;38661:16;;38648:30;38632:14;;;38625:54;38735:4;38724:16;;38711:30;38695:14;;;38688:54;38798:4;38787:16;;38774:30;38758:14;;;38751:54;38861:4;38850:16;;38837:30;38821:14;;;38814:54;38924:4;38913:16;;38900:30;38884:14;;;38877:54;41238:78;41311:3;41300:9;41296:19;41288:6;41238:78;:::i;:::-;41325:76;41396:3;41385:9;41381:19;41373:6;41325:76;:::i;:::-;40289:1118;;;;;;;;;:::o;41412:1021::-;42050:25;;;42037:3;42022:19;;42084:80;42160:2;42145:18;;42137:6;42084:80;:::i;:::-;38596:19;;42250:3;42235:19;;38584:32;38672:4;38661:16;;38648:30;38632:14;;;38625:54;38735:4;38724:16;;38711:30;38695:14;;;38688:54;38798:4;38787:16;;38774:30;38758:14;;;38751:54;38861:4;38850:16;;38837:30;38821:14;;;38814:54;38924:4;38913:16;;38900:30;38884:14;;;38877:54;42264:78;42337:3;42326:9;42322:19;42314:6;42264:78;:::i;:::-;42351:76;42422:3;42411:9;42407:19;42399:6;42351:76;:::i;42875:597::-;42990:6;43043:3;43031:9;43022:7;43018:23;43014:33;43011:53;;;43060:1;43057;43050:12;43011:53;43086:22;;:::i;:::-;43137:9;43131:16;43124:5;43117:31;43201:2;43190:9;43186:18;43180:25;43175:2;43168:5;43164:14;43157:49;43259:2;43248:9;43244:18;43238:25;43233:2;43226:5;43222:14;43215:49;43317:2;43306:9;43302:18;43296:25;43291:2;43284:5;43280:14;43273:49;43376:3;43365:9;43361:19;43355:26;43349:3;43342:5;43338:15;43331:51;43436:3;43425:9;43421:19;43415:26;43409:3;43402:5;43398:15;43391:51;43461:5;43451:15;;;42875:597;;;;:::o;43477:656::-;43588:6;43641:2;43629:9;43620:7;43616:23;43612:32;43609:52;;;43657:1;43654;43647:12;43609:52;43690:2;43684:9;43732:2;43724:6;43720:15;43801:6;43789:10;43786:22;-1:-1:-1;;;;;43753:10:174;43750:34;43747:62;43744:88;;;43812:18;;:::i;:::-;43848:2;43841:22;43885:16;;43910:31;43885:16;43910:31;:::i;:::-;43950:21;;44016:2;44001:18;;43995:25;44029:32;43995:25;44029:32;:::i;:::-;44089:2;44077:15;;44070:32;44081:6;43477:656;-1:-1:-1;;;43477:656:174:o;44138:516::-;44353:4;44395:2;44384:9;44380:18;44372:26;;44425:6;44414:9;44407:25;44481:6;44468:20;44463:2;44452:9;44448:18;44441:48;44536:2;44528:6;44524:15;44511:29;44549:31;44574:5;44549:31;:::i;:::-;-1:-1:-1;;;;;44616:31:174;44611:2;44596:18;;;;44589:59;;;;44138:516;;-1:-1:-1;;44138:516:174:o;44659:245::-;44726:6;44779:2;44767:9;44758:7;44754:23;44750:32;44747:52;;;44795:1;44792;44785:12;44747:52;44827:9;44821:16;44846:28;44868:5;44846:28;:::i;45157:391::-;45437:25;;;45424:3;45409:19;;45471:71;45538:2;45523:18;;45515:6;45000:19;;44988:32;;45076:4;45065:16;;;45052:30;45036:14;;;45029:54;45139:4;45128:16;;;45115:30;45099:14;;45092:54;44909:243;47049:461;47355:25;;;47342:3;47327:19;;47389:71;47456:2;47441:18;;47433:6;45000:19;;44988:32;;45076:4;45065:16;;;45052:30;45036:14;;;45029:54;45139:4;45128:16;;;45115:30;45099:14;;45092:54;44909:243;47389:71;47497:6;47491:3;47480:9;47476:19;47469:35;47049:461;;;;;;:::o;48255:416::-;48344:1;48381:5;48344:1;48395:270;48416:7;48406:8;48403:21;48395:270;;;48475:4;48471:1;48467:6;48463:17;48457:4;48454:27;48451:53;;;48484:18;;:::i;:::-;48534:7;48524:8;48520:22;48517:55;;;48554:16;;;;48517:55;48633:22;;;;48593:15;;;;48395:270;;;48399:3;48255:416;;;;;:::o;48676:806::-;48725:5;48755:8;48745:80;;-1:-1:-1;48796:1:174;48810:5;;48745:80;48844:4;48834:76;;-1:-1:-1;48881:1:174;48895:5;;48834:76;48926:4;48944:1;48939:59;;;;49012:1;49007:130;;;;48919:218;;48939:59;48969:1;48960:10;;48983:5;;;49007:130;49044:3;49034:8;49031:17;49028:43;;;49051:18;;:::i;:::-;-1:-1:-1;;49107:1:174;49093:16;;49122:5;;48919:218;;49221:2;49211:8;49208:16;49202:3;49196:4;49193:13;49189:36;49183:2;49173:8;49170:16;49165:2;49159:4;49156:12;49152:35;49149:77;49146:159;;;-1:-1:-1;49258:19:174;;;49290:5;;49146:159;49337:34;49362:8;49356:4;49337:34;:::i;:::-;49407:6;49403:1;49399:6;49395:19;49386:7;49383:32;49380:58;;;49418:18;;:::i;:::-;49456:20;;48676:806;-1:-1:-1;;;48676:806:174:o;49487:131::-;49547:5;49576:36;49603:8;49597:4;49576:36;:::i;49623:168::-;49696:9;;;49727;;49744:15;;;49738:22;;49724:37;49714:71;;49765:18;;:::i;49796:273::-;49864:6;49917:2;49905:9;49896:7;49892:23;49888:32;49885:52;;;49933:1;49930;49923:12;49885:52;49965:9;49959:16;50015:4;50008:5;50004:16;49997:5;49994:27;49984:55;;50035:1;50032;50025:12;50074:140;50132:5;50161:47;50202:4;50192:8;50188:19;50182:4;50161:47;:::i;51030:1386::-;51375:3;51364:9;51357:22;51338:4;51414:6;51408:13;51458:4;51452:3;51441:9;51437:19;51430:33;51486:63;51544:3;51533:9;51529:19;51515:12;51486:63;:::i;:::-;51568:4;51609:15;;;51603:22;-1:-1:-1;;51693:22:174;;;51689:31;;51683:3;51668:19;;51661:60;51770:21;;51800:22;;;51876:23;;;;-1:-1:-1;51568:4:174;;51917:1;;51644:8;51838:15;;;;51927:169;51941:6;51938:1;51935:13;51927:169;;;52002:13;;51990:26;;52071:15;;;;51963:1;51956:9;;;;;52036:12;;;;51927:169;;;51931:3;52145:4;52137:6;52133:17;52127:24;52105:46;;52213:2;52201:9;52196:3;52192:19;52188:28;52182:3;52171:9;52167:19;52160:57;52234:49;52279:3;52263:14;52234:49;:::i;:::-;52226:57;;;;;52292:74;52362:2;52351:9;52347:18;52339:6;50761:12;;-1:-1:-1;;;;;50757:53:174;50745:66;;50857:4;50846:16;;;50840:23;-1:-1:-1;;;;;50932:21:174;;;50916:14;;;50909:45;;;;51007:4;50996:16;;;50990:23;50986:32;50970:14;;50963:56;50663:362;52292:74;;;52403:6;52397:3;52386:9;52382:19;52375:35;51030:1386;;;;;;:::o;52610:127::-;52671:10;52666:3;52662:20;52659:1;52652:31;52702:4;52699:1;52692:15;52726:4;52723:1;52716:15;52742:521;52819:4;52825:6;52885:11;52872:25;52979:2;52975:7;52964:8;52948:14;52944:29;52940:43;52920:18;52916:68;52906:96;;52998:1;52995;52988:12;52906:96;53025:33;;53077:20;;;-1:-1:-1;;;;;;53109:30:174;;53106:50;;;53152:1;53149;53142:12;53106:50;53185:4;53173:17;;-1:-1:-1;53216:14:174;53212:27;;;53202:38;;53199:58;;;53253:1;53250;53243:12;54048:287;54177:3;54215:6;54209:13;54231:66;54290:6;54285:3;54278:4;54270:6;54266:17;54231:66;:::i;:::-;54313:16;;;;;54048:287;-1:-1:-1;;54048:287:174:o",
    "linkReferences": {
      "src/libraries/CapsLibrary.sol": {
        "CapsLibrary": [
          { "start": 3653, "length": 20 },
          { "start": 5941, "length": 20 },
          { "start": 14252, "length": 20 }
        ]
      },
      "src/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 3718, "length": 20 },
          { "start": 6326, "length": 20 },
          { "start": 6487, "length": 20 },
          { "start": 8327, "length": 20 },
          { "start": 9793, "length": 20 }
        ]
      },
      "src/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 3496, "length": 20 },
          { "start": 5682, "length": 20 },
          { "start": 9036, "length": 20 },
          { "start": 9362, "length": 20 },
          { "start": 9503, "length": 20 },
          { "start": 9986, "length": 20 },
          { "start": 10555, "length": 20 },
          { "start": 10961, "length": 20 },
          { "start": 11264, "length": 20 }
        ]
      },
      "src/libraries/YieldCurveLibrary.sol": {
        "YieldCurveLibrary": [{ "start": 12467, "length": 20 }]
      },
      "src/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 5126, "length": 20 },
          { "start": 5225, "length": 20 }
        ]
      },
      "src/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 3272, "length": 20 },
          { "start": 3374, "length": 20 },
          { "start": 4907, "length": 20 }
        ]
      },
      "src/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 11090, "length": 20 },
          { "start": 11189, "length": 20 }
        ]
      },
      "src/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 9146, "length": 20 },
          { "start": 9245, "length": 20 }
        ]
      },
      "src/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 3048, "length": 20 },
          { "start": 3147, "length": 20 }
        ]
      },
      "src/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 7830, "length": 20 },
          { "start": 7963, "length": 20 }
        ]
      },
      "src/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 10613, "length": 20 },
          { "start": 10712, "length": 20 },
          { "start": 10837, "length": 20 }
        ]
      },
      "src/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 5465, "length": 20 },
          { "start": 5567, "length": 20 },
          { "start": 5825, "length": 20 }
        ]
      },
      "src/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 8806, "length": 20 },
          { "start": 8904, "length": 20 }
        ]
      },
      "src/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 11653, "length": 20 },
          { "start": 11752, "length": 20 }
        ]
      },
      "src/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 10112, "length": 20 },
          { "start": 10211, "length": 20 }
        ]
      },
      "src/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5292, "length": 20 },
          { "start": 10306, "length": 20 },
          { "start": 10408, "length": 20 }
        ]
      },
      "src/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 4741, "length": 20 },
          { "start": 4840, "length": 20 }
        ]
      },
      "src/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 2834, "length": 20 },
          { "start": 2933, "length": 20 },
          { "start": 3942, "length": 20 },
          { "start": 8561, "length": 20 },
          { "start": 8693, "length": 20 }
        ]
      },
      "src/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 4094, "length": 20 },
          { "start": 4193, "length": 20 }
        ]
      }
    },
    "immutableReferences": {
      "43837": [
        { "start": 12961, "length": 32 },
        { "start": 13002, "length": 32 },
        { "start": 13323, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": "3746f858",
    "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "19a7359b",
    "claim((uint256))": "f45bf01c",
    "collateralRatio(address)": "ca40742c",
    "compensate((uint256,uint256,uint256))": "8e572776",
    "data()": "73d4a13a",
    "debtTokenAmountToCollateralTokenAmount(uint256)": "1970e5ea",
    "deposit((address,uint256,address))": "0cf8542f",
    "feeConfig()": "1e5eb1d0",
    "getBorrowOfferAPR(address,uint256)": "f85c3cd4",
    "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "2ed28ba2",
    "getCreditPosition(uint256)": "76c1b82f",
    "getDebtPosition(uint256)": "b5ec7487",
    "getDebtPositionAssignedCollateral(uint256)": "54137c7e",
    "getLoanOfferAPR(address,uint256)": "2cc884c5",
    "getLoanStatus(uint256)": "1c4fd41c",
    "getPositionsCount()": "1ca3b0cb",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "37501921",
    "getSwapFee(uint256,uint256)": "2c60185c",
    "getUserView(address)": "5cbc51eb",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,(uint256,uint256,uint256,uint256,uint256,address),(uint256,uint256,uint256,uint256,uint256,uint256),(address,uint64),(address,address,address,address,address))": "61a10df2",
    "isCreditPositionId(uint256)": "ccc96815",
    "isDebtPositionId(uint256)": "64eb0a71",
    "isDebtPositionLiquidatable(uint256)": "e5af06ce",
    "isUserUnderwater(address)": "f731a57a",
    "liquidate((uint256,uint256,uint256))": "e05001f5",
    "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": "3e3c119b",
    "multicall(bytes[])": "ac9650d8",
    "oracle()": "7dc0d1d0",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proxiableUUID()": "52d1902d",
    "renounceRole(bytes32,address)": "36568abe",
    "repay((uint256,address))": "7f417c06",
    "revokeRole(bytes32,address)": "d547741f",
    "riskConfig()": "7c90a6ca",
    "selfLiquidate((uint256))": "fd17174a",
    "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": "ccd8d4d1",
    "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "d8d933a5",
    "setUserConfiguration((uint256,bool,bool,uint256[]))": "2e106f21",
    "setVariablePoolBorrowRate(uint128)": "4cbd882c",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpause()": "3f4ba83a",
    "updateConfig((string,uint256))": "0317b9df",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "version()": "54fd4d50",
    "withdraw((address,uint256,address))": "2b4c9a20"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_OFFER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_TENOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cr\",\"type\":\"uint256\"}],\"name\":\"USER_IS_UNDERWATER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldBorrowRate\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newBorrowRate\",\"type\":\"uint128\"}],\"name\":\"VariablePoolBorrowRateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"compensate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nextDebtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextCreditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableScaledTokenV1_5\",\"name\":\"borrowAToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"debtToken\",\"type\":\"address\"},{\"internalType\":\"contract IPool\",\"name\":\"variablePool\",\"type\":\"address\"}],\"internalType\":\"struct DataView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowATokenAmount\",\"type\":\"uint256\"}],\"name\":\"debtTokenAmountToCollateralTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getBorrowOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getBuyCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCreditMarket.SwapDataBuyCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"getCreditPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"futureValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndexAtRepayment\",\"type\":\"uint256\"}],\"internalType\":\"struct DebtPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPositionAssignedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getLoanOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"getLoanStatus\",\"outputs\":[{\"internalType\":\"enum LoanStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPositionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getSellCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct SellCreditMarket.SwapDataSellCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getSwapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserView\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"loanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"borrowOffer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"}],\"internalType\":\"struct User\",\"name\":\"user\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct UserView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"f\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowAToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"r\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variablePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowATokenV1_5\",\"type\":\"address\"}],\"internalType\":\"struct InitializeDataParams\",\"name\":\"d\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"isCreditPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionLiquidatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserUnderwater\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateWithReplacementParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidateWithReplacement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitBorrowToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct RepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowAToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"selfLiquidate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setUserConfiguration\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"}],\"name\":\"setVariablePoolBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct UpdateConfigParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Size (https://size.credit/)\",\"custom:security-contact\":\"security@size.credit\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - uint256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - int256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)\"}},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"}},\"claim((uint256))\":{\"details\":\"Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before\",\"params\":{\"params\":\"ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim\"}},\"collateralRatio(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The collateral ratio of the user\"}},\"compensate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"data()\":{\"returns\":{\"_0\":\"The data view\"}},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"params\":{\"borrowATokenAmount\":\"The amount of borrow A tokens\"},\"returns\":{\"_0\":\"The equivalent amount of collateral tokens\"}},\"deposit((address,uint256,address))\":{\"details\":\"The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens\",\"params\":{\"params\":\"DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit\"}},\"feeConfig()\":{\"returns\":{\"_0\":\"The fee configuration parameters\"}},\"getBorrowOfferAPR(address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the borrow offer\"}},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for buying credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for buying credit as a market order\"}},\"getCreditPosition(uint256)\":{\"params\":{\"creditPositionId\":\"The ID of the credit position\"},\"returns\":{\"_0\":\"The CreditPosition struct containing the details of the credit position\"}},\"getDebtPosition(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The DebtPosition struct containing the details of the debt position\"}},\"getDebtPositionAssignedCollateral(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The assigned collateral amount\"}},\"getLoanOfferAPR(address,uint256)\":{\"params\":{\"lender\":\"The address of the lender\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the loan offer\"}},\"getLoanStatus(uint256)\":{\"params\":{\"positionId\":\"The ID of the position\"},\"returns\":{\"_0\":\"The loan status\"}},\"getPositionsCount()\":{\"returns\":{\"_0\":\"The count of debt positions and credit positions\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for selling credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for selling credit as a market order\"}},\"getSwapFee(uint256,uint256)\":{\"params\":{\"cash\":\"The cash amount\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The swap fee\"}},\"getUserView(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user view\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isCreditPositionId(uint256)\":{\"params\":{\"creditPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a credit position ID, false otherwise\"}},\"isDebtPositionId(uint256)\":{\"params\":{\"debtPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a debt position ID, false otherwise\"}},\"isDebtPositionLiquidatable(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"True if the debt position is liquidatable, false otherwise\"}},\"isUserUnderwater(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"True if the user is underwater, false otherwise\"}},\"liquidate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)\"},\"returns\":{\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens the the fee recipient received from the liquidation\"}},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"details\":\"This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned\",\"params\":{\"params\":\"LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"},\"returns\":{\"liquidatorProfitBorrowToken\":\"The amount of borrow tokens liquidator received from the liquidation\",\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens liquidator received from the liquidation\"}},\"multicall(bytes[])\":{\"details\":\"This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.\",\"params\":{\"data\":\"An array of bytes encoded function calls to be executed in sequence.\"},\"returns\":{\"results\":\"An array of bytes representing the return data from each function call executed.\"}},\"oracle()\":{\"returns\":{\"_0\":\"The oracle parameters\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"repay((uint256,address))\":{\"details\":\"The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim\",\"params\":{\"params\":\"RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"riskConfig()\":{\"returns\":{\"_0\":\"The risk configuration parameters\"}},\"selfLiquidate((uint256))\":{\"details\":\"The user is prevented to self liquidate if a regular liquidation would be profitable\",\"params\":{\"params\":\"SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate\"}},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - uint256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - int256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)\"}},\"sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)\"}},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"details\":\"By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.\",\"params\":{\"params\":\"SetUserConfigurationParams struct containing the following fields:     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions\"}},\"setVariablePoolBorrowRate(uint128)\":{\"details\":\"The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero\",\"params\":{\"borrowRate\":\"The new borrow rate\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateConfig((string,uint256))\":{\"details\":\"For `address` parameters, the `value` is converted to `uint160` and then to `address`\",\"params\":{\"params\":\"UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"version()\":{\"returns\":{\"_0\":\"The version of the Size protocol\"}},\"withdraw((address,uint256,address))\":{\"details\":\"This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens\",\"params\":{\"params\":\"WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal\"}}},\"title\":\"Size\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new loan offer in the orderbook\"},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Obtains credit via lending or buying existing credit\"},\"claim((uint256))\":{\"notice\":\"Claim the repayment of a loan with accrued interest from the Variable Pool\"},\"collateralRatio(address)\":{\"notice\":\"Get the collateral ratio of a user\"},\"data()\":{\"notice\":\"Get the data view\"},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"notice\":\"Convert debt token amount to collateral token amount\"},\"deposit((address,uint256,address))\":{\"notice\":\"Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Variable Pool,         Collateral tokens are deposited into the Size contract through the DepositTokenLibrary\"},\"feeConfig()\":{\"notice\":\"Get the fee configuration parameters\"},\"getBorrowOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a borrow offer\"},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Gets the swap data for buying credit as a market order\"},\"getCreditPosition(uint256)\":{\"notice\":\"Get the details of a credit position\"},\"getDebtPosition(uint256)\":{\"notice\":\"Get the details of a debt position\"},\"getDebtPositionAssignedCollateral(uint256)\":{\"notice\":\"Get the assigned collateral for a debt position\"},\"getLoanOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a loan offer\"},\"getLoanStatus(uint256)\":{\"notice\":\"Get the loan status for a given position ID\"},\"getPositionsCount()\":{\"notice\":\"Get the count of debt and credit positions\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Returns the swap data for selling credit as a market order\"},\"getSwapFee(uint256,uint256)\":{\"notice\":\"Get the swap fee for a given cash and tenor\"},\"getUserView(address)\":{\"notice\":\"Get the user view for a given user\"},\"isCreditPositionId(uint256)\":{\"notice\":\"Check if a given ID is a credit position ID\"},\"isDebtPositionId(uint256)\":{\"notice\":\"Check if a given ID is a debt position ID\"},\"isDebtPositionLiquidatable(uint256)\":{\"notice\":\"Check if a debt position is liquidatable\"},\"isUserUnderwater(address)\":{\"notice\":\"Check if a user is underwater\"},\"liquidate((uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower\"},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position with a replacement borrower\"},\"multicall(bytes[])\":{\"notice\":\"Executes multiple calls in a single transaction\"},\"oracle()\":{\"notice\":\"Get the oracle parameters\"},\"pause()\":{\"notice\":\"Pauses the protocol         Only callabe by the DEFAULT_ADMIN_ROLE\"},\"repay((uint256,address))\":{\"notice\":\"Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported\"},\"riskConfig()\":{\"notice\":\"Get the risk configuration parameters\"},\"selfLiquidate((uint256))\":{\"notice\":\"Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees\"},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new borrow offer in the orderbook\"},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"notice\":\"Set the credit positions for sale\"},\"setVariablePoolBorrowRate(uint128)\":{\"notice\":\"Sets the variable borrow rate         Only callabe by the BORROW_RATE_UPDATER_ROLE\"},\"unpause()\":{\"notice\":\"Unpauses the protocol         Only callabe by the DEFAULT_ADMIN_ROLE\"},\"updateConfig((string,uint256))\":{\"notice\":\"Updates the configuration of the protocol         Only callabe by the DEFAULT_ADMIN_ROLE\"},\"version()\":{\"notice\":\"Get the version of the Size protocol\"},\"withdraw((address,uint256,address))\":{\"notice\":\"Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Variable Pool         Collateral tokens are withdrawn from the Size contract through the DepositTokenLibrary\"}},\"notice\":\"See the documentation in {ISize}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Size.sol\":\"Size\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/aave-v3-core/contracts/\",\":@chainlink/=lib/chainlink/\",\":@chimera/=lib/chimera/src/\",\":@crytic/properties/=lib/properties/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@script/=script/\",\":@solady/=lib/solady/src/\",\":@src/=src/\",\":@test/=test/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ERC4626/=lib/properties/lib/ERC4626/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":chainlink/=lib/chainlink/contracts/\",\":chimera/=lib/chimera/src/\",\":ds-test/=lib/solady/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":properties/=lib/properties/contracts/\",\":solady/=lib/solady/\",\":solmate/=lib/properties/lib/solmate/src/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"lib/aave-v3-core/contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa\",\"dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf\"]},\"lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol\":{\"keccak256\":\"0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0\",\"dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7\"]},\"lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol\":{\"keccak256\":\"0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87\",\"dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3\"]},\"lib/aave-v3-core/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d\",\"dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM\"]},\"lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06\",\"dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx\"]},\"lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7\",\"dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da\",\"dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260\",\"dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df\",\"dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E\"]},\"src/Size.sol\":{\"keccak256\":\"0x8b033084ef443d8c7d2f3974891a717d44a4be329a0537353122efcf328f3c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f63b91b8a77c6af946d459fcc2865d0481c148662d382892854c06a36563ed25\",\"dweb:/ipfs/QmUV2VNSjmDYhLAxjR4z8LTszcSEmXdgsunNtcKueh6VZY\"]},\"src/SizeStorage.sol\":{\"keccak256\":\"0x6bfc7243642197db38417e78f41fd811f1ffb2ccca075f3124d9fc8f19244900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3707f07153112ab1cebe16b1ff471bfa21bcdcf3091e43e17a2f923465d4f8f2\",\"dweb:/ipfs/Qmc3pMvR4LnmgSuip7ehw7x8cg6tQuAY89hXmFicuSdJCk\"]},\"src/SizeView.sol\":{\"keccak256\":\"0x463645d98edb2ad19e4aec7f2cb35fb4001d622dd3568fc9596039be10645ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49f1880526ea3b5451500b593b20b44d5466cdb11bbd5539549eeb6fe4d4c252\",\"dweb:/ipfs/QmZFLvvrwjSyMW124FnDvSwwmKCn3bipkGQA5r58zokf35\"]},\"src/SizeViewData.sol\":{\"keccak256\":\"0x7e28749b5028c2815426edcdc33bd6f6fb7c58895d3307b027c7e43f0b966bd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63909e9222758008ffa1dae6476620bb45c1501dc0d52703cb2316bb21dd128f\",\"dweb:/ipfs/QmaNdQhtRkvTzYWFLLdzVkHNAKjJLH2r28cyFjLWocNjtr\"]},\"src/interfaces/IMulticall.sol\":{\"keccak256\":\"0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989\",\"dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R\"]},\"src/interfaces/ISize.sol\":{\"keccak256\":\"0xc10a7d10957ed6d5c7c2577dfa305600779d8cd78fad41967985d2a48a6abfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba233cbc9011676337ab397396fefb9814bc5085366a99f9034fd897ac7e2c91\",\"dweb:/ipfs/QmXao4Py2jpbEcPW1G5DCDLHqjMWz1NQDY7cokAjqnnyJC\"]},\"src/interfaces/ISizeAdmin.sol\":{\"keccak256\":\"0xb79c3b936f0079dc0746fc0b9a927306b9593f4ae49dfba831835c8235d0bb68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01057da51130ef1be6a42e98901586a803ed4b9905fb2aafb7c8c7ffa3d867da\",\"dweb:/ipfs/QmWCadbQvyQTgzSHetZhkiirvr4Cb61QAw52rJtzAHJsKW\"]},\"src/interfaces/ISizeView.sol\":{\"keccak256\":\"0xf0c726562162faf0cdbe3625377693e28907208b9dd49b5c40c47f1aa5494d77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e16cabcc49633bf417bfedc0a8dc17fb53c85d0261a36e02c447702a4fba8c05\",\"dweb:/ipfs/QmQ1eboCJTacwv4Jrd4ZPWoaRVPfvgkTD3LGaVJh2r8A34\"]},\"src/interfaces/IWETH.sol\":{\"keccak256\":\"0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e\",\"dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t\"]},\"src/libraries/AccountingLibrary.sol\":{\"keccak256\":\"0x66384014dcb822fda7b621bd6f31f997f3eb6246706b8274dc069cc9d4a1255d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7dce6d359e85a15029579ea61ca53fd4f39302c2e70d17717cc7263618d9d2e\",\"dweb:/ipfs/QmNnrUM9CHToHhWDfmCrXh9B1AkUv195dtcFDbnircp2p7\"]},\"src/libraries/CapsLibrary.sol\":{\"keccak256\":\"0xa2a1c1a8d5d2c4797156b571202fcc031e50e60cf89041d81b571adba775f8af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0c0c335d7a5be6f317af50feca479fb4f0ec1931a5f1d53f86eaa800c6608a\",\"dweb:/ipfs/QmVWdfds1DczpSF6V6H6mD1QGUtvX7dVsfFKAcdCNWyYsk\"]},\"src/libraries/DepositTokenLibrary.sol\":{\"keccak256\":\"0x3827cb93fb6904f3bf8680220991962b2d7963c4c34da5cd3a90dc663a535abf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ea06308e762ab6fbcb9b36cd4e159d0c9c9a6f004ec82cf62a2b641cb8c33a5\",\"dweb:/ipfs/QmTyVDFRVjqcansmUA2TNtKxUWFATx9dw5bJkiKTECpSaG\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x36c0a71c07f85ed9ce010bebc1b41fd560b8a4a10e5fddc8ba766fbee109865a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6abfbec31638ee54a9a1ef55b140842a6dacd823cf642c115c59584f620d614a\",\"dweb:/ipfs/QmWHpYog9FmTtACuePthKP8rjUJjuaM8A7DuMNpGdxjJJG\"]},\"src/libraries/Events.sol\":{\"keccak256\":\"0xe58f0a32179a1ca958ced1592ebfba53ba4f1904f142b9e95154f28eedbddd5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8988228c053196f8ba3315c080dd83e41821dfec6361d8bcfe71d64291cc9b77\",\"dweb:/ipfs/QmQfnDQFYu1TdmT52wjLrV3AmmwLo7mmeQV6rxtBLYvgus\"]},\"src/libraries/LoanLibrary.sol\":{\"keccak256\":\"0x90beab702b0e409188b2ac6c7b13d3f5787b99ecfac63c58943ace7b8f48af18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93ade5e1da3393808b03d49ef60285be7852f839c50098ea90fce31892b2af4a\",\"dweb:/ipfs/QmW2BrNXkdxX12Vizbkj8WKQVukzNKnNrj3CS5N28dCSTr\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0x445f0f8e7e74e16ce74d8563a083fa8c5a54142eb871f7e076f0569a5a940949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c34a2714a25dff091b872aa35056354c8a481112ff475204a31bc8db894eac3\",\"dweb:/ipfs/QmY5oew2GzqxaVA9f39hCr68V8tuhW5k4iB23kpXnPgx38\"]},\"src/libraries/Multicall.sol\":{\"keccak256\":\"0x131bebb184254dd1582caa922935e03a70cc9379794ecf0e7d3849c33b8e7509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6afec7cff97421a7682a3ab37725cc9d4161607caff250a34be76b318200f668\",\"dweb:/ipfs/QmQ8ZgKX3fnLPsYSpqVZpGuXu9qF4AxdkNSatUK5MDMP4z\"]},\"src/libraries/OfferLibrary.sol\":{\"keccak256\":\"0x29d066b3256b62a57ea7bc1acb3212396f134088ea7493998210a0a599a5d5a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25cb06d74b77061dfcf0adbdab25330dda042f41229ea6eab638a7e99d09b6fe\",\"dweb:/ipfs/QmVwDMpwD3z8dSodYRBDH7f56aovAhkCByZqgAuxCBk2Dt\"]},\"src/libraries/RiskLibrary.sol\":{\"keccak256\":\"0xd569b83082aa4b4d7de62cbd931211cded09aa1ae3431240311a47238c884a42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf3a18fd4a688f12d24a266c5a435dc6cf059457d2d76cb6ba7f10aeb610eec0\",\"dweb:/ipfs/QmRvYx7LLBgfCX6SsGrUzWM5PFS9JpAAr7wak5JN4pXVos\"]},\"src/libraries/YieldCurveLibrary.sol\":{\"keccak256\":\"0x7aad6c048e0d02ea1b0173e6ffeb626548a887a27019c785c98b98bd6835f7b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c615e561ff58811ff67c0c8acbd899208e52c4273afe848a932b58bcf5a6efd\",\"dweb:/ipfs/QmY4DnraC4wJqmzRxMd4aaCTBzzL4aGJXQkTr9JVyZwW7a\"]},\"src/libraries/actions/BuyCreditLimit.sol\":{\"keccak256\":\"0x0959ff2c4e63f0f99632ff444844ddd3ed9b8871f14070122d4233112b4a1e5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32cbcd20939318462262a77b8bb2309e2dbc348561d3def4dc4ade16027ff782\",\"dweb:/ipfs/QmdZQKrGgwebr7BiJ5PkmKV3ccLVji5wvr3ytV2kyNT1BK\"]},\"src/libraries/actions/BuyCreditMarket.sol\":{\"keccak256\":\"0x4b0f57a9b31964a6823c4ec46bbedc746f999239880d33485caafc6451e15525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a5b552cd5125a0c19ad48e28db1e4014a2276a3339faddbaa20ea2c7cdb1eb4\",\"dweb:/ipfs/QmS7J4DbhoH9n66kBunHAV369fkRPX4zpFAKhqvhhL8NhW\"]},\"src/libraries/actions/Claim.sol\":{\"keccak256\":\"0xcada138ab05e33023e17c2b03f1b3f5bb1f00b78e8f0968dd6ddb704ff9761dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8497094fc7e7cfc1ee3c49775ae89dced5e85a9a8f3d37af2f628e2d3141f90a\",\"dweb:/ipfs/QmSLiPfgvQyRUmBXhVcpy33K8knCJyGRzssnUHzPqP1inC\"]},\"src/libraries/actions/Compensate.sol\":{\"keccak256\":\"0x3d15283e62c33868c83ab01e72f949535dfd1a01c43ced3653ad9dc39bd5eb04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f1682c301bb50b7eaf84f69df79c5304a2491c7292740fe202128c2b653fc9\",\"dweb:/ipfs/Qme73q2xvwTpNM3hXKfqDtJUReYxJaEoygx8qm7xLPfm7Z\"]},\"src/libraries/actions/Deposit.sol\":{\"keccak256\":\"0xab2e2d6467d24f2cdc386ab58185c06c714903ea26b664bbd7253c4f066c3209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dc4f64cc85418ba5605b6bbb0b2b62486162e44d10c97c1678adf989beb3022\",\"dweb:/ipfs/QmXUAiRrvF7PcLhQrtAGtWAhu5DTw63kGe4fWBy3wJ6cmm\"]},\"src/libraries/actions/Initialize.sol\":{\"keccak256\":\"0xe520945d071ba15384e86c146081a0bbb2def1198bb8095e397c84416195fccd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e528f4b9db37d8ee6326e6bb708a66ff67f79d1c6a434eeca2abe21eddba1a3d\",\"dweb:/ipfs/QmaRRfPpCPKWNML6zuesecL3gRovoPwrQuPmi7vpRcQBmR\"]},\"src/libraries/actions/Liquidate.sol\":{\"keccak256\":\"0xea8015e96bec8bec5506334d956ed77491dc767333b04390ea960ba8f6fcfb12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fef65f4fb081eb136fda47fb8c789faf0bfc759495862360abf79d881b419f6\",\"dweb:/ipfs/QmTrEymdfHYvGxUHzGwxua9T6K3Q4GujfZq64QxMer4Jjz\"]},\"src/libraries/actions/LiquidateWithReplacement.sol\":{\"keccak256\":\"0xe65e4215a464c229f78b5db89bbfa7ca83cf90235dae3bd215aa68d6f9ce7ed4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6483f8addb248366d4211a1ef0d44aec71bb41ee29fc703d0c3a6f8766b43338\",\"dweb:/ipfs/QmUNaJvRWXSLtrtAJrQ9XpLanLpxdGbcvBLscfmMQr2VPF\"]},\"src/libraries/actions/Repay.sol\":{\"keccak256\":\"0x52aa744b525982d8d892d2f394be3c7f82ae536fa8aaf9b9ae89f538bd9c78bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b05a321df177c0212d73c77502790e085907f261a2575ce64db5b9e256c24ab\",\"dweb:/ipfs/QmXguVUCLZ7u7YgUNEhmRDJe2cbNL77vwFQsnF6KGe2HMB\"]},\"src/libraries/actions/SelfLiquidate.sol\":{\"keccak256\":\"0x1eee7ee0b08fbc9c5de58d30c23477886f03ad3503f608879aa2e53db57a352c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f7aef27da5d0b04e29ab6a19d8a1399c5af2646ab3fa317b4aa2dee6e4b18d9\",\"dweb:/ipfs/QmNxMjX2ZABujDAgc17SLC4gmLx8QGfjEhVKXNr9tsiXb4\"]},\"src/libraries/actions/SellCreditLimit.sol\":{\"keccak256\":\"0x466fac886eac9c4fd872e457a4ae38fcd33ffe66a7e320d97bdb2bf07fcbce29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1105d100a848a1982786885683885c2e8475f3700e1de9dc9b5df70ed6e5defb\",\"dweb:/ipfs/QmbDBJFfbcuSFQ3CPmwacYr1LcQS3yndUsk1kLnNdnQhNS\"]},\"src/libraries/actions/SellCreditMarket.sol\":{\"keccak256\":\"0x80ff15e9a2c517ec1dd4a7e72571734916903ddc653d7fa9eb380db4e82e70f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521886dff9afe878e422b49db3c72cc006b7a1d3a3077127fd98297931f67276\",\"dweb:/ipfs/QmXEeRTxomv227z9DR2YXofvCcBUzXFgMNrx3ooKRJDStV\"]},\"src/libraries/actions/SetUserConfiguration.sol\":{\"keccak256\":\"0x2dcd959ef9338d1e27c5905e07600b95ea0351d77603f5fe9b8292223138e671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de99454feaa5122030e16ccec433a2c59b06e4852c9c31109a273d6df9f8a31e\",\"dweb:/ipfs/QmfRxQs7fC3vy41swiH48FGU9jPTm47BeqQTxEmRyazTbc\"]},\"src/libraries/actions/UpdateConfig.sol\":{\"keccak256\":\"0xabec71215f2b58059caad21f322e6098b5b1613db35369cd74712d2763514f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1119b2e55537ff8c80f9337c6f97338b129f6da7939c60fc12bf11b8d6a5d0e4\",\"dweb:/ipfs/Qmdi7xy1hJQaQriRwbcTx3VxYCeYuLkuPdm7B9sNLMEpzu\"]},\"src/libraries/actions/Withdraw.sol\":{\"keccak256\":\"0xa199c5d3b21372df8cf74ad3a0244e66eeef9e8b4a12a796b2b5bfadccf10fa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8f69fc1cb77e87a61cf29573ef3a89a21b8af986ae3fe708293b0e6b2f18555\",\"dweb:/ipfs/QmevL6r4ytMoUTng6ogigwxMogARDbaE2ciqd3bh3oWNco\"]},\"src/oracle/IPriceFeed.sol\":{\"keccak256\":\"0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48\",\"dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ\"]},\"src/oracle/deprecated/IPriceFeedV1_5.sol\":{\"keccak256\":\"0xf0b6f95280951a54aabe0b8097d9039e8759bee26bcd52b0b330264b76acd33b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67e9c9a0a772be163072c3ac0dc648d6a41f66071ad7012b28535365e6797362\",\"dweb:/ipfs/QmPbWsYH7bYAMeUQZgPXgk4khuzoxY7U8LeTnxxtZpxRuh\"]},\"src/oracle/v1.5.1/IPriceFeedV1_5_1.sol\":{\"keccak256\":\"0x59d17de2525ca02c89d6706903b050e2491576bb20afca015dfc106970de041f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45d28143b6116c2cfc8ac9f8eab9c981b46426f8c0302e43349859d55d1a8491\",\"dweb:/ipfs/Qme7uCPmFFEwAi7xTssDirr8uDv41B8c7m43HqQWZoNCsW\"]},\"src/oracle/v1.5.1/PriceFeed.sol\":{\"keccak256\":\"0x72c64f98d31ac1b920560f359ac90a064e46c5c7e4fa9c5a88c0dbe7480fc82d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3dc5f3bf2e82295a63a37bba4ce81a239579dfa86e3d9e50ec3d84bc8b27f11\",\"dweb:/ipfs/QmUYaJGuCfPnXdiMmBU4pAMdbBD5NdU4hy6ncZqrcamSyP\"]},\"src/oracle/v1.5.1/adapters/ChainlinkPriceFeed.sol\":{\"keccak256\":\"0x075bc067a1ba2d2b007aaec9bf47ed1e81dd7156efd630ba13590a1cf3ed2101\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b93332b1eee585ec3c8c4b5ee6f4d8201d312f239c2b48791e93b42bc0f778\",\"dweb:/ipfs/QmSBYuwE2KbvHpy2CMMtLvJ4bGV2MYADePWWDT2txjgCKt\"]},\"src/oracle/v1.5.1/adapters/ChainlinkSequencerUptimeFeed.sol\":{\"keccak256\":\"0xc50f8de2486c61eca9d2b924fdddb98a3dc03189020c76447f3f2d7e5803096a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bc9ced597abb5e69eb988c7a5134517c6edbdc2905911811a1bdfb8b0b256b5\",\"dweb:/ipfs/QmNi3Vjppn4jxxyD3nebT9yoYtC1mMZ5mVMJ3r6E2KBWXa\"]},\"src/oracle/v1.5.1/adapters/UniswapV3PriceFeed.sol\":{\"keccak256\":\"0x2678af124c634a4db813611c76ad5f5a939166353ad0eea2f995914e4c7cba35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a56e82648fd1522c6589d7cca591b7286c02ca729824fcce8164f2936c9e8c0\",\"dweb:/ipfs/QmUaCpemZD53MBiNE6fzPAcKKu6CSCs5AHDuMigXnFsfvq\"]},\"src/token/NonTransferrableToken.sol\":{\"keccak256\":\"0x9d35c1c2e04ad372f006692153d544cc35d2d43e88b0fb17120ba7bf52cf53a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a0f7e7425172cffa7f36bd188ed8b196f369ab73f5894543abc1a7913e4591\",\"dweb:/ipfs/QmYpLrLTgAEiiPbVHDrKR9YE7Ti9LdXVYCHM199ezocTZe\"]},\"src/token/deprecated/NonTransferrableScaledTokenV1_2.sol\":{\"keccak256\":\"0xc791dccf6ea101ba629088b97fd57a48c54fcaeb9949096add972abe44e063d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5e4db6706df0c604a63b257bc897cfdd8a001b62037d8f5e1b05d2d49966373\",\"dweb:/ipfs/QmYzRXDF3zpgVkDbQDvBWaHKeviSHs5FcEJQZGrLSzLZFS\"]},\"src/v1.5/interfaces/ISizeFactory.sol\":{\"keccak256\":\"0x5f418a8d57b696ede91cf037e912f6a870a4ef7dc31b4b8ee6a943ae9ce647ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a1586f8db7f358440b5b7c56ce6c3057da7cd1d5db978fbffba10840ae6a21\",\"dweb:/ipfs/QmRmWVXhuFDs6avK33V4brFAzgNRnjkUxf92kk8keQDgce\"]},\"src/v1.5/token/NonTransferrableScaledTokenV1_5.sol\":{\"keccak256\":\"0x8e59d24aa4b9a09c0d5de01d830d04a54a7f8b64730a59314f6e6c2e0298c446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b1703dd3ac473c0977b359b794b363cf2145e5269f7b82003dd5b6858a3be19\",\"dweb:/ipfs/QmeyDYUGU7bYFy6GSdzPFZRbABb8rXAEvPSM1x29bbWEF3\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "EnforcedPause" },
        { "inputs": [], "type": "error", "name": "ExpectedPause" },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        { "inputs": [], "type": "error", "name": "NULL_OFFER" },
        { "inputs": [], "type": "error", "name": "NULL_TENOR" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "uint256", "name": "cr", "type": "uint256" }
          ],
          "type": "error",
          "name": "USER_IS_UNDERWATER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "oldBorrowRate",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "newBorrowRate",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VariablePoolBorrowRateUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct ClaimParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralRatio",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionToCompensateId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "data",
          "outputs": [
            {
              "internalType": "struct DataView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nextDebtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextCreditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableScaledTokenV1_5",
                  "name": "borrowAToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "debtToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IPool",
                  "name": "variablePool",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowATokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "debtTokenAmountToCollateralTokenAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeConfig",
          "outputs": [
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBuyCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCreditPosition",
          "outputs": [
            {
              "internalType": "struct CreditPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                { "internalType": "bool", "name": "forSale", "type": "bool" },
                {
                  "internalType": "uint256",
                  "name": "credit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPosition",
          "outputs": [
            {
              "internalType": "struct DebtPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "futureValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidityIndexAtRepayment",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPositionAssignedCollateral",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "lender", "type": "address" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanStatus",
          "outputs": [
            { "internalType": "enum LoanStatus", "name": "", "type": "uint8" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionsCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSellCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "cash", "type": "uint256" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSwapFee",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserView",
          "outputs": [
            {
              "internalType": "struct UserView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct User",
                  "name": "user",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct LimitOrder",
                      "name": "loanOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct LimitOrder",
                      "name": "borrowOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralTokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtBalance",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "f",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "r",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowAToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct InitializeOracleParams",
              "name": "o",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            },
            {
              "internalType": "struct InitializeDataParams",
              "name": "d",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "weth",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "variablePool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "borrowATokenV1_5",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCreditPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionLiquidatable",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isUserUnderwater",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateWithReplacementParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidateWithReplacement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidatorProfitBorrowToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes[]", "name": "_data", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            { "internalType": "bytes[]", "name": "results", "type": "bytes[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "struct InitializeOracleParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct RepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "riskConfig",
          "outputs": [
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowAToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidate"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "openingLimitBorrowCR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "creditPositionIdsForSale",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "creditPositionIds",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfiguration"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVariablePoolBorrowRate"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "struct UpdateConfigParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "string", "name": "key", "type": "string" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - uint256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - int256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)"
            }
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            }
          },
          "claim((uint256))": {
            "details": "Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before",
            "params": {
              "params": "ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim"
            }
          },
          "collateralRatio(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The collateral ratio of the user" }
          },
          "compensate((uint256,uint256,uint256))": {
            "params": {
              "params": "CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)"
            }
          },
          "constructor": { "custom:oz-upgrades-unsafe-allow": "constructor" },
          "data()": { "returns": { "_0": "The data view" } },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "params": { "borrowATokenAmount": "The amount of borrow A tokens" },
            "returns": { "_0": "The equivalent amount of collateral tokens" }
          },
          "deposit((address,uint256,address))": {
            "details": "The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens",
            "params": {
              "params": "DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit"
            }
          },
          "feeConfig()": {
            "returns": { "_0": "The fee configuration parameters" }
          },
          "getBorrowOfferAPR(address,uint256)": {
            "params": {
              "borrower": "The address of the borrower",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the borrow offer" }
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for buying credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for buying credit as a market order"
            }
          },
          "getCreditPosition(uint256)": {
            "params": { "creditPositionId": "The ID of the credit position" },
            "returns": {
              "_0": "The CreditPosition struct containing the details of the credit position"
            }
          },
          "getDebtPosition(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "The DebtPosition struct containing the details of the debt position"
            }
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": { "_0": "The assigned collateral amount" }
          },
          "getLoanOfferAPR(address,uint256)": {
            "params": {
              "lender": "The address of the lender",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the loan offer" }
          },
          "getLoanStatus(uint256)": {
            "params": { "positionId": "The ID of the position" },
            "returns": { "_0": "The loan status" }
          },
          "getPositionsCount()": {
            "returns": {
              "_0": "The count of debt positions and credit positions"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for selling credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for selling credit as a market order"
            }
          },
          "getSwapFee(uint256,uint256)": {
            "params": {
              "cash": "The cash amount",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The swap fee" }
          },
          "getUserView(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user view" }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isCreditPositionId(uint256)": {
            "params": { "creditPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a credit position ID, false otherwise"
            }
          },
          "isDebtPositionId(uint256)": {
            "params": { "debtPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a debt position ID, false otherwise"
            }
          },
          "isDebtPositionLiquidatable(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "True if the debt position is liquidatable, false otherwise"
            }
          },
          "isUserUnderwater(address)": {
            "params": { "user": "The address of the user" },
            "returns": {
              "_0": "True if the user is underwater, false otherwise"
            }
          },
          "liquidate((uint256,uint256,uint256))": {
            "params": {
              "params": "LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)"
            },
            "returns": {
              "liquidatorProfitCollateralToken": "The amount of collateral tokens the the fee recipient received from the liquidation"
            }
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "details": "This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned",
            "params": {
              "params": "LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            },
            "returns": {
              "liquidatorProfitBorrowToken": "The amount of borrow tokens liquidator received from the liquidation",
              "liquidatorProfitCollateralToken": "The amount of collateral tokens liquidator received from the liquidation"
            }
          },
          "multicall(bytes[])": {
            "details": "This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.",
            "params": {
              "data": "An array of bytes encoded function calls to be executed in sequence."
            },
            "returns": {
              "results": "An array of bytes representing the return data from each function call executed."
            }
          },
          "oracle()": { "returns": { "_0": "The oracle parameters" } },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "repay((uint256,address))": {
            "details": "The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim",
            "params": {
              "params": "RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "riskConfig()": {
            "returns": { "_0": "The risk configuration parameters" }
          },
          "selfLiquidate((uint256))": {
            "details": "The user is prevented to self liquidate if a regular liquidation would be profitable",
            "params": {
              "params": "SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate"
            }
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - uint256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - int256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)"
            }
          },
          "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)"
            }
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "details": "By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.",
            "params": {
              "params": "SetUserConfigurationParams struct containing the following fields:     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions"
            }
          },
          "setVariablePoolBorrowRate(uint128)": {
            "details": "The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero",
            "params": { "borrowRate": "The new borrow rate" }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "updateConfig((string,uint256))": {
            "details": "For `address` parameters, the `value` is converted to `uint160` and then to `address`",
            "params": {
              "params": "UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update"
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "version()": {
            "returns": { "_0": "The version of the Size protocol" }
          },
          "withdraw((address,uint256,address))": {
            "details": "This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens",
            "params": {
              "params": "WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new loan offer in the orderbook"
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Obtains credit via lending or buying existing credit"
          },
          "claim((uint256))": {
            "notice": "Claim the repayment of a loan with accrued interest from the Variable Pool"
          },
          "collateralRatio(address)": {
            "notice": "Get the collateral ratio of a user"
          },
          "data()": { "notice": "Get the data view" },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "notice": "Convert debt token amount to collateral token amount"
          },
          "deposit((address,uint256,address))": {
            "notice": "Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Variable Pool,         Collateral tokens are deposited into the Size contract through the DepositTokenLibrary"
          },
          "feeConfig()": { "notice": "Get the fee configuration parameters" },
          "getBorrowOfferAPR(address,uint256)": {
            "notice": "Get the APR for a borrow offer"
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Gets the swap data for buying credit as a market order"
          },
          "getCreditPosition(uint256)": {
            "notice": "Get the details of a credit position"
          },
          "getDebtPosition(uint256)": {
            "notice": "Get the details of a debt position"
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "notice": "Get the assigned collateral for a debt position"
          },
          "getLoanOfferAPR(address,uint256)": {
            "notice": "Get the APR for a loan offer"
          },
          "getLoanStatus(uint256)": {
            "notice": "Get the loan status for a given position ID"
          },
          "getPositionsCount()": {
            "notice": "Get the count of debt and credit positions"
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Returns the swap data for selling credit as a market order"
          },
          "getSwapFee(uint256,uint256)": {
            "notice": "Get the swap fee for a given cash and tenor"
          },
          "getUserView(address)": {
            "notice": "Get the user view for a given user"
          },
          "isCreditPositionId(uint256)": {
            "notice": "Check if a given ID is a credit position ID"
          },
          "isDebtPositionId(uint256)": {
            "notice": "Check if a given ID is a debt position ID"
          },
          "isDebtPositionLiquidatable(uint256)": {
            "notice": "Check if a debt position is liquidatable"
          },
          "isUserUnderwater(address)": {
            "notice": "Check if a user is underwater"
          },
          "liquidate((uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower"
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position with a replacement borrower"
          },
          "multicall(bytes[])": {
            "notice": "Executes multiple calls in a single transaction"
          },
          "oracle()": { "notice": "Get the oracle parameters" },
          "pause()": {
            "notice": "Pauses the protocol         Only callabe by the DEFAULT_ADMIN_ROLE"
          },
          "repay((uint256,address))": {
            "notice": "Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported"
          },
          "riskConfig()": { "notice": "Get the risk configuration parameters" },
          "selfLiquidate((uint256))": {
            "notice": "Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees"
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new borrow offer in the orderbook"
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "notice": "Set the credit positions for sale"
          },
          "setVariablePoolBorrowRate(uint128)": {
            "notice": "Sets the variable borrow rate         Only callabe by the BORROW_RATE_UPDATER_ROLE"
          },
          "unpause()": {
            "notice": "Unpauses the protocol         Only callabe by the DEFAULT_ADMIN_ROLE"
          },
          "updateConfig((string,uint256))": {
            "notice": "Updates the configuration of the protocol         Only callabe by the DEFAULT_ADMIN_ROLE"
          },
          "version()": { "notice": "Get the version of the Size protocol" },
          "withdraw((address,uint256,address))": {
            "notice": "Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Variable Pool         Collateral tokens are withdrawn from the Size contract through the DepositTokenLibrary"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=lib/aave-v3-core/contracts/",
        "@chainlink/=lib/chainlink/",
        "@chimera/=lib/chimera/src/",
        "@crytic/properties/=lib/properties/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@script/=script/",
        "@solady/=lib/solady/src/",
        "@src/=src/",
        "@test/=test/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "ERC4626/=lib/properties/lib/ERC4626/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "chainlink/=lib/chainlink/contracts/",
        "chimera/=lib/chimera/src/",
        "ds-test/=lib/solady/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "properties/=lib/properties/contracts/",
        "solady/=lib/solady/",
        "solmate/=lib/properties/lib/solmate/src/",
        "v3-core/=lib/v3-core/contracts/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Size.sol": "Size" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
        "keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
        "urls": [
          "bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
          "dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAToken.sol": {
        "keccak256": "0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417",
        "urls": [
          "bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa",
          "dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol": {
        "keccak256": "0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd",
        "urls": [
          "bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0",
          "dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol": {
        "keccak256": "0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee",
        "urls": [
          "bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87",
          "dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPool.sol": {
        "keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
        "urls": [
          "bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
          "dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol": {
        "keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
        "urls": [
          "bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
          "dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol": {
        "keccak256": "0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4",
        "urls": [
          "bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d",
          "dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol": {
        "keccak256": "0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07",
        "urls": [
          "bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06",
          "dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol": {
        "keccak256": "0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88",
        "urls": [
          "bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828",
          "dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xbca4a4f66d98028293dba695851d1b20d3e0ba2fff7453fb241f192fa3fc6b6f",
        "urls": [
          "bzz-raw://013b3cfd9d1e34dad409c3b9a340860e8651e61cda509de33599fb5102f62fe7",
          "dweb:/ipfs/QmTVjDKofM9Nst8w8LAA3HHgi1eCnGYBpFb7Nbat71e2xz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53",
        "urls": [
          "bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930",
          "dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
        "keccak256": "0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97",
        "urls": [
          "bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007",
          "dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8",
        "urls": [
          "bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45",
          "dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3",
        "urls": [
          "bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da",
          "dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c",
        "urls": [
          "bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9",
          "dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65",
        "urls": [
          "bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a",
          "dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
        "urls": [
          "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
          "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160",
        "urls": [
          "bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260",
          "dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f",
        "urls": [
          "bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df",
          "dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Size.sol": {
        "keccak256": "0x8b033084ef443d8c7d2f3974891a717d44a4be329a0537353122efcf328f3c1f",
        "urls": [
          "bzz-raw://f63b91b8a77c6af946d459fcc2865d0481c148662d382892854c06a36563ed25",
          "dweb:/ipfs/QmUV2VNSjmDYhLAxjR4z8LTszcSEmXdgsunNtcKueh6VZY"
        ],
        "license": "MIT"
      },
      "src/SizeStorage.sol": {
        "keccak256": "0x6bfc7243642197db38417e78f41fd811f1ffb2ccca075f3124d9fc8f19244900",
        "urls": [
          "bzz-raw://3707f07153112ab1cebe16b1ff471bfa21bcdcf3091e43e17a2f923465d4f8f2",
          "dweb:/ipfs/Qmc3pMvR4LnmgSuip7ehw7x8cg6tQuAY89hXmFicuSdJCk"
        ],
        "license": "MIT"
      },
      "src/SizeView.sol": {
        "keccak256": "0x463645d98edb2ad19e4aec7f2cb35fb4001d622dd3568fc9596039be10645ee6",
        "urls": [
          "bzz-raw://49f1880526ea3b5451500b593b20b44d5466cdb11bbd5539549eeb6fe4d4c252",
          "dweb:/ipfs/QmZFLvvrwjSyMW124FnDvSwwmKCn3bipkGQA5r58zokf35"
        ],
        "license": "MIT"
      },
      "src/SizeViewData.sol": {
        "keccak256": "0x7e28749b5028c2815426edcdc33bd6f6fb7c58895d3307b027c7e43f0b966bd6",
        "urls": [
          "bzz-raw://63909e9222758008ffa1dae6476620bb45c1501dc0d52703cb2316bb21dd128f",
          "dweb:/ipfs/QmaNdQhtRkvTzYWFLLdzVkHNAKjJLH2r28cyFjLWocNjtr"
        ],
        "license": "MIT"
      },
      "src/interfaces/IMulticall.sol": {
        "keccak256": "0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41",
        "urls": [
          "bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989",
          "dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISize.sol": {
        "keccak256": "0xc10a7d10957ed6d5c7c2577dfa305600779d8cd78fad41967985d2a48a6abfdd",
        "urls": [
          "bzz-raw://ba233cbc9011676337ab397396fefb9814bc5085366a99f9034fd897ac7e2c91",
          "dweb:/ipfs/QmXao4Py2jpbEcPW1G5DCDLHqjMWz1NQDY7cokAjqnnyJC"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISizeAdmin.sol": {
        "keccak256": "0xb79c3b936f0079dc0746fc0b9a927306b9593f4ae49dfba831835c8235d0bb68",
        "urls": [
          "bzz-raw://01057da51130ef1be6a42e98901586a803ed4b9905fb2aafb7c8c7ffa3d867da",
          "dweb:/ipfs/QmWCadbQvyQTgzSHetZhkiirvr4Cb61QAw52rJtzAHJsKW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISizeView.sol": {
        "keccak256": "0xf0c726562162faf0cdbe3625377693e28907208b9dd49b5c40c47f1aa5494d77",
        "urls": [
          "bzz-raw://e16cabcc49633bf417bfedc0a8dc17fb53c85d0261a36e02c447702a4fba8c05",
          "dweb:/ipfs/QmQ1eboCJTacwv4Jrd4ZPWoaRVPfvgkTD3LGaVJh2r8A34"
        ],
        "license": "MIT"
      },
      "src/interfaces/IWETH.sol": {
        "keccak256": "0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c",
        "urls": [
          "bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e",
          "dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t"
        ],
        "license": "MIT"
      },
      "src/libraries/AccountingLibrary.sol": {
        "keccak256": "0x66384014dcb822fda7b621bd6f31f997f3eb6246706b8274dc069cc9d4a1255d",
        "urls": [
          "bzz-raw://c7dce6d359e85a15029579ea61ca53fd4f39302c2e70d17717cc7263618d9d2e",
          "dweb:/ipfs/QmNnrUM9CHToHhWDfmCrXh9B1AkUv195dtcFDbnircp2p7"
        ],
        "license": "MIT"
      },
      "src/libraries/CapsLibrary.sol": {
        "keccak256": "0xa2a1c1a8d5d2c4797156b571202fcc031e50e60cf89041d81b571adba775f8af",
        "urls": [
          "bzz-raw://4e0c0c335d7a5be6f317af50feca479fb4f0ec1931a5f1d53f86eaa800c6608a",
          "dweb:/ipfs/QmVWdfds1DczpSF6V6H6mD1QGUtvX7dVsfFKAcdCNWyYsk"
        ],
        "license": "MIT"
      },
      "src/libraries/DepositTokenLibrary.sol": {
        "keccak256": "0x3827cb93fb6904f3bf8680220991962b2d7963c4c34da5cd3a90dc663a535abf",
        "urls": [
          "bzz-raw://2ea06308e762ab6fbcb9b36cd4e159d0c9c9a6f004ec82cf62a2b641cb8c33a5",
          "dweb:/ipfs/QmTyVDFRVjqcansmUA2TNtKxUWFATx9dw5bJkiKTECpSaG"
        ],
        "license": "MIT"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x36c0a71c07f85ed9ce010bebc1b41fd560b8a4a10e5fddc8ba766fbee109865a",
        "urls": [
          "bzz-raw://6abfbec31638ee54a9a1ef55b140842a6dacd823cf642c115c59584f620d614a",
          "dweb:/ipfs/QmWHpYog9FmTtACuePthKP8rjUJjuaM8A7DuMNpGdxjJJG"
        ],
        "license": "MIT"
      },
      "src/libraries/Events.sol": {
        "keccak256": "0xe58f0a32179a1ca958ced1592ebfba53ba4f1904f142b9e95154f28eedbddd5a",
        "urls": [
          "bzz-raw://8988228c053196f8ba3315c080dd83e41821dfec6361d8bcfe71d64291cc9b77",
          "dweb:/ipfs/QmQfnDQFYu1TdmT52wjLrV3AmmwLo7mmeQV6rxtBLYvgus"
        ],
        "license": "MIT"
      },
      "src/libraries/LoanLibrary.sol": {
        "keccak256": "0x90beab702b0e409188b2ac6c7b13d3f5787b99ecfac63c58943ace7b8f48af18",
        "urls": [
          "bzz-raw://93ade5e1da3393808b03d49ef60285be7852f839c50098ea90fce31892b2af4a",
          "dweb:/ipfs/QmW2BrNXkdxX12Vizbkj8WKQVukzNKnNrj3CS5N28dCSTr"
        ],
        "license": "MIT"
      },
      "src/libraries/Math.sol": {
        "keccak256": "0x445f0f8e7e74e16ce74d8563a083fa8c5a54142eb871f7e076f0569a5a940949",
        "urls": [
          "bzz-raw://9c34a2714a25dff091b872aa35056354c8a481112ff475204a31bc8db894eac3",
          "dweb:/ipfs/QmY5oew2GzqxaVA9f39hCr68V8tuhW5k4iB23kpXnPgx38"
        ],
        "license": "MIT"
      },
      "src/libraries/Multicall.sol": {
        "keccak256": "0x131bebb184254dd1582caa922935e03a70cc9379794ecf0e7d3849c33b8e7509",
        "urls": [
          "bzz-raw://6afec7cff97421a7682a3ab37725cc9d4161607caff250a34be76b318200f668",
          "dweb:/ipfs/QmQ8ZgKX3fnLPsYSpqVZpGuXu9qF4AxdkNSatUK5MDMP4z"
        ],
        "license": "MIT"
      },
      "src/libraries/OfferLibrary.sol": {
        "keccak256": "0x29d066b3256b62a57ea7bc1acb3212396f134088ea7493998210a0a599a5d5a5",
        "urls": [
          "bzz-raw://25cb06d74b77061dfcf0adbdab25330dda042f41229ea6eab638a7e99d09b6fe",
          "dweb:/ipfs/QmVwDMpwD3z8dSodYRBDH7f56aovAhkCByZqgAuxCBk2Dt"
        ],
        "license": "MIT"
      },
      "src/libraries/RiskLibrary.sol": {
        "keccak256": "0xd569b83082aa4b4d7de62cbd931211cded09aa1ae3431240311a47238c884a42",
        "urls": [
          "bzz-raw://cf3a18fd4a688f12d24a266c5a435dc6cf059457d2d76cb6ba7f10aeb610eec0",
          "dweb:/ipfs/QmRvYx7LLBgfCX6SsGrUzWM5PFS9JpAAr7wak5JN4pXVos"
        ],
        "license": "MIT"
      },
      "src/libraries/YieldCurveLibrary.sol": {
        "keccak256": "0x7aad6c048e0d02ea1b0173e6ffeb626548a887a27019c785c98b98bd6835f7b6",
        "urls": [
          "bzz-raw://6c615e561ff58811ff67c0c8acbd899208e52c4273afe848a932b58bcf5a6efd",
          "dweb:/ipfs/QmY4DnraC4wJqmzRxMd4aaCTBzzL4aGJXQkTr9JVyZwW7a"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/BuyCreditLimit.sol": {
        "keccak256": "0x0959ff2c4e63f0f99632ff444844ddd3ed9b8871f14070122d4233112b4a1e5e",
        "urls": [
          "bzz-raw://32cbcd20939318462262a77b8bb2309e2dbc348561d3def4dc4ade16027ff782",
          "dweb:/ipfs/QmdZQKrGgwebr7BiJ5PkmKV3ccLVji5wvr3ytV2kyNT1BK"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/BuyCreditMarket.sol": {
        "keccak256": "0x4b0f57a9b31964a6823c4ec46bbedc746f999239880d33485caafc6451e15525",
        "urls": [
          "bzz-raw://9a5b552cd5125a0c19ad48e28db1e4014a2276a3339faddbaa20ea2c7cdb1eb4",
          "dweb:/ipfs/QmS7J4DbhoH9n66kBunHAV369fkRPX4zpFAKhqvhhL8NhW"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Claim.sol": {
        "keccak256": "0xcada138ab05e33023e17c2b03f1b3f5bb1f00b78e8f0968dd6ddb704ff9761dc",
        "urls": [
          "bzz-raw://8497094fc7e7cfc1ee3c49775ae89dced5e85a9a8f3d37af2f628e2d3141f90a",
          "dweb:/ipfs/QmSLiPfgvQyRUmBXhVcpy33K8knCJyGRzssnUHzPqP1inC"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Compensate.sol": {
        "keccak256": "0x3d15283e62c33868c83ab01e72f949535dfd1a01c43ced3653ad9dc39bd5eb04",
        "urls": [
          "bzz-raw://b6f1682c301bb50b7eaf84f69df79c5304a2491c7292740fe202128c2b653fc9",
          "dweb:/ipfs/Qme73q2xvwTpNM3hXKfqDtJUReYxJaEoygx8qm7xLPfm7Z"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Deposit.sol": {
        "keccak256": "0xab2e2d6467d24f2cdc386ab58185c06c714903ea26b664bbd7253c4f066c3209",
        "urls": [
          "bzz-raw://9dc4f64cc85418ba5605b6bbb0b2b62486162e44d10c97c1678adf989beb3022",
          "dweb:/ipfs/QmXUAiRrvF7PcLhQrtAGtWAhu5DTw63kGe4fWBy3wJ6cmm"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Initialize.sol": {
        "keccak256": "0xe520945d071ba15384e86c146081a0bbb2def1198bb8095e397c84416195fccd",
        "urls": [
          "bzz-raw://e528f4b9db37d8ee6326e6bb708a66ff67f79d1c6a434eeca2abe21eddba1a3d",
          "dweb:/ipfs/QmaRRfPpCPKWNML6zuesecL3gRovoPwrQuPmi7vpRcQBmR"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Liquidate.sol": {
        "keccak256": "0xea8015e96bec8bec5506334d956ed77491dc767333b04390ea960ba8f6fcfb12",
        "urls": [
          "bzz-raw://6fef65f4fb081eb136fda47fb8c789faf0bfc759495862360abf79d881b419f6",
          "dweb:/ipfs/QmTrEymdfHYvGxUHzGwxua9T6K3Q4GujfZq64QxMer4Jjz"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/LiquidateWithReplacement.sol": {
        "keccak256": "0xe65e4215a464c229f78b5db89bbfa7ca83cf90235dae3bd215aa68d6f9ce7ed4",
        "urls": [
          "bzz-raw://6483f8addb248366d4211a1ef0d44aec71bb41ee29fc703d0c3a6f8766b43338",
          "dweb:/ipfs/QmUNaJvRWXSLtrtAJrQ9XpLanLpxdGbcvBLscfmMQr2VPF"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Repay.sol": {
        "keccak256": "0x52aa744b525982d8d892d2f394be3c7f82ae536fa8aaf9b9ae89f538bd9c78bc",
        "urls": [
          "bzz-raw://3b05a321df177c0212d73c77502790e085907f261a2575ce64db5b9e256c24ab",
          "dweb:/ipfs/QmXguVUCLZ7u7YgUNEhmRDJe2cbNL77vwFQsnF6KGe2HMB"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/SelfLiquidate.sol": {
        "keccak256": "0x1eee7ee0b08fbc9c5de58d30c23477886f03ad3503f608879aa2e53db57a352c",
        "urls": [
          "bzz-raw://1f7aef27da5d0b04e29ab6a19d8a1399c5af2646ab3fa317b4aa2dee6e4b18d9",
          "dweb:/ipfs/QmNxMjX2ZABujDAgc17SLC4gmLx8QGfjEhVKXNr9tsiXb4"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/SellCreditLimit.sol": {
        "keccak256": "0x466fac886eac9c4fd872e457a4ae38fcd33ffe66a7e320d97bdb2bf07fcbce29",
        "urls": [
          "bzz-raw://1105d100a848a1982786885683885c2e8475f3700e1de9dc9b5df70ed6e5defb",
          "dweb:/ipfs/QmbDBJFfbcuSFQ3CPmwacYr1LcQS3yndUsk1kLnNdnQhNS"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/SellCreditMarket.sol": {
        "keccak256": "0x80ff15e9a2c517ec1dd4a7e72571734916903ddc653d7fa9eb380db4e82e70f1",
        "urls": [
          "bzz-raw://521886dff9afe878e422b49db3c72cc006b7a1d3a3077127fd98297931f67276",
          "dweb:/ipfs/QmXEeRTxomv227z9DR2YXofvCcBUzXFgMNrx3ooKRJDStV"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/SetUserConfiguration.sol": {
        "keccak256": "0x2dcd959ef9338d1e27c5905e07600b95ea0351d77603f5fe9b8292223138e671",
        "urls": [
          "bzz-raw://de99454feaa5122030e16ccec433a2c59b06e4852c9c31109a273d6df9f8a31e",
          "dweb:/ipfs/QmfRxQs7fC3vy41swiH48FGU9jPTm47BeqQTxEmRyazTbc"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/UpdateConfig.sol": {
        "keccak256": "0xabec71215f2b58059caad21f322e6098b5b1613db35369cd74712d2763514f36",
        "urls": [
          "bzz-raw://1119b2e55537ff8c80f9337c6f97338b129f6da7939c60fc12bf11b8d6a5d0e4",
          "dweb:/ipfs/Qmdi7xy1hJQaQriRwbcTx3VxYCeYuLkuPdm7B9sNLMEpzu"
        ],
        "license": "MIT"
      },
      "src/libraries/actions/Withdraw.sol": {
        "keccak256": "0xa199c5d3b21372df8cf74ad3a0244e66eeef9e8b4a12a796b2b5bfadccf10fa9",
        "urls": [
          "bzz-raw://a8f69fc1cb77e87a61cf29573ef3a89a21b8af986ae3fe708293b0e6b2f18555",
          "dweb:/ipfs/QmevL6r4ytMoUTng6ogigwxMogARDbaE2ciqd3bh3oWNco"
        ],
        "license": "MIT"
      },
      "src/oracle/IPriceFeed.sol": {
        "keccak256": "0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90",
        "urls": [
          "bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48",
          "dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ"
        ],
        "license": "MIT"
      },
      "src/oracle/deprecated/IPriceFeedV1_5.sol": {
        "keccak256": "0xf0b6f95280951a54aabe0b8097d9039e8759bee26bcd52b0b330264b76acd33b",
        "urls": [
          "bzz-raw://67e9c9a0a772be163072c3ac0dc648d6a41f66071ad7012b28535365e6797362",
          "dweb:/ipfs/QmPbWsYH7bYAMeUQZgPXgk4khuzoxY7U8LeTnxxtZpxRuh"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/IPriceFeedV1_5_1.sol": {
        "keccak256": "0x59d17de2525ca02c89d6706903b050e2491576bb20afca015dfc106970de041f",
        "urls": [
          "bzz-raw://45d28143b6116c2cfc8ac9f8eab9c981b46426f8c0302e43349859d55d1a8491",
          "dweb:/ipfs/Qme7uCPmFFEwAi7xTssDirr8uDv41B8c7m43HqQWZoNCsW"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/PriceFeed.sol": {
        "keccak256": "0x72c64f98d31ac1b920560f359ac90a064e46c5c7e4fa9c5a88c0dbe7480fc82d",
        "urls": [
          "bzz-raw://b3dc5f3bf2e82295a63a37bba4ce81a239579dfa86e3d9e50ec3d84bc8b27f11",
          "dweb:/ipfs/QmUYaJGuCfPnXdiMmBU4pAMdbBD5NdU4hy6ncZqrcamSyP"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/adapters/ChainlinkPriceFeed.sol": {
        "keccak256": "0x075bc067a1ba2d2b007aaec9bf47ed1e81dd7156efd630ba13590a1cf3ed2101",
        "urls": [
          "bzz-raw://72b93332b1eee585ec3c8c4b5ee6f4d8201d312f239c2b48791e93b42bc0f778",
          "dweb:/ipfs/QmSBYuwE2KbvHpy2CMMtLvJ4bGV2MYADePWWDT2txjgCKt"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/adapters/ChainlinkSequencerUptimeFeed.sol": {
        "keccak256": "0xc50f8de2486c61eca9d2b924fdddb98a3dc03189020c76447f3f2d7e5803096a",
        "urls": [
          "bzz-raw://4bc9ced597abb5e69eb988c7a5134517c6edbdc2905911811a1bdfb8b0b256b5",
          "dweb:/ipfs/QmNi3Vjppn4jxxyD3nebT9yoYtC1mMZ5mVMJ3r6E2KBWXa"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/adapters/UniswapV3PriceFeed.sol": {
        "keccak256": "0x2678af124c634a4db813611c76ad5f5a939166353ad0eea2f995914e4c7cba35",
        "urls": [
          "bzz-raw://7a56e82648fd1522c6589d7cca591b7286c02ca729824fcce8164f2936c9e8c0",
          "dweb:/ipfs/QmUaCpemZD53MBiNE6fzPAcKKu6CSCs5AHDuMigXnFsfvq"
        ],
        "license": "MIT"
      },
      "src/token/NonTransferrableToken.sol": {
        "keccak256": "0x9d35c1c2e04ad372f006692153d544cc35d2d43e88b0fb17120ba7bf52cf53a4",
        "urls": [
          "bzz-raw://b9a0f7e7425172cffa7f36bd188ed8b196f369ab73f5894543abc1a7913e4591",
          "dweb:/ipfs/QmYpLrLTgAEiiPbVHDrKR9YE7Ti9LdXVYCHM199ezocTZe"
        ],
        "license": "MIT"
      },
      "src/token/deprecated/NonTransferrableScaledTokenV1_2.sol": {
        "keccak256": "0xc791dccf6ea101ba629088b97fd57a48c54fcaeb9949096add972abe44e063d4",
        "urls": [
          "bzz-raw://d5e4db6706df0c604a63b257bc897cfdd8a001b62037d8f5e1b05d2d49966373",
          "dweb:/ipfs/QmYzRXDF3zpgVkDbQDvBWaHKeviSHs5FcEJQZGrLSzLZFS"
        ],
        "license": "MIT"
      },
      "src/v1.5/interfaces/ISizeFactory.sol": {
        "keccak256": "0x5f418a8d57b696ede91cf037e912f6a870a4ef7dc31b4b8ee6a943ae9ce647ed",
        "urls": [
          "bzz-raw://36a1586f8db7f358440b5b7c56ce6c3057da7cd1d5db978fbffba10840ae6a21",
          "dweb:/ipfs/QmRmWVXhuFDs6avK33V4brFAzgNRnjkUxf92kk8keQDgce"
        ],
        "license": "MIT"
      },
      "src/v1.5/token/NonTransferrableScaledTokenV1_5.sol": {
        "keccak256": "0x8e59d24aa4b9a09c0d5de01d830d04a54a7f8b64730a59314f6e6c2e0298c446",
        "urls": [
          "bzz-raw://2b1703dd3ac473c0977b359b794b363cf2145e5269f7b82003dd5b6858a3be19",
          "dweb:/ipfs/QmeyDYUGU7bYFy6GSdzPFZRbABb8rXAEvPSM1x29bbWEF3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 108
}
