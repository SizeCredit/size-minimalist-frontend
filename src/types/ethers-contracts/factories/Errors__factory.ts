/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Errors, ErrorsInterface } from "../Errors";

const _abi = [
  {
    type: "error",
    name: "ALREADY_INITIALIZED",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "APR_GREATER_THAN_MAX_APR",
    inputs: [
      {
        name: "apr",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxAPR",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "APR_LOWER_THAN_MIN_APR",
    inputs: [
      {
        name: "apr",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minAPR",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ARRAY_LENGTHS_MISMATCH",
    inputs: [],
  },
  {
    type: "error",
    name: "BORROWER_IS_NOT_LENDER",
    inputs: [
      {
        name: "borrower",
        type: "address",
        internalType: "address",
      },
      {
        name: "lender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "BORROW_ATOKEN_CAP_EXCEEDED",
    inputs: [
      {
        name: "cap",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "BORROW_ATOKEN_INCREASE_EXCEEDS_DEBT_TOKEN_DECREASE",
    inputs: [
      {
        name: "borrowATokenIncrease",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "debtTokenDecrease",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "COMPENSATOR_IS_NOT_BORROWER",
    inputs: [
      {
        name: "compensator",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrower",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "CREDIT_LOWER_THAN_MINIMUM_CREDIT",
    inputs: [
      {
        name: "credit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minimumCreditBorrowAToken",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "CREDIT_LOWER_THAN_MINIMUM_CREDIT_OPENING",
    inputs: [
      {
        name: "credit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minimumCreditBorrowAToken",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "CREDIT_NOT_FOR_SALE",
    inputs: [
      {
        name: "creditPositionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "CREDIT_POSITION_ALREADY_CLAIMED",
    inputs: [
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "CREDIT_POSITION_NOT_TRANSFERRABLE",
    inputs: [
      {
        name: "creditPositionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "loanStatus",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "borrowerCR",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "CR_BELOW_OPENING_LIMIT_BORROW_CR",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "cr",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "riskCollateralRatio",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "DUE_DATE_GREATER_THAN_MAX_DUE_DATE",
    inputs: [
      {
        name: "dueDate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxDueDate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "DUE_DATE_NOT_COMPATIBLE",
    inputs: [
      {
        name: "dueDate1",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dueDate2",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "GRACE_PERIOD_NOT_OVER",
    inputs: [],
  },
  {
    type: "error",
    name: "INVALID_ADDRESS",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_AVERAGE_BLOCK_TIME",
    inputs: [],
  },
  {
    type: "error",
    name: "INVALID_BORROWER",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_BORROW_OFFER",
    inputs: [
      {
        name: "borrower",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_COLLATERAL_PERCENTAGE_PREMIUM",
    inputs: [
      {
        name: "percentage",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_COLLATERAL_RATIO",
    inputs: [
      {
        name: "cr",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_CREDIT_POSITION_ID",
    inputs: [
      {
        name: "creditPositionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_DEBT_POSITION_ID",
    inputs: [
      {
        name: "debtPositionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_DECIMALS",
    inputs: [
      {
        name: "decimals",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_KEY",
    inputs: [
      {
        name: "key",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_LENDER",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_LIQUIDATION_COLLATERAL_RATIO",
    inputs: [
      {
        name: "crOpening",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "crLiquidation",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_LOAN_OFFER",
    inputs: [
      {
        name: "lender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_MAXIMUM_TENOR",
    inputs: [
      {
        name: "maxTenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_MSG_VALUE",
    inputs: [
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_POSITION_ID",
    inputs: [
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_PRICE",
    inputs: [
      {
        name: "aggregator",
        type: "address",
        internalType: "address",
      },
      {
        name: "price",
        type: "int256",
        internalType: "int256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_STALE_PRICE_INTERVAL",
    inputs: [
      {
        name: "a",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "b",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_TENOR_RANGE",
    inputs: [
      {
        name: "minTenor",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxTenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_TOKEN",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_TWAP_WINDOW",
    inputs: [],
  },
  {
    type: "error",
    name: "LIQUIDATE_PROFIT_BELOW_MINIMUM_COLLATERAL_PROFIT",
    inputs: [
      {
        name: "liquidatorProfitCollateralToken",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minimumCollateralProfit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "LIQUIDATOR_IS_NOT_LENDER",
    inputs: [
      {
        name: "liquidator",
        type: "address",
        internalType: "address",
      },
      {
        name: "lender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "LOAN_ALREADY_REPAID",
    inputs: [
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "LOAN_NOT_ACTIVE",
    inputs: [
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "LOAN_NOT_LIQUIDATABLE",
    inputs: [
      {
        name: "debtPositionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "cr",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "loanStatus",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "LOAN_NOT_REPAID",
    inputs: [
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "LOAN_NOT_SELF_LIQUIDATABLE",
    inputs: [
      {
        name: "creditPositionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "cr",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "loanStatus",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "NOT_ENOUGH_BORROW_ATOKEN_BALANCE",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NOT_ENOUGH_BORROW_ATOKEN_LIQUIDITY",
    inputs: [
      {
        name: "liquidity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NOT_ENOUGH_CASH",
    inputs: [
      {
        name: "cash",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NOT_ENOUGH_CREDIT",
    inputs: [
      {
        name: "credit",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "required",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NOT_SUPPORTED",
    inputs: [],
  },
  {
    type: "error",
    name: "NULL_ADDRESS",
    inputs: [],
  },
  {
    type: "error",
    name: "NULL_AMOUNT",
    inputs: [],
  },
  {
    type: "error",
    name: "NULL_ARRAY",
    inputs: [],
  },
  {
    type: "error",
    name: "NULL_MAX_DUE_DATE",
    inputs: [],
  },
  {
    type: "error",
    name: "NULL_OFFER",
    inputs: [],
  },
  {
    type: "error",
    name: "NULL_STALE_PRICE",
    inputs: [],
  },
  {
    type: "error",
    name: "NULL_STALE_RATE",
    inputs: [],
  },
  {
    type: "error",
    name: "NULL_TENOR",
    inputs: [],
  },
  {
    type: "error",
    name: "PAST_DEADLINE",
    inputs: [
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "PAST_MAX_DUE_DATE",
    inputs: [
      {
        name: "maxDueDate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "REINITIALIZE_ALL_CLAIMS_PRESERVED",
    inputs: [
      {
        name: "newScaledTotalSupplyAfter",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newScaledTotalSupplyBefore",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "oldScaledTotalSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "REINITIALIZE_INSOLVENT",
    inputs: [
      {
        name: "newTotalSupplyAfter",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "newTotalSupplyBefore",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "aTokenBalance",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "REINITIALIZE_MIGRATION_EXPECTED_IN_ONE_TRANSACTION",
    inputs: [
      {
        name: "totalSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "REINITIALIZE_PER_USER_CHECK",
    inputs: [
      {
        name: "expected",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "actual",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "REINITIALIZE_PER_USER_CHECK_DELTA",
    inputs: [
      {
        name: "expected",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "actual",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "SEQUENCER_DOWN",
    inputs: [],
  },
  {
    type: "error",
    name: "STALE_PRICE",
    inputs: [
      {
        name: "aggregator",
        type: "address",
        internalType: "address",
      },
      {
        name: "updatedAt",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "STALE_RATE",
    inputs: [
      {
        name: "updatedAt",
        type: "uint128",
        internalType: "uint128",
      },
    ],
  },
  {
    type: "error",
    name: "TENORS_NOT_STRICTLY_INCREASING",
    inputs: [],
  },
  {
    type: "error",
    name: "TENOR_OUT_OF_RANGE",
    inputs: [
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minTenor",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxTenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "UNAUTHORIZED",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "USER_IS_UNDERWATER",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "cr",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "VALUE_GREATER_THAN_MAX",
    inputs: [
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "max",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
] as const;

const _bytecode =
  "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122008638325540612f55c212095b2e51b1f2fb33f01ea89f1fb7ac482f7a6840b8364736f6c63430008170033";

type ErrorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ErrorsConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Errors__factory extends ContractFactory {
  constructor(...args: ErrorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Errors & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Errors__factory {
    return super.connect(runner) as Errors__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ErrorsInterface {
    return new Interface(_abi) as ErrorsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Errors {
    return new Contract(address, _abi, runner) as unknown as Errors;
  }
}
