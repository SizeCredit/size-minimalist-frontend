/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export type InitializeFeeConfigParamsStruct = {
  swapFeeAPR: BigNumberish;
  fragmentationFee: BigNumberish;
  liquidationRewardPercent: BigNumberish;
  overdueCollateralProtocolPercent: BigNumberish;
  collateralProtocolPercent: BigNumberish;
  feeRecipient: AddressLike;
};

export type InitializeFeeConfigParamsStructOutput = [
  swapFeeAPR: bigint,
  fragmentationFee: bigint,
  liquidationRewardPercent: bigint,
  overdueCollateralProtocolPercent: bigint,
  collateralProtocolPercent: bigint,
  feeRecipient: string,
] & {
  swapFeeAPR: bigint;
  fragmentationFee: bigint;
  liquidationRewardPercent: bigint;
  overdueCollateralProtocolPercent: bigint;
  collateralProtocolPercent: bigint;
  feeRecipient: string;
};

export type InitializeRiskConfigParamsStruct = {
  crOpening: BigNumberish;
  crLiquidation: BigNumberish;
  minimumCreditBorrowAToken: BigNumberish;
  borrowATokenCap: BigNumberish;
  minTenor: BigNumberish;
  maxTenor: BigNumberish;
};

export type InitializeRiskConfigParamsStructOutput = [
  crOpening: bigint,
  crLiquidation: bigint,
  minimumCreditBorrowAToken: bigint,
  borrowATokenCap: bigint,
  minTenor: bigint,
  maxTenor: bigint,
] & {
  crOpening: bigint;
  crLiquidation: bigint;
  minimumCreditBorrowAToken: bigint;
  borrowATokenCap: bigint;
  minTenor: bigint;
  maxTenor: bigint;
};

export type InitializeOracleParamsStruct = {
  priceFeed: AddressLike;
  variablePoolBorrowRateStaleRateInterval: BigNumberish;
};

export type InitializeOracleParamsStructOutput = [
  priceFeed: string,
  variablePoolBorrowRateStaleRateInterval: bigint,
] & { priceFeed: string; variablePoolBorrowRateStaleRateInterval: bigint };

export type InitializeDataParamsStruct = {
  weth: AddressLike;
  underlyingCollateralToken: AddressLike;
  underlyingBorrowToken: AddressLike;
  variablePool: AddressLike;
  borrowATokenV1_5: AddressLike;
};

export type InitializeDataParamsStructOutput = [
  weth: string,
  underlyingCollateralToken: string,
  underlyingBorrowToken: string,
  variablePool: string,
  borrowATokenV1_5: string,
] & {
  weth: string;
  underlyingCollateralToken: string;
  underlyingBorrowToken: string;
  variablePool: string;
  borrowATokenV1_5: string;
};

export type PriceFeedParamsStruct = {
  uniswapV3Pool: AddressLike;
  twapWindow: BigNumberish;
  averageBlockTime: BigNumberish;
  baseToken: AddressLike;
  quoteToken: AddressLike;
  baseAggregator: AddressLike;
  quoteAggregator: AddressLike;
  baseStalePriceInterval: BigNumberish;
  quoteStalePriceInterval: BigNumberish;
  sequencerUptimeFeed: AddressLike;
};

export type PriceFeedParamsStructOutput = [
  uniswapV3Pool: string,
  twapWindow: bigint,
  averageBlockTime: bigint,
  baseToken: string,
  quoteToken: string,
  baseAggregator: string,
  quoteAggregator: string,
  baseStalePriceInterval: bigint,
  quoteStalePriceInterval: bigint,
  sequencerUptimeFeed: string,
] & {
  uniswapV3Pool: string;
  twapWindow: bigint;
  averageBlockTime: bigint;
  baseToken: string;
  quoteToken: string;
  baseAggregator: string;
  quoteAggregator: string;
  baseStalePriceInterval: bigint;
  quoteStalePriceInterval: bigint;
  sequencerUptimeFeed: string;
};

export interface SizeFactoryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "UPGRADE_INTERFACE_VERSION"
      | "acceptOwnership"
      | "addBorrowATokenV1_5"
      | "addMarket"
      | "addPriceFeed"
      | "createBorrowATokenV1_5"
      | "createMarket"
      | "createPriceFeed"
      | "getBorrowATokenV1_5"
      | "getBorrowATokenV1_5Descriptions"
      | "getBorrowATokensV1_5"
      | "getBorrowATokensV1_5Count"
      | "getMarket"
      | "getMarketDescriptions"
      | "getMarkets"
      | "getMarketsCount"
      | "getPriceFeed"
      | "getPriceFeedDescriptions"
      | "getPriceFeeds"
      | "getPriceFeedsCount"
      | "initialize"
      | "isBorrowATokenV1_5"
      | "isMarket"
      | "isPriceFeed"
      | "owner"
      | "pendingOwner"
      | "proxiableUUID"
      | "removeBorrowATokenV1_5"
      | "removeMarket"
      | "removePriceFeed"
      | "renounceOwnership"
      | "transferOwnership"
      | "upgradeToAndCall"
      | "version",
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "BorrowATokenV1_5Added"
      | "BorrowATokenV1_5Removed"
      | "Initialized"
      | "MarketAdded"
      | "MarketRemoved"
      | "OwnershipTransferStarted"
      | "OwnershipTransferred"
      | "PriceFeedAdded"
      | "PriceFeedRemoved"
      | "Upgraded",
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "UPGRADE_INTERFACE_VERSION",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "acceptOwnership",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "addBorrowATokenV1_5",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "addMarket",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "addPriceFeed",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "createBorrowATokenV1_5",
    values: [AddressLike, AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "createMarket",
    values: [
      InitializeFeeConfigParamsStruct,
      InitializeRiskConfigParamsStruct,
      InitializeOracleParamsStruct,
      InitializeDataParamsStruct,
    ],
  ): string;
  encodeFunctionData(
    functionFragment: "createPriceFeed",
    values: [PriceFeedParamsStruct],
  ): string;
  encodeFunctionData(
    functionFragment: "getBorrowATokenV1_5",
    values: [BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: "getBorrowATokenV1_5Descriptions",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "getBorrowATokensV1_5",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "getBorrowATokensV1_5Count",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "getMarket",
    values: [BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: "getMarketDescriptions",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "getMarkets",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "getMarketsCount",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "getPriceFeed",
    values: [BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: "getPriceFeedDescriptions",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "getPriceFeeds",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "getPriceFeedsCount",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "isBorrowATokenV1_5",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "isMarket",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "isPriceFeed",
    values: [AddressLike],
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pendingOwner",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "proxiableUUID",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "removeBorrowATokenV1_5",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "removeMarket",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "removePriceFeed",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike],
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeToAndCall",
    values: [AddressLike, BytesLike],
  ): string;
  encodeFunctionData(functionFragment: "version", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "UPGRADE_INTERFACE_VERSION",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptOwnership",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "addBorrowATokenV1_5",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: "addMarket", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addPriceFeed",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "createBorrowATokenV1_5",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "createMarket",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "createPriceFeed",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBorrowATokenV1_5",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBorrowATokenV1_5Descriptions",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBorrowATokensV1_5",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBorrowATokensV1_5Count",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: "getMarket", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getMarketDescriptions",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: "getMarkets", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getMarketsCount",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPriceFeed",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPriceFeedDescriptions",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPriceFeeds",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPriceFeedsCount",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isBorrowATokenV1_5",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: "isMarket", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isPriceFeed",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pendingOwner",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxiableUUID",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeBorrowATokenV1_5",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeMarket",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "removePriceFeed",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: "upgradeToAndCall",
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: "version", data: BytesLike): Result;
}

export namespace BorrowATokenV1_5AddedEvent {
  export type InputTuple = [borrowATokenV1_5: AddressLike, existed: boolean];
  export type OutputTuple = [borrowATokenV1_5: string, existed: boolean];
  export interface OutputObject {
    borrowATokenV1_5: string;
    existed: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BorrowATokenV1_5RemovedEvent {
  export type InputTuple = [borrowATokenV1_5: AddressLike, existed: boolean];
  export type OutputTuple = [borrowATokenV1_5: string, existed: boolean];
  export interface OutputObject {
    borrowATokenV1_5: string;
    existed: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MarketAddedEvent {
  export type InputTuple = [market: AddressLike, existed: boolean];
  export type OutputTuple = [market: string, existed: boolean];
  export interface OutputObject {
    market: string;
    existed: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MarketRemovedEvent {
  export type InputTuple = [market: AddressLike, existed: boolean];
  export type OutputTuple = [market: string, existed: boolean];
  export interface OutputObject {
    market: string;
    existed: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferStartedEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PriceFeedAddedEvent {
  export type InputTuple = [priceFeed: AddressLike, existed: boolean];
  export type OutputTuple = [priceFeed: string, existed: boolean];
  export interface OutputObject {
    priceFeed: string;
    existed: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PriceFeedRemovedEvent {
  export type InputTuple = [priceFeed: AddressLike, existed: boolean];
  export type OutputTuple = [priceFeed: string, existed: boolean];
  export interface OutputObject {
    priceFeed: string;
    existed: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpgradedEvent {
  export type InputTuple = [implementation: AddressLike];
  export type OutputTuple = [implementation: string];
  export interface OutputObject {
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface SizeFactory extends BaseContract {
  connect(runner?: ContractRunner | null): SizeFactory;
  waitForDeployment(): Promise<this>;

  interface: SizeFactoryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>,
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent,
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent,
  ): Promise<this>;

  UPGRADE_INTERFACE_VERSION: TypedContractMethod<[], [string], "view">;

  acceptOwnership: TypedContractMethod<[], [void], "nonpayable">;

  addBorrowATokenV1_5: TypedContractMethod<
    [borrowATokenV1_5: AddressLike],
    [boolean],
    "nonpayable"
  >;

  addMarket: TypedContractMethod<
    [market: AddressLike],
    [boolean],
    "nonpayable"
  >;

  addPriceFeed: TypedContractMethod<
    [priceFeed: AddressLike],
    [boolean],
    "nonpayable"
  >;

  createBorrowATokenV1_5: TypedContractMethod<
    [variablePool: AddressLike, underlyingBorrowToken: AddressLike],
    [string],
    "nonpayable"
  >;

  createMarket: TypedContractMethod<
    [
      feeConfigParams: InitializeFeeConfigParamsStruct,
      riskConfigParams: InitializeRiskConfigParamsStruct,
      oracleParams: InitializeOracleParamsStruct,
      dataParams: InitializeDataParamsStruct,
    ],
    [string],
    "nonpayable"
  >;

  createPriceFeed: TypedContractMethod<
    [_priceFeedParams: PriceFeedParamsStruct],
    [string],
    "nonpayable"
  >;

  getBorrowATokenV1_5: TypedContractMethod<
    [index: BigNumberish],
    [string],
    "view"
  >;

  getBorrowATokenV1_5Descriptions: TypedContractMethod<[], [string[]], "view">;

  getBorrowATokensV1_5: TypedContractMethod<[], [string[]], "view">;

  getBorrowATokensV1_5Count: TypedContractMethod<[], [bigint], "view">;

  getMarket: TypedContractMethod<[index: BigNumberish], [string], "view">;

  getMarketDescriptions: TypedContractMethod<[], [string[]], "view">;

  getMarkets: TypedContractMethod<[], [string[]], "view">;

  getMarketsCount: TypedContractMethod<[], [bigint], "view">;

  getPriceFeed: TypedContractMethod<[index: BigNumberish], [string], "view">;

  getPriceFeedDescriptions: TypedContractMethod<[], [string[]], "view">;

  getPriceFeeds: TypedContractMethod<[], [string[]], "view">;

  getPriceFeedsCount: TypedContractMethod<[], [bigint], "view">;

  initialize: TypedContractMethod<[_owner: AddressLike], [void], "nonpayable">;

  isBorrowATokenV1_5: TypedContractMethod<
    [candidate: AddressLike],
    [boolean],
    "view"
  >;

  isMarket: TypedContractMethod<[candidate: AddressLike], [boolean], "view">;

  isPriceFeed: TypedContractMethod<[candidate: AddressLike], [boolean], "view">;

  owner: TypedContractMethod<[], [string], "view">;

  pendingOwner: TypedContractMethod<[], [string], "view">;

  proxiableUUID: TypedContractMethod<[], [string], "view">;

  removeBorrowATokenV1_5: TypedContractMethod<
    [borrowATokenV1_5: AddressLike],
    [boolean],
    "nonpayable"
  >;

  removeMarket: TypedContractMethod<
    [market: AddressLike],
    [boolean],
    "nonpayable"
  >;

  removePriceFeed: TypedContractMethod<
    [priceFeed: AddressLike],
    [boolean],
    "nonpayable"
  >;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  upgradeToAndCall: TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;

  version: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment,
  ): T;

  getFunction(
    nameOrSignature: "UPGRADE_INTERFACE_VERSION",
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "acceptOwnership",
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addBorrowATokenV1_5",
  ): TypedContractMethod<
    [borrowATokenV1_5: AddressLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "addMarket",
  ): TypedContractMethod<[market: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "addPriceFeed",
  ): TypedContractMethod<[priceFeed: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "createBorrowATokenV1_5",
  ): TypedContractMethod<
    [variablePool: AddressLike, underlyingBorrowToken: AddressLike],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createMarket",
  ): TypedContractMethod<
    [
      feeConfigParams: InitializeFeeConfigParamsStruct,
      riskConfigParams: InitializeRiskConfigParamsStruct,
      oracleParams: InitializeOracleParamsStruct,
      dataParams: InitializeDataParamsStruct,
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createPriceFeed",
  ): TypedContractMethod<
    [_priceFeedParams: PriceFeedParamsStruct],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "getBorrowATokenV1_5",
  ): TypedContractMethod<[index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "getBorrowATokenV1_5Descriptions",
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getBorrowATokensV1_5",
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getBorrowATokensV1_5Count",
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMarket",
  ): TypedContractMethod<[index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "getMarketDescriptions",
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getMarkets",
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getMarketsCount",
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getPriceFeed",
  ): TypedContractMethod<[index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "getPriceFeedDescriptions",
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getPriceFeeds",
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getPriceFeedsCount",
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "initialize",
  ): TypedContractMethod<[_owner: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "isBorrowATokenV1_5",
  ): TypedContractMethod<[candidate: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isMarket",
  ): TypedContractMethod<[candidate: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isPriceFeed",
  ): TypedContractMethod<[candidate: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "owner",
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "pendingOwner",
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "proxiableUUID",
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "removeBorrowATokenV1_5",
  ): TypedContractMethod<
    [borrowATokenV1_5: AddressLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "removeMarket",
  ): TypedContractMethod<[market: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "removePriceFeed",
  ): TypedContractMethod<[priceFeed: AddressLike], [boolean], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceOwnership",
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "transferOwnership",
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "upgradeToAndCall",
  ): TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "version",
  ): TypedContractMethod<[], [string], "view">;

  getEvent(
    key: "BorrowATokenV1_5Added",
  ): TypedContractEvent<
    BorrowATokenV1_5AddedEvent.InputTuple,
    BorrowATokenV1_5AddedEvent.OutputTuple,
    BorrowATokenV1_5AddedEvent.OutputObject
  >;
  getEvent(
    key: "BorrowATokenV1_5Removed",
  ): TypedContractEvent<
    BorrowATokenV1_5RemovedEvent.InputTuple,
    BorrowATokenV1_5RemovedEvent.OutputTuple,
    BorrowATokenV1_5RemovedEvent.OutputObject
  >;
  getEvent(
    key: "Initialized",
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "MarketAdded",
  ): TypedContractEvent<
    MarketAddedEvent.InputTuple,
    MarketAddedEvent.OutputTuple,
    MarketAddedEvent.OutputObject
  >;
  getEvent(
    key: "MarketRemoved",
  ): TypedContractEvent<
    MarketRemovedEvent.InputTuple,
    MarketRemovedEvent.OutputTuple,
    MarketRemovedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferStarted",
  ): TypedContractEvent<
    OwnershipTransferStartedEvent.InputTuple,
    OwnershipTransferStartedEvent.OutputTuple,
    OwnershipTransferStartedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred",
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;
  getEvent(
    key: "PriceFeedAdded",
  ): TypedContractEvent<
    PriceFeedAddedEvent.InputTuple,
    PriceFeedAddedEvent.OutputTuple,
    PriceFeedAddedEvent.OutputObject
  >;
  getEvent(
    key: "PriceFeedRemoved",
  ): TypedContractEvent<
    PriceFeedRemovedEvent.InputTuple,
    PriceFeedRemovedEvent.OutputTuple,
    PriceFeedRemovedEvent.OutputObject
  >;
  getEvent(
    key: "Upgraded",
  ): TypedContractEvent<
    UpgradedEvent.InputTuple,
    UpgradedEvent.OutputTuple,
    UpgradedEvent.OutputObject
  >;

  filters: {
    "BorrowATokenV1_5Added(address,bool)": TypedContractEvent<
      BorrowATokenV1_5AddedEvent.InputTuple,
      BorrowATokenV1_5AddedEvent.OutputTuple,
      BorrowATokenV1_5AddedEvent.OutputObject
    >;
    BorrowATokenV1_5Added: TypedContractEvent<
      BorrowATokenV1_5AddedEvent.InputTuple,
      BorrowATokenV1_5AddedEvent.OutputTuple,
      BorrowATokenV1_5AddedEvent.OutputObject
    >;

    "BorrowATokenV1_5Removed(address,bool)": TypedContractEvent<
      BorrowATokenV1_5RemovedEvent.InputTuple,
      BorrowATokenV1_5RemovedEvent.OutputTuple,
      BorrowATokenV1_5RemovedEvent.OutputObject
    >;
    BorrowATokenV1_5Removed: TypedContractEvent<
      BorrowATokenV1_5RemovedEvent.InputTuple,
      BorrowATokenV1_5RemovedEvent.OutputTuple,
      BorrowATokenV1_5RemovedEvent.OutputObject
    >;

    "Initialized(uint64)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "MarketAdded(address,bool)": TypedContractEvent<
      MarketAddedEvent.InputTuple,
      MarketAddedEvent.OutputTuple,
      MarketAddedEvent.OutputObject
    >;
    MarketAdded: TypedContractEvent<
      MarketAddedEvent.InputTuple,
      MarketAddedEvent.OutputTuple,
      MarketAddedEvent.OutputObject
    >;

    "MarketRemoved(address,bool)": TypedContractEvent<
      MarketRemovedEvent.InputTuple,
      MarketRemovedEvent.OutputTuple,
      MarketRemovedEvent.OutputObject
    >;
    MarketRemoved: TypedContractEvent<
      MarketRemovedEvent.InputTuple,
      MarketRemovedEvent.OutputTuple,
      MarketRemovedEvent.OutputObject
    >;

    "OwnershipTransferStarted(address,address)": TypedContractEvent<
      OwnershipTransferStartedEvent.InputTuple,
      OwnershipTransferStartedEvent.OutputTuple,
      OwnershipTransferStartedEvent.OutputObject
    >;
    OwnershipTransferStarted: TypedContractEvent<
      OwnershipTransferStartedEvent.InputTuple,
      OwnershipTransferStartedEvent.OutputTuple,
      OwnershipTransferStartedEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;

    "PriceFeedAdded(address,bool)": TypedContractEvent<
      PriceFeedAddedEvent.InputTuple,
      PriceFeedAddedEvent.OutputTuple,
      PriceFeedAddedEvent.OutputObject
    >;
    PriceFeedAdded: TypedContractEvent<
      PriceFeedAddedEvent.InputTuple,
      PriceFeedAddedEvent.OutputTuple,
      PriceFeedAddedEvent.OutputObject
    >;

    "PriceFeedRemoved(address,bool)": TypedContractEvent<
      PriceFeedRemovedEvent.InputTuple,
      PriceFeedRemovedEvent.OutputTuple,
      PriceFeedRemovedEvent.OutputObject
    >;
    PriceFeedRemoved: TypedContractEvent<
      PriceFeedRemovedEvent.InputTuple,
      PriceFeedRemovedEvent.OutputTuple,
      PriceFeedRemovedEvent.OutputObject
    >;

    "Upgraded(address)": TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
    Upgraded: TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
  };
}
